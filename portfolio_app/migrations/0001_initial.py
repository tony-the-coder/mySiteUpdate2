# Generated by Django 5.2 on 2025-06-02 20:52

import django.db.models.deletion
import portfolio_app.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('description', models.TextField(blank=True, help_text='A short description for the category page (SEO).')),
                ('is_active', models.BooleanField(db_index=True, default=True)),
            ],
            options={
                'verbose_name': 'Blog Category',
                'verbose_name_plural': 'Blog Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContactInquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=25)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('NEW', 'New'), ('READ', 'Read'), ('RESPONDED', 'Responded'), ('ARCHIVED', 'Archived')], db_index=True, default='NEW', max_length=10)),
                ('internal_notes', models.TextField(blank=True, help_text='Internal notes about this inquiry.')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contact Inquiry',
                'verbose_name_plural': 'Contact Inquiries',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Python/Django, React, AI/ML, Full-Stack', max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=110, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional: A brief description of this category/tech stack.', null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
            ],
            options={
                'verbose_name': 'Portfolio Project Category',
                'verbose_name_plural': 'Portfolio Project Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=270, unique=True)),
                ('content', models.TextField(help_text='Main content of the blog post. Use Markdown or enable CKEditor.')),
                ('excerpt', models.TextField(blank=True, help_text='A short summary for list views and meta descriptions (SEO).')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog_featured_images/')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published')], db_index=True, default='DRAFT', max_length=10)),
                ('published_date', models.DateTimeField(blank=True, db_index=True, help_text="Set date to make post live (if status='Published'). Auto-set if published and date is blank.", null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Controls overall visibility. Set status to 'Draft' to unpublish.")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='portfolio_app.blogcategory')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-published_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of your coding project.', max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=270, unique=True)),
                ('featured_image', models.ImageField(blank=True, help_text='A screenshot or representative image for the project card.', null=True, upload_to='portfolio_featured_images/')),
                ('short_description', models.TextField(blank=True, help_text='A brief 1-2 sentence summary for list views or cards (used for meta descriptions too).')),
                ('details', models.TextField(help_text='Detailed description: project goals, challenges, solutions, your role, learnings.')),
                ('technologies_used', models.CharField(blank=True, help_text='Comma-separated list of key technologies (e.g., Python, Django, React, TensorFlow, Vite).', max_length=500)),
                ('github_url', models.URLField(blank=True, help_text='Link to the GitHub repository.', max_length=255, null=True)),
                ('live_demo_url', models.URLField(blank=True, help_text='Link to the live deployed project.', max_length=255, null=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order for display (lower numbers show first).')),
                ('status', models.CharField(blank=True, choices=[('COMPLETED', 'Completed'), ('IN_PROGRESS', 'In Progress'), ('CONCEPT', 'Concept/Learning')], default='COMPLETED', help_text='Current status of this coding project.', max_length=20)),
                ('year_completed', models.PositiveIntegerField(blank=True, help_text='Year the project was primarily developed or completed.', null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Controls if this project is visible on your public portfolio.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(blank=True, help_text='Select one or more categories/tech stacks for this project (e.g., Python, React, AI).', related_name='portfolio_projects', to='portfolio_app.portfoliocategory')),
            ],
            options={
                'verbose_name': 'Coding Project',
                'verbose_name_plural': 'Coding Projects',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=portfolio_app.models.get_portfolio_image_upload_path)),
                ('caption', models.CharField(blank=True, help_text='Optional caption (e.g., specific feature screenshot).', max_length=255)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of image in the gallery (lower numbers show first).')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('portfolio_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='portfolio_app.portfolioproject')),
            ],
            options={
                'verbose_name': 'Coding Project Image',
                'verbose_name_plural': 'Coding Project Images',
                'ordering': ['portfolio_project', 'order', 'uploaded_at'],
            },
        ),
    ]
