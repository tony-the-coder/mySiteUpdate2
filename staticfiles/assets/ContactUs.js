const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/globe.js","assets/index.js","assets/index.css","assets/proxy.js"])))=>i.map(i=>d[i]);
import{b as um,g as ly,a as cy,r as ce,j as ge,_ as Rb}from"./index.js";import{k as Db}from"./proxy.js";/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Uh="177",Ub={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Nb={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},uy=0,Gp=1,hy=2,Lb=3,fy=0,Nh=1,xl=2,Wi=3,Ps=0,qn=1,ss=2,Ns=0,ir=1,kp=2,Wp=3,Xp=4,dy=5,la=100,py=101,my=102,gy=103,vy=104,_y=200,yy=201,xy=202,Sy=203,Vu=204,Gu=205,My=206,by=207,Ey=208,Ty=209,Ay=210,wy=211,Cy=212,Ry=213,Dy=214,ku=0,Wu=1,Xu=2,rr=3,qu=4,Yu=5,Zu=6,ju=7,jl=0,Uy=1,Ny=2,rs=0,Ly=1,Py=2,Iy=3,hm=4,Oy=5,By=6,zy=7,qp="attached",Fy="detached",Lh=300,Is=301,ha=302,Ul=303,Nl=304,Eo=306,Ll=1e3,Ui=1001,Pl=1002,Tn=1003,fm=1004,Pb=1004,oo=1005,Ib=1005,dn=1006,Sl=1007,Ob=1007,as=1008,Bb=1008,Li=1009,dm=1010,pm=1011,po=1012,Ph=1013,Os=1014,ii=1015,To=1016,Ih=1017,Oh=1018,mo=1020,mm=35902,gm=1021,vm=1022,On=1023,go=1026,vo=1027,Bh=1028,Kl=1029,_m=1030,zh=1031,zb=1032,Fh=1033,Ml=33776,bl=33777,El=33778,Tl=33779,Ku=35840,Ju=35841,Qu=35842,$u=35843,th=36196,eh=37492,nh=37496,ih=37808,sh=37809,ah=37810,rh=37811,oh=37812,lh=37813,ch=37814,uh=37815,hh=37816,fh=37817,dh=37818,ph=37819,mh=37820,gh=37821,Al=36492,vh=36494,_h=36495,ym=36283,yh=36284,xh=36285,Sh=36286,Hy=2200,Vy=2201,Gy=2202,Il=2300,Mh=2301,Ou=2302,tr=2400,er=2401,Ol=2402,Hh=2500,xm=2501,Fb=0,Hb=1,Vb=2,ky=3200,Wy=3201,Gb=3202,kb=3203,pa=0,Xy=1,Rs="",In="srgb",fa="srgb-linear",Bl="linear",He="srgb",Wb=0,Ja=7680,Xb=7681,qb=7682,Yb=7683,Zb=34055,jb=34056,Kb=5386,Jb=512,Qb=513,$b=514,tE=515,eE=516,nE=517,iE=518,Yp=519,qy=512,Yy=513,Zy=514,Sm=515,jy=516,Ky=517,Jy=518,Qy=519,zl=35044,sE=35048,aE=35040,rE=35045,oE=35049,lE=35041,cE=35046,uE=35050,hE=35042,fE="100",Zp="300 es",Ni=2e3,Fl=2001,dE={COMPUTE:"compute",RENDER:"render"},pE={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},mE={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FLAT_FIRST:"flat first",FLAT_EITHER:"flat either"};class cs{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const i=n[t];if(i!==void 0){const o=i.indexOf(e);o!==-1&&i.splice(o,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let o=0,l=i.length;o<l;o++)i[o].call(this,t);t.target=null}}}const Nn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let lv=1234567;const sr=Math.PI/180,_o=180/Math.PI;function _i(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Nn[s&255]+Nn[s>>8&255]+Nn[s>>16&255]+Nn[s>>24&255]+"-"+Nn[t&255]+Nn[t>>8&255]+"-"+Nn[t>>16&15|64]+Nn[t>>24&255]+"-"+Nn[e&63|128]+Nn[e>>8&255]+"-"+Nn[e>>16&255]+Nn[e>>24&255]+Nn[n&255]+Nn[n>>8&255]+Nn[n>>16&255]+Nn[n>>24&255]).toLowerCase()}function de(s,t,e){return Math.max(t,Math.min(e,s))}function Mm(s,t){return(s%t+t)%t}function gE(s,t,e,n,i){return n+(s-t)*(i-n)/(e-t)}function vE(s,t,e){return s!==t?(e-s)/(t-s):0}function wl(s,t,e){return(1-e)*s+e*t}function _E(s,t,e,n){return wl(s,t,1-Math.exp(-e*n))}function yE(s,t=1){return t-Math.abs(Mm(s,t*2)-t)}function xE(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*(3-2*s))}function SE(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*s*(s*(s*6-15)+10))}function ME(s,t){return s+Math.floor(Math.random()*(t-s+1))}function bE(s,t){return s+Math.random()*(t-s)}function EE(s){return s*(.5-Math.random())}function TE(s){s!==void 0&&(lv=s);let t=lv+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function AE(s){return s*sr}function wE(s){return s*_o}function CE(s){return(s&s-1)===0&&s!==0}function RE(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function DE(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function UE(s,t,e,n,i){const o=Math.cos,l=Math.sin,c=o(e/2),h=l(e/2),f=o((t+n)/2),p=l((t+n)/2),m=o((t-n)/2),g=l((t-n)/2),v=o((n-t)/2),x=l((n-t)/2);switch(i){case"XYX":s.set(c*p,h*m,h*g,c*f);break;case"YZY":s.set(h*g,c*p,h*m,c*f);break;case"ZXZ":s.set(h*m,h*g,c*p,c*f);break;case"XZX":s.set(c*p,h*x,h*v,c*f);break;case"YXY":s.set(h*v,c*p,h*x,c*f);break;case"ZYZ":s.set(h*x,h*v,c*p,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Xn(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function ve(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const NE={DEG2RAD:sr,RAD2DEG:_o,generateUUID:_i,clamp:de,euclideanModulo:Mm,mapLinear:gE,inverseLerp:vE,lerp:wl,damp:_E,pingpong:yE,smoothstep:xE,smootherstep:SE,randInt:ME,randFloat:bE,randFloatSpread:EE,seededRandom:TE,degToRad:AE,radToDeg:wE,isPowerOfTwo:CE,ceilPowerOfTwo:RE,floorPowerOfTwo:DE,setQuaternionFromProperEuler:UE,normalize:ve,denormalize:Xn};class pt{constructor(t=0,e=0){pt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=de(this.x,t.x,e.x),this.y=de(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=de(this.x,t,e),this.y=de(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(de(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(de(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),o=this.x-t.x,l=this.y-t.y;return this.x=o*n-l*i+t.x,this.y=o*i+l*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class si{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,o,l,c){let h=n[i+0],f=n[i+1],p=n[i+2],m=n[i+3];const g=o[l+0],v=o[l+1],x=o[l+2],b=o[l+3];if(c===0){t[e+0]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m;return}if(c===1){t[e+0]=g,t[e+1]=v,t[e+2]=x,t[e+3]=b;return}if(m!==b||h!==g||f!==v||p!==x){let S=1-c;const y=h*g+f*v+p*x+m*b,E=y>=0?1:-1,A=1-y*y;if(A>Number.EPSILON){const L=Math.sqrt(A),D=Math.atan2(L,y*E);S=Math.sin(S*D)/L,c=Math.sin(c*D)/L}const T=c*E;if(h=h*S+g*T,f=f*S+v*T,p=p*S+x*T,m=m*S+b*T,S===1-c){const L=1/Math.sqrt(h*h+f*f+p*p+m*m);h*=L,f*=L,p*=L,m*=L}}t[e]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,i,o,l){const c=n[i],h=n[i+1],f=n[i+2],p=n[i+3],m=o[l],g=o[l+1],v=o[l+2],x=o[l+3];return t[e]=c*x+p*m+h*v-f*g,t[e+1]=h*x+p*g+f*m-c*v,t[e+2]=f*x+p*v+c*g-h*m,t[e+3]=p*x-c*m-h*g-f*v,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,o=t._z,l=t._order,c=Math.cos,h=Math.sin,f=c(n/2),p=c(i/2),m=c(o/2),g=h(n/2),v=h(i/2),x=h(o/2);switch(l){case"XYZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"YXZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"ZXY":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"ZYX":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"YZX":this._x=g*p*m+f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m-g*v*x;break;case"XZY":this._x=g*p*m-f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m+g*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],o=e[8],l=e[1],c=e[5],h=e[9],f=e[2],p=e[6],m=e[10],g=n+c+m;if(g>0){const v=.5/Math.sqrt(g+1);this._w=.25/v,this._x=(p-h)*v,this._y=(o-f)*v,this._z=(l-i)*v}else if(n>c&&n>m){const v=2*Math.sqrt(1+n-c-m);this._w=(p-h)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(o+f)/v}else if(c>m){const v=2*Math.sqrt(1+c-n-m);this._w=(o-f)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(h+p)/v}else{const v=2*Math.sqrt(1+m-n-c);this._w=(l-i)/v,this._x=(o+f)/v,this._y=(h+p)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(de(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,o=t._z,l=t._w,c=e._x,h=e._y,f=e._z,p=e._w;return this._x=n*p+l*c+i*f-o*h,this._y=i*p+l*h+o*c-n*f,this._z=o*p+l*f+n*h-i*c,this._w=l*p-n*c-i*h-o*f,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,o=this._z,l=this._w;let c=l*t._w+n*t._x+i*t._y+o*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=n,this._y=i,this._z=o,this;const h=1-c*c;if(h<=Number.EPSILON){const v=1-e;return this._w=v*l+e*this._w,this._x=v*n+e*this._x,this._y=v*i+e*this._y,this._z=v*o+e*this._z,this.normalize(),this}const f=Math.sqrt(h),p=Math.atan2(f,c),m=Math.sin((1-e)*p)/f,g=Math.sin(e*p)/f;return this._w=l*m+this._w*g,this._x=n*m+this._x*g,this._y=i*m+this._y*g,this._z=o*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),o=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),o*Math.sin(e),o*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class B{constructor(t=0,e=0,n=0){B.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(cv.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(cv.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[3]*n+o[6]*i,this.y=o[1]*e+o[4]*n+o[7]*i,this.z=o[2]*e+o[5]*n+o[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=t.elements,l=1/(o[3]*e+o[7]*n+o[11]*i+o[15]);return this.x=(o[0]*e+o[4]*n+o[8]*i+o[12])*l,this.y=(o[1]*e+o[5]*n+o[9]*i+o[13])*l,this.z=(o[2]*e+o[6]*n+o[10]*i+o[14])*l,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,o=t.x,l=t.y,c=t.z,h=t.w,f=2*(l*i-c*n),p=2*(c*e-o*i),m=2*(o*n-l*e);return this.x=e+h*f+l*m-c*p,this.y=n+h*p+c*f-o*m,this.z=i+h*m+o*p-l*f,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i,this.y=o[1]*e+o[5]*n+o[9]*i,this.z=o[2]*e+o[6]*n+o[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=de(this.x,t.x,e.x),this.y=de(this.y,t.y,e.y),this.z=de(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=de(this.x,t,e),this.y=de(this.y,t,e),this.z=de(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(de(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,o=t.z,l=e.x,c=e.y,h=e.z;return this.x=i*h-o*c,this.y=o*l-n*h,this.z=n*c-i*l,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Id.copy(this).projectOnVector(t),this.sub(Id)}reflect(t){return this.sub(Id.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(de(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Id=new B,cv=new si;class pe{constructor(t,e,n,i,o,l,c,h,f){pe.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f)}set(t,e,n,i,o,l,c,h,f){const p=this.elements;return p[0]=t,p[1]=i,p[2]=c,p[3]=e,p[4]=o,p[5]=h,p[6]=n,p[7]=l,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[3],h=n[6],f=n[1],p=n[4],m=n[7],g=n[2],v=n[5],x=n[8],b=i[0],S=i[3],y=i[6],E=i[1],A=i[4],T=i[7],L=i[2],D=i[5],P=i[8];return o[0]=l*b+c*E+h*L,o[3]=l*S+c*A+h*D,o[6]=l*y+c*T+h*P,o[1]=f*b+p*E+m*L,o[4]=f*S+p*A+m*D,o[7]=f*y+p*T+m*P,o[2]=g*b+v*E+x*L,o[5]=g*S+v*A+x*D,o[8]=g*y+v*T+x*P,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8];return e*l*p-e*c*f-n*o*p+n*c*h+i*o*f-i*l*h}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=p*l-c*f,g=c*h-p*o,v=f*o-l*h,x=e*m+n*g+i*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/x;return t[0]=m*b,t[1]=(i*f-p*n)*b,t[2]=(c*n-i*l)*b,t[3]=g*b,t[4]=(p*e-i*h)*b,t[5]=(i*o-c*e)*b,t[6]=v*b,t[7]=(n*h-f*e)*b,t[8]=(l*e-n*o)*b,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,o,l,c){const h=Math.cos(o),f=Math.sin(o);return this.set(n*h,n*f,-n*(h*l+f*c)+l+t,-i*f,i*h,-i*(-f*l+h*c)+c+e,0,0,1),this}scale(t,e){return this.premultiply(Od.makeScale(t,e)),this}rotate(t){return this.premultiply(Od.makeRotation(-t)),this}translate(t,e){return this.premultiply(Od.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Od=new pe;function $y(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}const LE={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function lo(s,t){return new LE[s](t)}function Hl(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function tx(){const s=Hl("canvas");return s.style.display="block",s}const uv={};function ho(s){s in uv||(uv[s]=!0,console.warn(s))}function PE(s,t,e){return new Promise(function(n,i){function o(){switch(s.clientWaitSync(t,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(o,e);break;default:n()}}setTimeout(o,e)})}function IE(s){const t=s.elements;t[2]=.5*t[2]+.5*t[3],t[6]=.5*t[6]+.5*t[7],t[10]=.5*t[10]+.5*t[11],t[14]=.5*t[14]+.5*t[15]}function OE(s){const t=s.elements;t[11]===-1?(t[10]=-t[10]-1,t[14]=-t[14]):(t[10]=-t[10],t[14]=-t[14]+1)}const hv=new pe().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),fv=new pe().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function BE(){const s={enabled:!0,workingColorSpace:fa,spaces:{},convert:function(i,o,l){return this.enabled===!1||o===l||!o||!l||(this.spaces[o].transfer===He&&(i.r=Ls(i.r),i.g=Ls(i.g),i.b=Ls(i.b)),this.spaces[o].primaries!==this.spaces[l].primaries&&(i.applyMatrix3(this.spaces[o].toXYZ),i.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===He&&(i.r=fo(i.r),i.g=fo(i.g),i.b=fo(i.b))),i},workingToColorSpace:function(i,o){return this.convert(i,this.workingColorSpace,o)},colorSpaceToWorking:function(i,o){return this.convert(i,o,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Rs?Bl:this.spaces[i].transfer},getLuminanceCoefficients:function(i,o=this.workingColorSpace){return i.fromArray(this.spaces[o].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,o,l){return i.copy(this.spaces[o].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,o){return ho("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(i,o)},toWorkingColorSpace:function(i,o){return ho("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(i,o)}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[fa]:{primaries:t,whitePoint:n,transfer:Bl,toXYZ:hv,fromXYZ:fv,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:In},outputColorSpaceConfig:{drawingBufferColorSpace:In}},[In]:{primaries:t,whitePoint:n,transfer:He,toXYZ:hv,fromXYZ:fv,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:In}}}),s}const Ae=BE();function Ls(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function fo(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let Hr;class ex{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{Hr===void 0&&(Hr=Hl("canvas")),Hr.width=t.width,Hr.height=t.height;const i=Hr.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),n=Hr}return n.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Hl("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),o=i.data;for(let l=0;l<o.length;l++)o[l]=Ls(o[l]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Ls(e[n]/255)*255):e[n]=Ls(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let zE=0;class ua{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:zE++}),this.uuid=_i(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight):e!==null?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let o;if(Array.isArray(i)){o=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?o.push(Bd(i[l].image)):o.push(Bd(i[l]))}else o=Bd(i);n.url=o}return e||(t.images[this.uuid]=n),n}}function Bd(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?ex.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let FE=0;const zd=new B;class an extends cs{constructor(t=an.DEFAULT_IMAGE,e=an.DEFAULT_MAPPING,n=Ui,i=Ui,o=dn,l=as,c=On,h=Li,f=an.DEFAULT_ANISOTROPY,p=Rs){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:FE++}),this.uuid=_i(),this.name="",this.source=new ua(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=o,this.minFilter=l,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=h,this.offset=new pt(0,0),this.repeat=new pt(1,1),this.center=new pt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=p,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(zd).x}get height(){return this.source.getSize(zd).y}get depth(){return this.source.getSize(zd).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Lh)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Ll:t.x=t.x-Math.floor(t.x);break;case Ui:t.x=t.x<0?0:1;break;case Pl:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Ll:t.y=t.y-Math.floor(t.y);break;case Ui:t.y=t.y<0?0:1;break;case Pl:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}an.DEFAULT_IMAGE=null;an.DEFAULT_MAPPING=Lh;an.DEFAULT_ANISOTROPY=1;class Ue{constructor(t=0,e=0,n=0,i=1){Ue.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=this.w,l=t.elements;return this.x=l[0]*e+l[4]*n+l[8]*i+l[12]*o,this.y=l[1]*e+l[5]*n+l[9]*i+l[13]*o,this.z=l[2]*e+l[6]*n+l[10]*i+l[14]*o,this.w=l[3]*e+l[7]*n+l[11]*i+l[15]*o,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,o;const h=t.elements,f=h[0],p=h[4],m=h[8],g=h[1],v=h[5],x=h[9],b=h[2],S=h[6],y=h[10];if(Math.abs(p-g)<.01&&Math.abs(m-b)<.01&&Math.abs(x-S)<.01){if(Math.abs(p+g)<.1&&Math.abs(m+b)<.1&&Math.abs(x+S)<.1&&Math.abs(f+v+y-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const A=(f+1)/2,T=(v+1)/2,L=(y+1)/2,D=(p+g)/4,P=(m+b)/4,O=(x+S)/4;return A>T&&A>L?A<.01?(n=0,i=.707106781,o=.707106781):(n=Math.sqrt(A),i=D/n,o=P/n):T>L?T<.01?(n=.707106781,i=0,o=.707106781):(i=Math.sqrt(T),n=D/i,o=O/i):L<.01?(n=.707106781,i=.707106781,o=0):(o=Math.sqrt(L),n=P/o,i=O/o),this.set(n,i,o,e),this}let E=Math.sqrt((S-x)*(S-x)+(m-b)*(m-b)+(g-p)*(g-p));return Math.abs(E)<.001&&(E=1),this.x=(S-x)/E,this.y=(m-b)/E,this.z=(g-p)/E,this.w=Math.acos((f+v+y-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=de(this.x,t.x,e.x),this.y=de(this.y,t.y,e.y),this.z=de(this.z,t.z,e.z),this.w=de(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=de(this.x,t,e),this.y=de(this.y,t,e),this.z=de(this.z,t,e),this.w=de(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(de(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class bm extends cs{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:dn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new Ue(0,0,t,e),this.scissorTest=!1,this.viewport=new Ue(0,0,t,e);const i={width:t,height:e,depth:n.depth},o=new an(i);this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=o.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:dn,generateMipmaps:!1,flipY:!1,internalFormat:null};t.mapping!==void 0&&(e.mapping=t.mapping),t.wrapS!==void 0&&(e.wrapS=t.wrapS),t.wrapT!==void 0&&(e.wrapT=t.wrapT),t.wrapR!==void 0&&(e.wrapR=t.wrapR),t.magFilter!==void 0&&(e.magFilter=t.magFilter),t.minFilter!==void 0&&(e.minFilter=t.minFilter),t.format!==void 0&&(e.format=t.format),t.type!==void 0&&(e.type=t.type),t.anisotropy!==void 0&&(e.anisotropy=t.anisotropy),t.colorSpace!==void 0&&(e.colorSpace=t.colorSpace),t.flipY!==void 0&&(e.flipY=t.flipY),t.generateMipmaps!==void 0&&(e.generateMipmaps=t.generateMipmaps),t.internalFormat!==void 0&&(e.internalFormat=t.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,o=this.textures.length;i<o;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new ua(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ls extends bm{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class Vh extends an{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Tn,this.minFilter=Tn,this.wrapR=Ui,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class HE extends ls{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Vh(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Gh extends an{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Tn,this.minFilter=Tn,this.wrapR=Ui,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class VE extends ls{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Gh(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Bn{constructor(t=new B(1/0,1/0,1/0),e=new B(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(Vi.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(Vi.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Vi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const o=n.getAttribute("position");if(e===!0&&o!==void 0&&t.isInstancedMesh!==!0)for(let l=0,c=o.count;l<c;l++)t.isMesh===!0?t.getVertexPosition(l,Vi):Vi.fromBufferAttribute(o,l),Vi.applyMatrix4(t.matrixWorld),this.expandByPoint(Vi);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),kc.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),kc.copy(n.boundingBox)),kc.applyMatrix4(t.matrixWorld),this.union(kc)}const i=t.children;for(let o=0,l=i.length;o<l;o++)this.expandByObject(i[o],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,Vi),Vi.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(al),Wc.subVectors(this.max,al),Vr.subVectors(t.a,al),Gr.subVectors(t.b,al),kr.subVectors(t.c,al),ta.subVectors(Gr,Vr),ea.subVectors(kr,Gr),Ba.subVectors(Vr,kr);let e=[0,-ta.z,ta.y,0,-ea.z,ea.y,0,-Ba.z,Ba.y,ta.z,0,-ta.x,ea.z,0,-ea.x,Ba.z,0,-Ba.x,-ta.y,ta.x,0,-ea.y,ea.x,0,-Ba.y,Ba.x,0];return!Fd(e,Vr,Gr,kr,Wc)||(e=[1,0,0,0,1,0,0,0,1],!Fd(e,Vr,Gr,kr,Wc))?!1:(Xc.crossVectors(ta,ea),e=[Xc.x,Xc.y,Xc.z],Fd(e,Vr,Gr,kr,Wc))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Vi).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(Vi).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Ms[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ms[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ms[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ms[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ms[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ms[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ms[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ms[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ms),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const Ms=[new B,new B,new B,new B,new B,new B,new B,new B],Vi=new B,kc=new Bn,Vr=new B,Gr=new B,kr=new B,ta=new B,ea=new B,Ba=new B,al=new B,Wc=new B,Xc=new B,za=new B;function Fd(s,t,e,n,i){for(let o=0,l=s.length-3;o<=l;o+=3){za.fromArray(s,o);const c=i.x*Math.abs(za.x)+i.y*Math.abs(za.y)+i.z*Math.abs(za.z),h=t.dot(za),f=e.dot(za),p=n.dot(za);if(Math.max(-Math.max(h,f,p),Math.min(h,f,p))>c)return!1}return!0}const GE=new Bn,rl=new B,Hd=new B;class An{constructor(t=new B,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):GE.setFromPoints(t).getCenter(n);let i=0;for(let o=0,l=t.length;o<l;o++)i=Math.max(i,n.distanceToSquared(t[o]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;rl.subVectors(t,this.center);const e=rl.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(rl,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Hd.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(rl.copy(t.center).add(Hd)),this.expandByPoint(rl.copy(t.center).sub(Hd))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const bs=new B,Vd=new B,qc=new B,na=new B,Gd=new B,Yc=new B,kd=new B;class Ao{constructor(t=new B,e=new B(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,bs)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=bs.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(bs.copy(this.origin).addScaledVector(this.direction,e),bs.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Vd.copy(t).add(e).multiplyScalar(.5),qc.copy(e).sub(t).normalize(),na.copy(this.origin).sub(Vd);const o=t.distanceTo(e)*.5,l=-this.direction.dot(qc),c=na.dot(this.direction),h=-na.dot(qc),f=na.lengthSq(),p=Math.abs(1-l*l);let m,g,v,x;if(p>0)if(m=l*h-c,g=l*c-h,x=o*p,m>=0)if(g>=-x)if(g<=x){const b=1/p;m*=b,g*=b,v=m*(m+l*g+2*c)+g*(l*m+g+2*h)+f}else g=o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g=-o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g<=-x?(m=Math.max(0,-(-l*o+c)),g=m>0?-o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f):g<=x?(m=0,g=Math.min(Math.max(-o,-h),o),v=g*(g+2*h)+f):(m=Math.max(0,-(l*o+c)),g=m>0?o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f);else g=l>0?-o:o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(Vd).addScaledVector(qc,g),v}intersectSphere(t,e){bs.subVectors(t.center,this.origin);const n=bs.dot(this.direction),i=bs.dot(bs)-n*n,o=t.radius*t.radius;if(i>o)return null;const l=Math.sqrt(o-i),c=n-l,h=n+l;return h<0?null:c<0?this.at(h,e):this.at(c,e)}intersectsSphere(t){return t.radius<0?!1:this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,o,l,c,h;const f=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(n=(t.min.x-g.x)*f,i=(t.max.x-g.x)*f):(n=(t.max.x-g.x)*f,i=(t.min.x-g.x)*f),p>=0?(o=(t.min.y-g.y)*p,l=(t.max.y-g.y)*p):(o=(t.max.y-g.y)*p,l=(t.min.y-g.y)*p),n>l||o>i||((o>n||isNaN(n))&&(n=o),(l<i||isNaN(i))&&(i=l),m>=0?(c=(t.min.z-g.z)*m,h=(t.max.z-g.z)*m):(c=(t.max.z-g.z)*m,h=(t.min.z-g.z)*m),n>h||c>i)||((c>n||n!==n)&&(n=c),(h<i||i!==i)&&(i=h),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,bs)!==null}intersectTriangle(t,e,n,i,o){Gd.subVectors(e,t),Yc.subVectors(n,t),kd.crossVectors(Gd,Yc);let l=this.direction.dot(kd),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;na.subVectors(this.origin,t);const h=c*this.direction.dot(Yc.crossVectors(na,Yc));if(h<0)return null;const f=c*this.direction.dot(Gd.cross(na));if(f<0||h+f>l)return null;const p=-c*na.dot(kd);return p<0?null:this.at(p/l,o)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ae{constructor(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S){ae.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S)}set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S){const y=this.elements;return y[0]=t,y[4]=e,y[8]=n,y[12]=i,y[1]=o,y[5]=l,y[9]=c,y[13]=h,y[2]=f,y[6]=p,y[10]=m,y[14]=g,y[3]=v,y[7]=x,y[11]=b,y[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ae().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Wr.setFromMatrixColumn(t,0).length(),o=1/Wr.setFromMatrixColumn(t,1).length(),l=1/Wr.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*o,e[5]=n[5]*o,e[6]=n[6]*o,e[7]=0,e[8]=n[8]*l,e[9]=n[9]*l,e[10]=n[10]*l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,o=t.z,l=Math.cos(n),c=Math.sin(n),h=Math.cos(i),f=Math.sin(i),p=Math.cos(o),m=Math.sin(o);if(t.order==="XYZ"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=-h*m,e[8]=f,e[1]=v+x*f,e[5]=g-b*f,e[9]=-c*h,e[2]=b-g*f,e[6]=x+v*f,e[10]=l*h}else if(t.order==="YXZ"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g+b*c,e[4]=x*c-v,e[8]=l*f,e[1]=l*m,e[5]=l*p,e[9]=-c,e[2]=v*c-x,e[6]=b+g*c,e[10]=l*h}else if(t.order==="ZXY"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g-b*c,e[4]=-l*m,e[8]=x+v*c,e[1]=v+x*c,e[5]=l*p,e[9]=b-g*c,e[2]=-l*f,e[6]=c,e[10]=l*h}else if(t.order==="ZYX"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=x*f-v,e[8]=g*f+b,e[1]=h*m,e[5]=b*f+g,e[9]=v*f-x,e[2]=-f,e[6]=c*h,e[10]=l*h}else if(t.order==="YZX"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=b-g*m,e[8]=x*m+v,e[1]=m,e[5]=l*p,e[9]=-c*p,e[2]=-f*p,e[6]=v*m+x,e[10]=g-b*m}else if(t.order==="XZY"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=-m,e[8]=f*p,e[1]=g*m+b,e[5]=l*p,e[9]=v*m-x,e[2]=x*m-v,e[6]=c*p,e[10]=b*m+g}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(kE,t,WE)}lookAt(t,e,n){const i=this.elements;return gi.subVectors(t,e),gi.lengthSq()===0&&(gi.z=1),gi.normalize(),ia.crossVectors(n,gi),ia.lengthSq()===0&&(Math.abs(n.z)===1?gi.x+=1e-4:gi.z+=1e-4,gi.normalize(),ia.crossVectors(n,gi)),ia.normalize(),Zc.crossVectors(gi,ia),i[0]=ia.x,i[4]=Zc.x,i[8]=gi.x,i[1]=ia.y,i[5]=Zc.y,i[9]=gi.y,i[2]=ia.z,i[6]=Zc.z,i[10]=gi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[4],h=n[8],f=n[12],p=n[1],m=n[5],g=n[9],v=n[13],x=n[2],b=n[6],S=n[10],y=n[14],E=n[3],A=n[7],T=n[11],L=n[15],D=i[0],P=i[4],O=i[8],C=i[12],w=i[1],H=i[5],Q=i[9],X=i[13],J=i[2],at=i[6],F=i[10],q=i[14],G=i[3],st=i[7],lt=i[11],mt=i[15];return o[0]=l*D+c*w+h*J+f*G,o[4]=l*P+c*H+h*at+f*st,o[8]=l*O+c*Q+h*F+f*lt,o[12]=l*C+c*X+h*q+f*mt,o[1]=p*D+m*w+g*J+v*G,o[5]=p*P+m*H+g*at+v*st,o[9]=p*O+m*Q+g*F+v*lt,o[13]=p*C+m*X+g*q+v*mt,o[2]=x*D+b*w+S*J+y*G,o[6]=x*P+b*H+S*at+y*st,o[10]=x*O+b*Q+S*F+y*lt,o[14]=x*C+b*X+S*q+y*mt,o[3]=E*D+A*w+T*J+L*G,o[7]=E*P+A*H+T*at+L*st,o[11]=E*O+A*Q+T*F+L*lt,o[15]=E*C+A*X+T*q+L*mt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],o=t[12],l=t[1],c=t[5],h=t[9],f=t[13],p=t[2],m=t[6],g=t[10],v=t[14],x=t[3],b=t[7],S=t[11],y=t[15];return x*(+o*h*m-i*f*m-o*c*g+n*f*g+i*c*v-n*h*v)+b*(+e*h*v-e*f*g+o*l*g-i*l*v+i*f*p-o*h*p)+S*(+e*f*m-e*c*v-o*l*m+n*l*v+o*c*p-n*f*p)+y*(-i*c*p-e*h*m+e*c*g+i*l*m-n*l*g+n*h*p)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=t[9],g=t[10],v=t[11],x=t[12],b=t[13],S=t[14],y=t[15],E=m*S*f-b*g*f+b*h*v-c*S*v-m*h*y+c*g*y,A=x*g*f-p*S*f-x*h*v+l*S*v+p*h*y-l*g*y,T=p*b*f-x*m*f+x*c*v-l*b*v-p*c*y+l*m*y,L=x*m*h-p*b*h-x*c*g+l*b*g+p*c*S-l*m*S,D=e*E+n*A+i*T+o*L;if(D===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/D;return t[0]=E*P,t[1]=(b*g*o-m*S*o-b*i*v+n*S*v+m*i*y-n*g*y)*P,t[2]=(c*S*o-b*h*o+b*i*f-n*S*f-c*i*y+n*h*y)*P,t[3]=(m*h*o-c*g*o-m*i*f+n*g*f+c*i*v-n*h*v)*P,t[4]=A*P,t[5]=(p*S*o-x*g*o+x*i*v-e*S*v-p*i*y+e*g*y)*P,t[6]=(x*h*o-l*S*o-x*i*f+e*S*f+l*i*y-e*h*y)*P,t[7]=(l*g*o-p*h*o+p*i*f-e*g*f-l*i*v+e*h*v)*P,t[8]=T*P,t[9]=(x*m*o-p*b*o-x*n*v+e*b*v+p*n*y-e*m*y)*P,t[10]=(l*b*o-x*c*o+x*n*f-e*b*f-l*n*y+e*c*y)*P,t[11]=(p*c*o-l*m*o-p*n*f+e*m*f+l*n*v-e*c*v)*P,t[12]=L*P,t[13]=(p*b*i-x*m*i+x*n*g-e*b*g-p*n*S+e*m*S)*P,t[14]=(x*c*i-l*b*i-x*n*h+e*b*h+l*n*S-e*c*S)*P,t[15]=(l*m*i-p*c*i+p*n*h-e*m*h-l*n*g+e*c*g)*P,this}scale(t){const e=this.elements,n=t.x,i=t.y,o=t.z;return e[0]*=n,e[4]*=i,e[8]*=o,e[1]*=n,e[5]*=i,e[9]*=o,e[2]*=n,e[6]*=i,e[10]*=o,e[3]*=n,e[7]*=i,e[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),o=1-n,l=t.x,c=t.y,h=t.z,f=o*l,p=o*c;return this.set(f*l+n,f*c-i*h,f*h+i*c,0,f*c+i*h,p*c+n,p*h-i*l,0,f*h-i*c,p*h+i*l,o*h*h+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,o,l){return this.set(1,n,o,0,t,1,l,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,o=e._x,l=e._y,c=e._z,h=e._w,f=o+o,p=l+l,m=c+c,g=o*f,v=o*p,x=o*m,b=l*p,S=l*m,y=c*m,E=h*f,A=h*p,T=h*m,L=n.x,D=n.y,P=n.z;return i[0]=(1-(b+y))*L,i[1]=(v+T)*L,i[2]=(x-A)*L,i[3]=0,i[4]=(v-T)*D,i[5]=(1-(g+y))*D,i[6]=(S+E)*D,i[7]=0,i[8]=(x+A)*P,i[9]=(S-E)*P,i[10]=(1-(g+b))*P,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let o=Wr.set(i[0],i[1],i[2]).length();const l=Wr.set(i[4],i[5],i[6]).length(),c=Wr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(o=-o),t.x=i[12],t.y=i[13],t.z=i[14],Gi.copy(this);const f=1/o,p=1/l,m=1/c;return Gi.elements[0]*=f,Gi.elements[1]*=f,Gi.elements[2]*=f,Gi.elements[4]*=p,Gi.elements[5]*=p,Gi.elements[6]*=p,Gi.elements[8]*=m,Gi.elements[9]*=m,Gi.elements[10]*=m,e.setFromRotationMatrix(Gi),n.x=o,n.y=l,n.z=c,this}makePerspective(t,e,n,i,o,l,c=Ni){const h=this.elements,f=2*o/(e-t),p=2*o/(n-i),m=(e+t)/(e-t),g=(n+i)/(n-i);let v,x;if(c===Ni)v=-(l+o)/(l-o),x=-2*l*o/(l-o);else if(c===Fl)v=-l/(l-o),x=-l*o/(l-o);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return h[0]=f,h[4]=0,h[8]=m,h[12]=0,h[1]=0,h[5]=p,h[9]=g,h[13]=0,h[2]=0,h[6]=0,h[10]=v,h[14]=x,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,n,i,o,l,c=Ni){const h=this.elements,f=1/(e-t),p=1/(n-i),m=1/(l-o),g=(e+t)*f,v=(n+i)*p;let x,b;if(c===Ni)x=(l+o)*m,b=-2*m;else if(c===Fl)x=o*m,b=-1*m;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return h[0]=2*f,h[4]=0,h[8]=0,h[12]=-g,h[1]=0,h[5]=2*p,h[9]=0,h[13]=-v,h[2]=0,h[6]=0,h[10]=b,h[14]=-x,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Wr=new B,Gi=new ae,kE=new B(0,0,0),WE=new B(1,1,1),ia=new B,Zc=new B,gi=new B,dv=new ae,pv=new si;class yi{constructor(t=0,e=0,n=0,i=yi.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,o=i[0],l=i[4],c=i[8],h=i[1],f=i[5],p=i[9],m=i[2],g=i[6],v=i[10];switch(e){case"XYZ":this._y=Math.asin(de(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,v),this._z=Math.atan2(-l,o)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-de(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-m,o),this._z=0);break;case"ZXY":this._x=Math.asin(de(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,v),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(h,o));break;case"ZYX":this._y=Math.asin(-de(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,v),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(de(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-m,o)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-de(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-p,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return dv.makeRotationFromQuaternion(t),this.setFromRotationMatrix(dv,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return pv.setFromEuler(this),this.setFromQuaternion(pv,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}yi.DEFAULT_ORDER="XYZ";class yo{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let XE=0;const mv=new B,Xr=new si,Es=new ae,jc=new B,ol=new B,qE=new B,YE=new si,gv=new B(1,0,0),vv=new B(0,1,0),_v=new B(0,0,1),yv={type:"added"},ZE={type:"removed"},qr={type:"childadded",child:null},Wd={type:"childremoved",child:null};class Ne extends cs{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:XE++}),this.uuid=_i(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ne.DEFAULT_UP.clone();const t=new B,e=new yi,n=new si,i=new B(1,1,1);function o(){n.setFromEuler(e,!1)}function l(){e.setFromQuaternion(n,void 0,!1)}e._onChange(o),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ae},normalMatrix:{value:new pe}}),this.matrix=new ae,this.matrixWorld=new ae,this.matrixAutoUpdate=Ne.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ne.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new yo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Xr.setFromAxisAngle(t,e),this.quaternion.multiply(Xr),this}rotateOnWorldAxis(t,e){return Xr.setFromAxisAngle(t,e),this.quaternion.premultiply(Xr),this}rotateX(t){return this.rotateOnAxis(gv,t)}rotateY(t){return this.rotateOnAxis(vv,t)}rotateZ(t){return this.rotateOnAxis(_v,t)}translateOnAxis(t,e){return mv.copy(t).applyQuaternion(this.quaternion),this.position.add(mv.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(gv,t)}translateY(t){return this.translateOnAxis(vv,t)}translateZ(t){return this.translateOnAxis(_v,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Es.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?jc.copy(t):jc.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ol.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Es.lookAt(ol,jc,this.up):Es.lookAt(jc,ol,this.up),this.quaternion.setFromRotationMatrix(Es),i&&(Es.extractRotation(i.matrixWorld),Xr.setFromRotationMatrix(Es),this.quaternion.premultiply(Xr.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(yv),qr.child=t,this.dispatchEvent(qr),qr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(ZE),Wd.child=t,this.dispatchEvent(Wd),Wd.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Es.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Es.multiply(t.parent.matrixWorld)),t.applyMatrix4(Es),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(yv),qr.child=t,this.dispatchEvent(qr),qr.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(t,e);if(l!==void 0)return l}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ol,t,qE),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ol,YE,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(c=>({...c,boundingBox:c.boundingBox?c.boundingBox.toJSON():void 0,boundingSphere:c.boundingSphere?c.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(c=>({...c})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function o(c,h){return c[h.uuid]===void 0&&(c[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=o(t.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const h=c.shapes;if(Array.isArray(h))for(let f=0,p=h.length;f<p;f++){const m=h[f];o(t.shapes,m)}else o(t.shapes,h)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(o(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let h=0,f=this.material.length;h<f;h++)c.push(o(t.materials,this.material[h]));i.material=c}else i.material=o(t.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const h=this.animations[c];i.animations.push(o(t.animations,h))}}if(e){const c=l(t.geometries),h=l(t.materials),f=l(t.textures),p=l(t.images),m=l(t.shapes),g=l(t.skeletons),v=l(t.animations),x=l(t.nodes);c.length>0&&(n.geometries=c),h.length>0&&(n.materials=h),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),g.length>0&&(n.skeletons=g),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=i,n;function l(c){const h=[];for(const f in c){const p=c[f];delete p.metadata,h.push(p)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Ne.DEFAULT_UP=new B(0,1,0);Ne.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ne.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ki=new B,Ts=new B,Xd=new B,As=new B,Yr=new B,Zr=new B,xv=new B,qd=new B,Yd=new B,Zd=new B,jd=new Ue,Kd=new Ue,Jd=new Ue;class ni{constructor(t=new B,e=new B,n=new B){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),ki.subVectors(t,e),i.cross(ki);const o=i.lengthSq();return o>0?i.multiplyScalar(1/Math.sqrt(o)):i.set(0,0,0)}static getBarycoord(t,e,n,i,o){ki.subVectors(i,e),Ts.subVectors(n,e),Xd.subVectors(t,e);const l=ki.dot(ki),c=ki.dot(Ts),h=ki.dot(Xd),f=Ts.dot(Ts),p=Ts.dot(Xd),m=l*f-c*c;if(m===0)return o.set(0,0,0),null;const g=1/m,v=(f*h-c*p)*g,x=(l*p-c*h)*g;return o.set(1-v-x,x,v)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,As)===null?!1:As.x>=0&&As.y>=0&&As.x+As.y<=1}static getInterpolation(t,e,n,i,o,l,c,h){return this.getBarycoord(t,e,n,i,As)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(o,As.x),h.addScaledVector(l,As.y),h.addScaledVector(c,As.z),h)}static getInterpolatedAttribute(t,e,n,i,o,l){return jd.setScalar(0),Kd.setScalar(0),Jd.setScalar(0),jd.fromBufferAttribute(t,e),Kd.fromBufferAttribute(t,n),Jd.fromBufferAttribute(t,i),l.setScalar(0),l.addScaledVector(jd,o.x),l.addScaledVector(Kd,o.y),l.addScaledVector(Jd,o.z),l}static isFrontFacing(t,e,n,i){return ki.subVectors(n,e),Ts.subVectors(t,e),ki.cross(Ts).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ki.subVectors(this.c,this.b),Ts.subVectors(this.a,this.b),ki.cross(Ts).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ni.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ni.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,o){return ni.getInterpolation(t,this.a,this.b,this.c,e,n,i,o)}containsPoint(t){return ni.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ni.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,o=this.c;let l,c;Yr.subVectors(i,n),Zr.subVectors(o,n),qd.subVectors(t,n);const h=Yr.dot(qd),f=Zr.dot(qd);if(h<=0&&f<=0)return e.copy(n);Yd.subVectors(t,i);const p=Yr.dot(Yd),m=Zr.dot(Yd);if(p>=0&&m<=p)return e.copy(i);const g=h*m-p*f;if(g<=0&&h>=0&&p<=0)return l=h/(h-p),e.copy(n).addScaledVector(Yr,l);Zd.subVectors(t,o);const v=Yr.dot(Zd),x=Zr.dot(Zd);if(x>=0&&v<=x)return e.copy(o);const b=v*f-h*x;if(b<=0&&f>=0&&x<=0)return c=f/(f-x),e.copy(n).addScaledVector(Zr,c);const S=p*x-v*m;if(S<=0&&m-p>=0&&v-x>=0)return xv.subVectors(o,i),c=(m-p)/(m-p+(v-x)),e.copy(i).addScaledVector(xv,c);const y=1/(S+b+g);return l=b*y,c=g*y,e.copy(n).addScaledVector(Yr,l).addScaledVector(Zr,c)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const nx={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},sa={h:0,s:0,l:0},Kc={h:0,s:0,l:0};function Qd(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}class zt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=In){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Ae.colorSpaceToWorking(this,e),this}setRGB(t,e,n,i=Ae.workingColorSpace){return this.r=t,this.g=e,this.b=n,Ae.colorSpaceToWorking(this,i),this}setHSL(t,e,n,i=Ae.workingColorSpace){if(t=Mm(t,1),e=de(e,0,1),n=de(n,0,1),e===0)this.r=this.g=this.b=n;else{const o=n<=.5?n*(1+e):n+e-n*e,l=2*n-o;this.r=Qd(l,o,t+1/3),this.g=Qd(l,o,t),this.b=Qd(l,o,t-1/3)}return Ae.colorSpaceToWorking(this,i),this}setStyle(t,e=In){function n(o){o!==void 0&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let o;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(255,parseInt(o[1],10))/255,Math.min(255,parseInt(o[2],10))/255,Math.min(255,parseInt(o[3],10))/255,e);if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(100,parseInt(o[1],10))/100,Math.min(100,parseInt(o[2],10))/100,Math.min(100,parseInt(o[3],10))/100,e);break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setHSL(parseFloat(o[1])/360,parseFloat(o[2])/100,parseFloat(o[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const o=i[1],l=o.length;if(l===3)return this.setRGB(parseInt(o.charAt(0),16)/15,parseInt(o.charAt(1),16)/15,parseInt(o.charAt(2),16)/15,e);if(l===6)return this.setHex(parseInt(o,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=In){const n=nx[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ls(t.r),this.g=Ls(t.g),this.b=Ls(t.b),this}copyLinearToSRGB(t){return this.r=fo(t.r),this.g=fo(t.g),this.b=fo(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=In){return Ae.workingToColorSpace(Ln.copy(this),t),Math.round(de(Ln.r*255,0,255))*65536+Math.round(de(Ln.g*255,0,255))*256+Math.round(de(Ln.b*255,0,255))}getHexString(t=In){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Ae.workingColorSpace){Ae.workingToColorSpace(Ln.copy(this),e);const n=Ln.r,i=Ln.g,o=Ln.b,l=Math.max(n,i,o),c=Math.min(n,i,o);let h,f;const p=(c+l)/2;if(c===l)h=0,f=0;else{const m=l-c;switch(f=p<=.5?m/(l+c):m/(2-l-c),l){case n:h=(i-o)/m+(i<o?6:0);break;case i:h=(o-n)/m+2;break;case o:h=(n-i)/m+4;break}h/=6}return t.h=h,t.s=f,t.l=p,t}getRGB(t,e=Ae.workingColorSpace){return Ae.workingToColorSpace(Ln.copy(this),e),t.r=Ln.r,t.g=Ln.g,t.b=Ln.b,t}getStyle(t=In){Ae.workingToColorSpace(Ln.copy(this),t);const e=Ln.r,n=Ln.g,i=Ln.b;return t!==In?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(sa),this.setHSL(sa.h+t,sa.s+e,sa.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(sa),t.getHSL(Kc);const n=wl(sa.h,Kc.h,e),i=wl(sa.s,Kc.s,e),o=wl(sa.l,Kc.l,e);return this.setHSL(n,i,o),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,o=t.elements;return this.r=o[0]*e+o[3]*n+o[6]*i,this.g=o[1]*e+o[4]*n+o[7]*i,this.b=o[2]*e+o[5]*n+o[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Ln=new zt;zt.NAMES=nx;let jE=0;class zn extends cs{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:jE++}),this.uuid=_i(),this.name="",this.type="Material",this.blending=ir,this.side=Ps,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Vu,this.blendDst=Gu,this.blendEquation=la,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new zt(0,0,0),this.blendAlpha=0,this.depthFunc=rr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Yp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ja,this.stencilZFail=Ja,this.stencilZPass=Ja,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ir&&(n.blending=this.blending),this.side!==Ps&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Vu&&(n.blendSrc=this.blendSrc),this.blendDst!==Gu&&(n.blendDst=this.blendDst),this.blendEquation!==la&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==rr&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Yp&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ja&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Ja&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Ja&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}if(e){const o=i(t.textures),l=i(t.images);o.length>0&&(n.textures=o),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let o=0;o!==i;++o)n[o]=e[o].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class ma extends zn{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new zt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new yi,this.combine=jl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Ds=KE();function KE(){const s=new ArrayBuffer(4),t=new Float32Array(s),e=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let h=0;h<256;++h){const f=h-127;f<-27?(n[h]=0,n[h|256]=32768,i[h]=24,i[h|256]=24):f<-14?(n[h]=1024>>-f-14,n[h|256]=1024>>-f-14|32768,i[h]=-f-1,i[h|256]=-f-1):f<=15?(n[h]=f+15<<10,n[h|256]=f+15<<10|32768,i[h]=13,i[h|256]=13):f<128?(n[h]=31744,n[h|256]=64512,i[h]=24,i[h|256]=24):(n[h]=31744,n[h|256]=64512,i[h]=13,i[h|256]=13)}const o=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let h=1;h<1024;++h){let f=h<<13,p=0;for(;(f&8388608)===0;)f<<=1,p-=8388608;f&=-8388609,p+=947912704,o[h]=f|p}for(let h=1024;h<2048;++h)o[h]=939524096+(h-1024<<13);for(let h=1;h<31;++h)l[h]=h<<23;l[31]=1199570944,l[32]=2147483648;for(let h=33;h<63;++h)l[h]=2147483648+(h-32<<23);l[63]=3347054592;for(let h=1;h<64;++h)h!==32&&(c[h]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:o,exponentTable:l,offsetTable:c}}function ti(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=de(s,-65504,65504),Ds.floatView[0]=s;const t=Ds.uint32View[0],e=t>>23&511;return Ds.baseTable[e]+((t&8388607)>>Ds.shiftTable[e])}function vl(s){const t=s>>10;return Ds.uint32View[0]=Ds.mantissaTable[Ds.offsetTable[t]+(s&1023)]+Ds.exponentTable[t],Ds.floatView[0]}class JE{static toHalfFloat(t){return ti(t)}static fromHalfFloat(t){return vl(t)}}const un=new B,Jc=new pt;let QE=0;class ke{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:QE++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=zl,this.updateRanges=[],this.gpuType=ii,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,o=this.itemSize;i<o;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)Jc.fromBufferAttribute(this,e),Jc.applyMatrix3(t),this.setXY(e,Jc.x,Jc.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)un.fromBufferAttribute(this,e),un.applyMatrix3(t),this.setXYZ(e,un.x,un.y,un.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)un.fromBufferAttribute(this,e),un.applyMatrix4(t),this.setXYZ(e,un.x,un.y,un.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)un.fromBufferAttribute(this,e),un.applyNormalMatrix(t),this.setXYZ(e,un.x,un.y,un.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)un.fromBufferAttribute(this,e),un.transformDirection(t),this.setXYZ(e,un.x,un.y,un.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Xn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ve(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Xn(e,this.array)),e}setX(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Xn(e,this.array)),e}setY(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Xn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Xn(e,this.array)),e}setW(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array),i=ve(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array),i=ve(i,this.array),o=ve(o,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=o,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==zl&&(t.usage=this.usage),t}}class $E extends ke{constructor(t,e,n){super(new Int8Array(t),e,n)}}class t1 extends ke{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class e1 extends ke{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class n1 extends ke{constructor(t,e,n){super(new Int16Array(t),e,n)}}class Em extends ke{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class i1 extends ke{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Tm extends ke{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class s1 extends ke{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=vl(this.array[t*this.itemSize]);return this.normalized&&(e=Xn(e,this.array)),e}setX(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize]=ti(e),this}getY(t){let e=vl(this.array[t*this.itemSize+1]);return this.normalized&&(e=Xn(e,this.array)),e}setY(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize+1]=ti(e),this}getZ(t){let e=vl(this.array[t*this.itemSize+2]);return this.normalized&&(e=Xn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize+2]=ti(e),this}getW(t){let e=vl(this.array[t*this.itemSize+3]);return this.normalized&&(e=Xn(e,this.array)),e}setW(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize+3]=ti(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array)),this.array[t+0]=ti(e),this.array[t+1]=ti(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array),i=ve(i,this.array)),this.array[t+0]=ti(e),this.array[t+1]=ti(n),this.array[t+2]=ti(i),this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array),i=ve(i,this.array),o=ve(o,this.array)),this.array[t+0]=ti(e),this.array[t+1]=ti(n),this.array[t+2]=ti(i),this.array[t+3]=ti(o),this}}class qt extends ke{constructor(t,e,n){super(new Float32Array(t),e,n)}}let a1=0;const Di=new ae,$d=new Ne,jr=new B,vi=new Bn,ll=new Bn,yn=new B;class _e extends cs{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:a1++}),this.uuid=_i(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new($y(t)?Tm:Em)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const o=new pe().getNormalMatrix(t);n.applyNormalMatrix(o),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Di.makeRotationFromQuaternion(t),this.applyMatrix4(Di),this}rotateX(t){return Di.makeRotationX(t),this.applyMatrix4(Di),this}rotateY(t){return Di.makeRotationY(t),this.applyMatrix4(Di),this}rotateZ(t){return Di.makeRotationZ(t),this.applyMatrix4(Di),this}translate(t,e,n){return Di.makeTranslation(t,e,n),this.applyMatrix4(Di),this}scale(t,e,n){return Di.makeScale(t,e,n),this.applyMatrix4(Di),this}lookAt(t){return $d.lookAt(t),$d.updateMatrix(),this.applyMatrix4($d.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(jr).negate(),this.translate(jr.x,jr.y,jr.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,o=t.length;i<o;i++){const l=t[i];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new qt(n,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const o=t[i];e.setXYZ(i,o.x,o.y,o.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Bn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new B(-1/0,-1/0,-1/0),new B(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const o=e[n];vi.setFromBufferAttribute(o),this.morphTargetsRelative?(yn.addVectors(this.boundingBox.min,vi.min),this.boundingBox.expandByPoint(yn),yn.addVectors(this.boundingBox.max,vi.max),this.boundingBox.expandByPoint(yn)):(this.boundingBox.expandByPoint(vi.min),this.boundingBox.expandByPoint(vi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new An);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new B,1/0);return}if(t){const n=this.boundingSphere.center;if(vi.setFromBufferAttribute(t),e)for(let o=0,l=e.length;o<l;o++){const c=e[o];ll.setFromBufferAttribute(c),this.morphTargetsRelative?(yn.addVectors(vi.min,ll.min),vi.expandByPoint(yn),yn.addVectors(vi.max,ll.max),vi.expandByPoint(yn)):(vi.expandByPoint(ll.min),vi.expandByPoint(ll.max))}vi.getCenter(n);let i=0;for(let o=0,l=t.count;o<l;o++)yn.fromBufferAttribute(t,o),i=Math.max(i,n.distanceToSquared(yn));if(e)for(let o=0,l=e.length;o<l;o++){const c=e[o],h=this.morphTargetsRelative;for(let f=0,p=c.count;f<p;f++)yn.fromBufferAttribute(c,f),h&&(jr.fromBufferAttribute(t,f),yn.add(jr)),i=Math.max(i,n.distanceToSquared(yn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,o=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ke(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],h=[];for(let O=0;O<n.count;O++)c[O]=new B,h[O]=new B;const f=new B,p=new B,m=new B,g=new pt,v=new pt,x=new pt,b=new B,S=new B;function y(O,C,w){f.fromBufferAttribute(n,O),p.fromBufferAttribute(n,C),m.fromBufferAttribute(n,w),g.fromBufferAttribute(o,O),v.fromBufferAttribute(o,C),x.fromBufferAttribute(o,w),p.sub(f),m.sub(f),v.sub(g),x.sub(g);const H=1/(v.x*x.y-x.x*v.y);isFinite(H)&&(b.copy(p).multiplyScalar(x.y).addScaledVector(m,-v.y).multiplyScalar(H),S.copy(m).multiplyScalar(v.x).addScaledVector(p,-x.x).multiplyScalar(H),c[O].add(b),c[C].add(b),c[w].add(b),h[O].add(S),h[C].add(S),h[w].add(S))}let E=this.groups;E.length===0&&(E=[{start:0,count:t.count}]);for(let O=0,C=E.length;O<C;++O){const w=E[O],H=w.start,Q=w.count;for(let X=H,J=H+Q;X<J;X+=3)y(t.getX(X+0),t.getX(X+1),t.getX(X+2))}const A=new B,T=new B,L=new B,D=new B;function P(O){L.fromBufferAttribute(i,O),D.copy(L);const C=c[O];A.copy(C),A.sub(L.multiplyScalar(L.dot(C))).normalize(),T.crossVectors(D,C);const H=T.dot(h[O])<0?-1:1;l.setXYZW(O,A.x,A.y,A.z,H)}for(let O=0,C=E.length;O<C;++O){const w=E[O],H=w.start,Q=w.count;for(let X=H,J=H+Q;X<J;X+=3)P(t.getX(X+0)),P(t.getX(X+1)),P(t.getX(X+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ke(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let g=0,v=n.count;g<v;g++)n.setXYZ(g,0,0,0);const i=new B,o=new B,l=new B,c=new B,h=new B,f=new B,p=new B,m=new B;if(t)for(let g=0,v=t.count;g<v;g+=3){const x=t.getX(g+0),b=t.getX(g+1),S=t.getX(g+2);i.fromBufferAttribute(e,x),o.fromBufferAttribute(e,b),l.fromBufferAttribute(e,S),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),c.fromBufferAttribute(n,x),h.fromBufferAttribute(n,b),f.fromBufferAttribute(n,S),c.add(p),h.add(p),f.add(p),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(b,h.x,h.y,h.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let g=0,v=e.count;g<v;g+=3)i.fromBufferAttribute(e,g+0),o.fromBufferAttribute(e,g+1),l.fromBufferAttribute(e,g+2),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),n.setXYZ(g+0,p.x,p.y,p.z),n.setXYZ(g+1,p.x,p.y,p.z),n.setXYZ(g+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)yn.fromBufferAttribute(t,e),yn.normalize(),t.setXYZ(e,yn.x,yn.y,yn.z)}toNonIndexed(){function t(c,h){const f=c.array,p=c.itemSize,m=c.normalized,g=new f.constructor(h.length*p);let v=0,x=0;for(let b=0,S=h.length;b<S;b++){c.isInterleavedBufferAttribute?v=h[b]*c.data.stride+c.offset:v=h[b]*p;for(let y=0;y<p;y++)g[x++]=f[v++]}return new ke(g,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new _e,n=this.index.array,i=this.attributes;for(const c in i){const h=i[c],f=t(h,n);e.setAttribute(c,f)}const o=this.morphAttributes;for(const c in o){const h=[],f=o[c];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=t(g,n);h.push(v)}e.morphAttributes[c]=h}e.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,h=l.length;c<h;c++){const f=l[c];e.addGroup(f.start,f.count,f.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const f in h)h[f]!==void 0&&(t[f]=h[f]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const h in n){const f=n[h];t.data.attributes[h]=f.toJSON(t.data)}const i={};let o=!1;for(const h in this.morphAttributes){const f=this.morphAttributes[h],p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m];p.push(v.toJSON(t.data))}p.length>0&&(i[h]=p,o=!0)}o&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(t.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(t.data.boundingSphere=c.toJSON()),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone());const i=t.attributes;for(const f in i){const p=i[f];this.setAttribute(f,p.clone(e))}const o=t.morphAttributes;for(const f in o){const p=[],m=o[f];for(let g=0,v=m.length;g<v;g++)p.push(m[g].clone(e));this.morphAttributes[f]=p}this.morphTargetsRelative=t.morphTargetsRelative;const l=t.groups;for(let f=0,p=l.length;f<p;f++){const m=l[f];this.addGroup(m.start,m.count,m.materialIndex)}const c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Sv=new ae,Fa=new Ao,Qc=new An,Mv=new B,$c=new B,tu=new B,eu=new B,tp=new B,nu=new B,bv=new B,iu=new B;class hn extends Ne{constructor(t=new _e,e=new ma){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const c=this.morphTargetInfluences;if(o&&c){nu.set(0,0,0);for(let h=0,f=o.length;h<f;h++){const p=c[h],m=o[h];p!==0&&(tp.fromBufferAttribute(m,t),l?nu.addScaledVector(tp,p):nu.addScaledVector(tp.sub(e),p))}e.add(nu)}return e}raycast(t,e){const n=this.geometry,i=this.material,o=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Qc.copy(n.boundingSphere),Qc.applyMatrix4(o),Fa.copy(t.ray).recast(t.near),!(Qc.containsPoint(Fa.origin)===!1&&(Fa.intersectSphere(Qc,Mv)===null||Fa.origin.distanceToSquared(Mv)>(t.far-t.near)**2))&&(Sv.copy(o).invert(),Fa.copy(t.ray).applyMatrix4(Sv),!(n.boundingBox!==null&&Fa.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Fa)))}_computeIntersections(t,e,n){let i;const o=this.geometry,l=this.material,c=o.index,h=o.attributes.position,f=o.attributes.uv,p=o.attributes.uv1,m=o.attributes.normal,g=o.groups,v=o.drawRange;if(c!==null)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],y=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(c.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,L=A;T<L;T+=3){const D=c.getX(T),P=c.getX(T+1),O=c.getX(T+2);i=su(this,y,t,n,f,p,m,D,P,O),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(c.count,v.start+v.count);for(let S=x,y=b;S<y;S+=3){const E=c.getX(S),A=c.getX(S+1),T=c.getX(S+2);i=su(this,l,t,n,f,p,m,E,A,T),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}else if(h!==void 0)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],y=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(h.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,L=A;T<L;T+=3){const D=T,P=T+1,O=T+2;i=su(this,y,t,n,f,p,m,D,P,O),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(h.count,v.start+v.count);for(let S=x,y=b;S<y;S+=3){const E=S,A=S+1,T=S+2;i=su(this,l,t,n,f,p,m,E,A,T),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}}}function r1(s,t,e,n,i,o,l,c){let h;if(t.side===qn?h=n.intersectTriangle(l,o,i,!0,c):h=n.intersectTriangle(i,o,l,t.side===Ps,c),h===null)return null;iu.copy(c),iu.applyMatrix4(s.matrixWorld);const f=e.ray.origin.distanceTo(iu);return f<e.near||f>e.far?null:{distance:f,point:iu.clone(),object:s}}function su(s,t,e,n,i,o,l,c,h,f){s.getVertexPosition(c,$c),s.getVertexPosition(h,tu),s.getVertexPosition(f,eu);const p=r1(s,t,e,n,$c,tu,eu,bv);if(p){const m=new B;ni.getBarycoord(bv,$c,tu,eu,m),i&&(p.uv=ni.getInterpolatedAttribute(i,c,h,f,m,new pt)),o&&(p.uv1=ni.getInterpolatedAttribute(o,c,h,f,m,new pt)),l&&(p.normal=ni.getInterpolatedAttribute(l,c,h,f,m,new B),p.normal.dot(n.direction)>0&&p.normal.multiplyScalar(-1));const g={a:c,b:h,c:f,normal:new B,materialIndex:0};ni.getNormal($c,tu,eu,g.normal),p.face=g,p.barycoord=m}return p}class ur extends _e{constructor(t=1,e=1,n=1,i=1,o=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:o,depthSegments:l};const c=this;i=Math.floor(i),o=Math.floor(o),l=Math.floor(l);const h=[],f=[],p=[],m=[];let g=0,v=0;x("z","y","x",-1,-1,n,e,t,l,o,0),x("z","y","x",1,-1,n,e,-t,l,o,1),x("x","z","y",1,1,t,n,e,i,l,2),x("x","z","y",1,-1,t,n,-e,i,l,3),x("x","y","z",1,-1,t,e,n,i,o,4),x("x","y","z",-1,-1,t,e,-n,i,o,5),this.setIndex(h),this.setAttribute("position",new qt(f,3)),this.setAttribute("normal",new qt(p,3)),this.setAttribute("uv",new qt(m,2));function x(b,S,y,E,A,T,L,D,P,O,C){const w=T/P,H=L/O,Q=T/2,X=L/2,J=D/2,at=P+1,F=O+1;let q=0,G=0;const st=new B;for(let lt=0;lt<F;lt++){const mt=lt*H-X;for(let wt=0;wt<at;wt++){const jt=wt*w-Q;st[b]=jt*E,st[S]=mt*A,st[y]=J,f.push(st.x,st.y,st.z),st[b]=0,st[S]=0,st[y]=D>0?1:-1,p.push(st.x,st.y,st.z),m.push(wt/P),m.push(1-lt/O),q+=1}}for(let lt=0;lt<O;lt++)for(let mt=0;mt<P;mt++){const wt=g+mt+at*lt,jt=g+mt+at*(lt+1),$=g+(mt+1)+at*(lt+1),gt=g+(mt+1)+at*lt;h.push(wt,jt,gt),h.push(jt,$,gt),G+=6}c.addGroup(v,G,C),v+=G,g+=q}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ur(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function xo(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function Wn(s){const t={};for(let e=0;e<s.length;e++){const n=xo(s[e]);for(const i in n)t[i]=n[i]}return t}function o1(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}function ix(s){const t=s.getRenderTarget();return t===null?s.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:Ae.workingColorSpace}const sx={clone:xo,merge:Wn};var l1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,c1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Yi extends zn{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=l1,this.fragmentShader=c1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=xo(t.uniforms),this.uniformsGroups=o1(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?e.uniforms[i]={type:"t",value:l.toJSON(t).uuid}:l&&l.isColor?e.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?e.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?e.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?e.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?e.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?e.uniforms[i]={type:"m4",value:l.toArray()}:e.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class kh extends Ne{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ae,this.projectionMatrix=new ae,this.projectionMatrixInverse=new ae,this.coordinateSystem=Ni}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const aa=new B,Ev=new pt,Tv=new pt;class xn extends kh{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=_o*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(sr*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return _o*2*Math.atan(Math.tan(sr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){aa.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(aa.x,aa.y).multiplyScalar(-t/aa.z),aa.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(aa.x,aa.y).multiplyScalar(-t/aa.z)}getViewSize(t,e){return this.getViewBounds(t,Ev,Tv),e.subVectors(Tv,Ev)}setViewOffset(t,e,n,i,o,l){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(sr*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,o=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const h=l.fullWidth,f=l.fullHeight;o+=l.offsetX*i/h,e-=l.offsetY*n/f,i*=l.width/h,n*=l.height/f}const c=this.filmOffset;c!==0&&(o+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const Kr=-90,Jr=1;class ax extends Ne{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new xn(Kr,Jr,t,e);i.layers=this.layers,this.add(i);const o=new xn(Kr,Jr,t,e);o.layers=this.layers,this.add(o);const l=new xn(Kr,Jr,t,e);l.layers=this.layers,this.add(l);const c=new xn(Kr,Jr,t,e);c.layers=this.layers,this.add(c);const h=new xn(Kr,Jr,t,e);h.layers=this.layers,this.add(h);const f=new xn(Kr,Jr,t,e);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,o,l,c,h]=e;for(const f of e)this.remove(f);if(t===Ni)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),o.up.set(0,0,-1),o.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(t===Fl)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),o.up.set(0,0,1),o.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const f of e)this.add(f),f.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[o,l,c,h,f,p]=this.children,m=t.getRenderTarget(),g=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),x=t.xr.enabled;t.xr.enabled=!1;const b=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,o),t.setRenderTarget(n,1,i),t.render(e,l),t.setRenderTarget(n,2,i),t.render(e,c),t.setRenderTarget(n,3,i),t.render(e,h),t.setRenderTarget(n,4,i),t.render(e,f),n.texture.generateMipmaps=b,t.setRenderTarget(n,5,i),t.render(e,p),t.setRenderTarget(m,g,v),t.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class Jl extends an{constructor(t=[],e=Is,n,i,o,l,c,h,f,p){super(t,e,n,i,o,l,c,h,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class rx extends ls{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new Jl(i),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ur(5,5,5),o=new Yi({name:"CubemapFromEquirect",uniforms:xo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:qn,blending:Ns});o.uniforms.tEquirect.value=e;const l=new hn(i,o),c=e.minFilter;return e.minFilter===as&&(e.minFilter=dn),new ax(1,10,this).update(t,l),e.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,e=!0,n=!0,i=!0){const o=t.getRenderTarget();for(let l=0;l<6;l++)t.setRenderTarget(this,l),t.clear(e,n,i);t.setRenderTarget(o)}}class co extends Ne{constructor(){super(),this.isGroup=!0,this.type="Group"}}const u1={type:"move"};class Bu{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new co,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new co,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new B,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new B),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new co,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new B,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new B),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,o=null,l=null;const c=this._targetRay,h=this._grip,f=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(f&&t.hand){l=!0;for(const b of t.hand.values()){const S=e.getJointPose(b,n),y=this._getHandJoint(f,b);S!==null&&(y.matrix.fromArray(S.transform.matrix),y.matrix.decompose(y.position,y.rotation,y.scale),y.matrixWorldNeedsUpdate=!0,y.jointRadius=S.radius),y.visible=S!==null}const p=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=p.position.distanceTo(m.position),v=.02,x=.005;f.inputState.pinching&&g>v+x?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!f.inputState.pinching&&g<=v-x&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else h!==null&&t.gripSpace&&(o=e.getPose(t.gripSpace,n),o!==null&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,o.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(o.linearVelocity)):h.hasLinearVelocity=!1,o.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(o.angularVelocity)):h.hasAngularVelocity=!1));c!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&o!==null&&(i=o),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(u1)))}return c!==null&&(c.visible=i!==null),h!==null&&(h.visible=o!==null),f!==null&&(f.visible=l!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new co;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class Wh{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new zt(t),this.density=e}clone(){return new Wh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Xh{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new zt(t),this.near=e,this.far=n}clone(){return new Xh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Am extends Ne{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new yi,this.environmentIntensity=1,this.environmentRotation=new yi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class qh{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=zl,this.updateRanges=[],this.version=0,this.uuid=_i()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,o=this.stride;i<o;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=_i()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=_i()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const kn=new B;class or{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)kn.fromBufferAttribute(this,e),kn.applyMatrix4(t),this.setXYZ(e,kn.x,kn.y,kn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)kn.fromBufferAttribute(this,e),kn.applyNormalMatrix(t),this.setXYZ(e,kn.x,kn.y,kn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)kn.fromBufferAttribute(this,e),kn.transformDirection(t),this.setXYZ(e,kn.x,kn.y,kn.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=Xn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ve(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=ve(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=ve(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=ve(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=ve(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Xn(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Xn(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Xn(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Xn(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array),i=ve(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t=t*this.data.stride+this.offset,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array),i=ve(i,this.array),o=ve(o,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=o,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return new ke(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new or(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class wm extends zn{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new zt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let Qr;const cl=new B,$r=new B,to=new B,eo=new pt,ul=new pt,ox=new ae,au=new B,hl=new B,ru=new B,Av=new pt,ep=new pt,wv=new pt;class lx extends Ne{constructor(t=new wm){if(super(),this.isSprite=!0,this.type="Sprite",Qr===void 0){Qr=new _e;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new qh(e,5);Qr.setIndex([0,1,2,0,2,3]),Qr.setAttribute("position",new or(n,3,0,!1)),Qr.setAttribute("uv",new or(n,2,3,!1))}this.geometry=Qr,this.material=t,this.center=new pt(.5,.5),this.count=1}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),$r.setFromMatrixScale(this.matrixWorld),ox.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),to.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&$r.multiplyScalar(-to.z);const n=this.material.rotation;let i,o;n!==0&&(o=Math.cos(n),i=Math.sin(n));const l=this.center;ou(au.set(-.5,-.5,0),to,l,$r,i,o),ou(hl.set(.5,-.5,0),to,l,$r,i,o),ou(ru.set(.5,.5,0),to,l,$r,i,o),Av.set(0,0),ep.set(1,0),wv.set(1,1);let c=t.ray.intersectTriangle(au,hl,ru,!1,cl);if(c===null&&(ou(hl.set(-.5,.5,0),to,l,$r,i,o),ep.set(0,1),c=t.ray.intersectTriangle(au,ru,hl,!1,cl),c===null))return;const h=t.ray.origin.distanceTo(cl);h<t.near||h>t.far||e.push({distance:h,point:cl.clone(),uv:ni.getInterpolation(cl,au,hl,ru,Av,ep,wv,new pt),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function ou(s,t,e,n,i,o){eo.subVectors(s,e).addScalar(.5).multiply(n),i!==void 0?(ul.x=o*eo.x-i*eo.y,ul.y=i*eo.x+o*eo.y):ul.copy(eo),s.copy(t),s.x+=ul.x,s.y+=ul.y,s.applyMatrix4(ox)}const lu=new B,Cv=new B;class cx extends Ne{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const o=e[n];this.addLevel(o.object.clone(),o.distance,o.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let o;for(o=0;o<i.length&&!(e<i[o].distance);o++);return i.splice(o,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const i=e.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let o=e[n].distance;if(e[n].object.visible&&(o-=o*e[n].hysteresis),t<o)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){lu.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(lu);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){lu.setFromMatrixPosition(t.matrixWorld),Cv.setFromMatrixPosition(this.matrixWorld);const n=lu.distanceTo(Cv)/t.zoom;e[0].object.visible=!0;let i,o;for(i=1,o=e.length;i<o;i++){let l=e[i].distance;if(e[i].object.visible&&(l-=l*e[i].hysteresis),n>=l)e[i-1].object.visible=!1,e[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<o;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,o=n.length;i<o;i++){const l=n[i];e.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return e}}const Rv=new B,Dv=new Ue,Uv=new Ue,h1=new B,Nv=new ae,cu=new B,np=new An,Lv=new ae,ip=new Ao;class ux extends hn{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=qp,this.bindMatrix=new ae,this.bindMatrixInverse=new ae,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new Bn),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,cu),this.boundingBox.expandByPoint(cu)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new An),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,cu),this.boundingSphere.expandByPoint(cu)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),np.copy(this.boundingSphere),np.applyMatrix4(i),t.ray.intersectsSphere(np)!==!1&&(Lv.copy(i).invert(),ip.copy(t.ray).applyMatrix4(Lv),!(this.boundingBox!==null&&ip.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,ip)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Ue,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const o=1/t.manhattanLength();o!==1/0?t.multiplyScalar(o):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===qp?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Fy?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;Dv.fromBufferAttribute(i.attributes.skinIndex,t),Uv.fromBufferAttribute(i.attributes.skinWeight,t),Rv.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let o=0;o<4;o++){const l=Uv.getComponent(o);if(l!==0){const c=Dv.getComponent(o);Nv.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),e.addScaledVector(h1.copy(Rv).applyMatrix4(Nv),l)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Cm extends Ne{constructor(){super(),this.isBone=!0,this.type="Bone"}}class os extends an{constructor(t=null,e=1,n=1,i,o,l,c,h,f=Tn,p=Tn,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Pv=new ae,f1=new ae;class Yh{constructor(t=[],e=[]){this.uuid=_i(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ae)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new ae;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let o=0,l=t.length;o<l;o++){const c=t[o]?t[o].matrixWorld:f1;Pv.multiplyMatrices(c,e[o]),Pv.toArray(n,o*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Yh(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new os(e,t,t,On,ii);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const o=t.bones[n];let l=e[o];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",o),l=new Cm),this.bones.push(l),this.boneInverses.push(new ae().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,o=e.length;i<o;i++){const l=e[i];t.bones.push(l.uuid);const c=n[i];t.boneInverses.push(c.toArray())}return t}}class So extends ke{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const no=new ae,Iv=new ae,uu=[],Ov=new Bn,d1=new ae,fl=new hn,dl=new An;class hx extends hn{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new So(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,d1)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new Bn),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,no),Ov.copy(t.boundingBox).applyMatrix4(no),this.boundingBox.union(Ov)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new An),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,no),dl.copy(t.boundingSphere).applyMatrix4(no),this.boundingSphere.union(dl)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,o=n.length+1,l=t*o+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(fl.geometry=this.geometry,fl.material=this.material,fl.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),dl.copy(this.boundingSphere),dl.applyMatrix4(n),t.ray.intersectsSphere(dl)!==!1))for(let o=0;o<i;o++){this.getMatrixAt(o,no),Iv.multiplyMatrices(n,no),fl.matrixWorld=Iv,fl.raycast(t,uu);for(let l=0,c=uu.length;l<c;l++){const h=uu[l];h.instanceId=o,h.object=this,e.push(h)}uu.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new So(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new os(new Float32Array(i*this.count),i,this.count,Bh,ii));const o=this.morphTexture.source.data.data;let l=0;for(let f=0;f<n.length;f++)l+=n[f];const c=this.geometry.morphTargetsRelative?1:1-l,h=i*t;o[h]=c,o.set(n,h+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const sp=new B,p1=new B,m1=new pe;class oa{constructor(t=new B(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=sp.subVectors(n,e).cross(p1.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(sp),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const o=-(t.start.dot(this.normal)+this.constant)/i;return o<0||o>1?null:e.copy(t.start).addScaledVector(n,o)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||m1.getNormalMatrix(t),i=this.coplanarPoint(sp).applyMatrix4(t),o=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ha=new An,hu=new B;class wo{constructor(t=new oa,e=new oa,n=new oa,i=new oa,o=new oa,l=new oa){this.planes=[t,e,n,i,o,l]}set(t,e,n,i,o,l){const c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(n),c[3].copy(i),c[4].copy(o),c[5].copy(l),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=Ni){const n=this.planes,i=t.elements,o=i[0],l=i[1],c=i[2],h=i[3],f=i[4],p=i[5],m=i[6],g=i[7],v=i[8],x=i[9],b=i[10],S=i[11],y=i[12],E=i[13],A=i[14],T=i[15];if(n[0].setComponents(h-o,g-f,S-v,T-y).normalize(),n[1].setComponents(h+o,g+f,S+v,T+y).normalize(),n[2].setComponents(h+l,g+p,S+x,T+E).normalize(),n[3].setComponents(h-l,g-p,S-x,T-E).normalize(),n[4].setComponents(h-c,g-m,S-b,T-A).normalize(),e===Ni)n[5].setComponents(h+c,g+m,S+b,T+A).normalize();else if(e===Fl)n[5].setComponents(c,m,b,A).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Ha.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Ha.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Ha)}intersectsSprite(t){return Ha.center.set(0,0,0),Ha.radius=.7071067811865476,Ha.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ha)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let o=0;o<6;o++)if(e[o].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(hu.x=i.normal.x>0?t.max.x:t.min.x,hu.y=i.normal.y>0?t.max.y:t.min.y,hu.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(hu)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const ns=new ae,is=new wo;class Zh{constructor(){this.coordinateSystem=Ni}intersectsObject(t,e){if(!e.isArrayCamera||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ns.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),is.setFromProjectionMatrix(ns,this.coordinateSystem),is.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ns.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),is.setFromProjectionMatrix(ns,this.coordinateSystem),is.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ns.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),is.setFromProjectionMatrix(ns,this.coordinateSystem),is.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ns.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),is.setFromProjectionMatrix(ns,this.coordinateSystem),is.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ns.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),is.setFromProjectionMatrix(ns,this.coordinateSystem),is.containsPoint(t))return!0}return!1}clone(){return new Zh}}function ap(s,t){return s-t}function g1(s,t){return s.z-t.z}function v1(s,t){return t.z-s.z}class _1{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const o=this.pool,l=this.list;this.index>=o.length&&o.push({start:-1,count:-1,z:-1,index:-1});const c=o[this.index];l.push(c),this.index++,c.start=t,c.count=e,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const $n=new ae,y1=new zt(1,1,1),Bv=new wo,x1=new Zh,fu=new Bn,Va=new An,pl=new B,zv=new B,S1=new B,rp=new _1,Pn=new hn,du=[];function M1(s,t,e=0){const n=t.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==t.array.constructor){const i=s.count;for(let o=0;o<i;o++)for(let l=0;l<n;l++)t.setComponent(o+e,l,s.getComponent(o,l))}else t.array.set(s.array,e*n);t.needsUpdate=!0}function Ga(s,t){if(s.constructor!==t.constructor){const e=Math.min(s.length,t.length);for(let n=0;n<e;n++)t[n]=s[n]}else{const e=Math.min(s.length,t.length);t.set(new s.constructor(s.buffer,0,e))}}class fx extends hn{constructor(t,e,n=e*2,i){super(new _e,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new os(e,t,t,On,ii);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new os(e,t,t,Kl,Os);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new os(e,t,t,On,ii);n.colorSpace=Ae.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const o in t.attributes){const l=t.getAttribute(o),{array:c,itemSize:h,normalized:f}=l,p=new c.constructor(n*h),m=new ke(p,h,f);e.setAttribute(o,m)}if(t.getIndex()!==null){const o=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new ke(o,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),o=e.getAttribute(n);if(i.itemSize!==o.itemSize||i.normalized!==o.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Bn);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,$n),this.getBoundingBoxAt(o,fu).applyMatrix4($n),t.union(fu)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new An);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,$n),this.getBoundingSphereAt(o,Va).applyMatrix4($n),t.union(Va)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(ap),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const o=this._matricesTexture;$n.identity().toArray(o.image.data,i*16),o.needsUpdate=!0;const l=this._colorsTexture;return l&&(y1.toArray(l.image.data,i*4),l.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},o=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const l=t.getIndex();if(l!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?l.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let h;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(ap),h=this._availableGeometryIds.shift(),o[h]=i):(h=this._geometryCount,this._geometryCount++,o.push(i)),this.setGeometryAt(h,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,h}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=n.getIndex()!==null,o=n.getIndex(),l=e.getIndex(),c=this._geometryInfo[t];if(i&&l.count>c.reservedIndexCount||e.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const h=c.vertexStart,f=c.reservedVertexCount;c.vertexCount=e.getAttribute("position").count;for(const p in n.attributes){const m=e.getAttribute(p),g=n.getAttribute(p);M1(m,g,h);const v=m.itemSize;for(let x=m.count,b=f;x<b;x++){const S=h+x;for(let y=0;y<v;y++)g.setComponent(S,y,0)}g.needsUpdate=!0,g.addUpdateRange(h*v,f*v)}if(i){const p=c.indexStart,m=c.reservedIndexCount;c.indexCount=e.getIndex().count;for(let g=0;g<l.count;g++)o.setX(p+g,h+l.getX(g));for(let g=l.count,v=m;g<v;g++)o.setX(p+g,h);o.needsUpdate=!0,o.addUpdateRange(p,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,e.boundingBox!==null&&(c.boundingBox=e.boundingBox.clone()),c.boundingSphere=null,e.boundingSphere!==null&&(c.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let i=0,o=n.length;i<o;i++)n[i].active&&n[i].geometryIndex===t&&this.deleteInstance(i);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),o=this.geometry;for(let l=0,c=n.length;l<c;l++){const h=i[l],f=n[h];if(f.active!==!1){if(o.index!==null){if(f.indexStart!==e){const{indexStart:p,vertexStart:m,reservedIndexCount:g}=f,v=o.index,x=v.array,b=t-m;for(let S=p;S<p+g;S++)x[S]=x[S]+b;v.array.copyWithin(e,p,p+g),v.addUpdateRange(e,g),f.indexStart=e}e+=f.reservedIndexCount}if(f.vertexStart!==t){const{vertexStart:p,reservedVertexCount:m}=f,g=o.attributes;for(const v in g){const x=g[v],{array:b,itemSize:S}=x;b.copyWithin(t*S,p*S,(p+m)*S),x.addUpdateRange(t*S,m*S)}f.vertexStart=t}t+=f.reservedVertexCount,f.start=o.index?f.indexStart:f.vertexStart,this._nextIndexStart=o.index?f.indexStart+f.reservedIndexCount:0,this._nextVertexStart=f.vertexStart+f.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingBox===null){const o=new Bn,l=n.index,c=n.attributes.position;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;l&&(p=l.getX(p)),o.expandByPoint(pl.fromBufferAttribute(c,p))}i.boundingBox=o}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingSphere===null){const o=new An;this.getBoundingBoxAt(t,fu),fu.getCenter(o.center);const l=n.index,c=n.attributes.position;let h=0;for(let f=i.start,p=i.start+i.count;f<p;f++){let m=f;l&&(m=l.getX(m)),pl.fromBufferAttribute(c,m),h=Math.max(h,o.center.distanceToSquared(pl))}o.radius=Math.sqrt(h),i.boundingSphere=o}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(ap);e[e.length-1]===n.length;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const i=new Int32Array(t),o=new Int32Array(t);Ga(this._multiDrawCounts,i),Ga(this._multiDrawStarts,o),this._multiDrawCounts=i,this._multiDrawStarts=o,this._maxInstanceCount=t;const l=this._indirectTexture,c=this._matricesTexture,h=this._colorsTexture;l.dispose(),this._initIndirectTexture(),Ga(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),Ga(c.image.data,this._matricesTexture.image.data),h&&(h.dispose(),this._initColorsTexture(),Ga(h.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(h=>h.indexStart+h.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const o=this.geometry;o.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new _e,this._initializeGeometry(o));const l=this.geometry;o.index&&Ga(o.index.array,l.index.array);for(const c in o.attributes)Ga(o.attributes[c].array,l.attributes[c].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,o=this.matrixWorld,l=this.geometry;Pn.material=this.material,Pn.geometry.index=l.index,Pn.geometry.attributes=l.attributes,Pn.geometry.boundingBox===null&&(Pn.geometry.boundingBox=new Bn),Pn.geometry.boundingSphere===null&&(Pn.geometry.boundingSphere=new An);for(let c=0,h=n.length;c<h;c++){if(!n[c].visible||!n[c].active)continue;const f=n[c].geometryIndex,p=i[f];Pn.geometry.setDrawRange(p.start,p.count),this.getMatrixAt(c,Pn.matrixWorld).premultiply(o),this.getBoundingBoxAt(f,Pn.geometry.boundingBox),this.getBoundingSphereAt(f,Pn.geometry.boundingSphere),Pn.raycast(t,du);for(let m=0,g=du.length;m<g;m++){const v=du[m];v.object=this,v.batchId=c,e.push(v)}du.length=0}Pn.material=null,Pn.geometry.index=null,Pn.geometry.attributes={},Pn.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,i,o){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,h=this._instanceInfo,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._geometryInfo,g=this.perObjectFrustumCulled,v=this._indirectTexture,x=v.image.data,b=n.isArrayCamera?x1:Bv;g&&!n.isArrayCamera&&($n.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Bv.setFromProjectionMatrix($n,t.coordinateSystem));let S=0;if(this.sortObjects){$n.copy(this.matrixWorld).invert(),pl.setFromMatrixPosition(n.matrixWorld).applyMatrix4($n),zv.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection($n);for(let A=0,T=h.length;A<T;A++)if(h[A].visible&&h[A].active){const L=h[A].geometryIndex;this.getMatrixAt(A,$n),this.getBoundingSphereAt(L,Va).applyMatrix4($n);let D=!1;if(g&&(D=!b.intersectsSphere(Va,n)),!D){const P=m[L],O=S1.subVectors(Va.center,pl).dot(zv);rp.push(P.start,P.count,O,A)}}const y=rp.list,E=this.customSort;E===null?y.sort(o.transparent?v1:g1):E.call(this,y,n);for(let A=0,T=y.length;A<T;A++){const L=y[A];f[S]=L.start*c,p[S]=L.count,x[S]=L.index,S++}rp.reset()}else for(let y=0,E=h.length;y<E;y++)if(h[y].visible&&h[y].active){const A=h[y].geometryIndex;let T=!1;if(g&&(this.getMatrixAt(y,$n),this.getBoundingSphereAt(A,Va).applyMatrix4($n),T=!b.intersectsSphere(Va,n)),!T){const L=m[A];f[S]=L.start*c,p[S]=L.count,x[S]=y,S++}}v.needsUpdate=!0,this._multiDrawCount=S,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,o,l){this.onBeforeRender(t,null,i,o,l)}}class Yn extends zn{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new zt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const bh=new B,Eh=new B,Fv=new ae,ml=new Ao,pu=new An,op=new B,Hv=new B;class da extends Ne{constructor(t=new _e,e=new Yn){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,o=e.count;i<o;i++)bh.fromBufferAttribute(e,i-1),Eh.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=bh.distanceTo(Eh);t.setAttribute("lineDistance",new qt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),pu.copy(n.boundingSphere),pu.applyMatrix4(i),pu.radius+=o,t.ray.intersectsSphere(pu)===!1)return;Fv.copy(i).invert(),ml.copy(t.ray).applyMatrix4(Fv);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,l.start),x=Math.min(p.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const y=p.getX(b),E=p.getX(b+1),A=mu(this,t,ml,h,y,E,b);A&&e.push(A)}if(this.isLineLoop){const b=p.getX(x-1),S=p.getX(v),y=mu(this,t,ml,h,b,S,x-1);y&&e.push(y)}}else{const v=Math.max(0,l.start),x=Math.min(g.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const y=mu(this,t,ml,h,b,b+1,b);y&&e.push(y)}if(this.isLineLoop){const b=mu(this,t,ml,h,x-1,v,x-1);b&&e.push(b)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function mu(s,t,e,n,i,o,l){const c=s.geometry.attributes.position;if(bh.fromBufferAttribute(c,i),Eh.fromBufferAttribute(c,o),e.distanceSqToSegment(bh,Eh,op,Hv)>n)return;op.applyMatrix4(s.matrixWorld);const f=t.ray.origin.distanceTo(op);if(!(f<t.near||f>t.far))return{distance:f,point:Hv.clone().applyMatrix4(s.matrixWorld),index:l,face:null,faceIndex:null,barycoord:null,object:s}}const Vv=new B,Gv=new B;class us extends da{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,o=e.count;i<o;i+=2)Vv.fromBufferAttribute(e,i),Gv.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Vv.distanceTo(Gv);t.setAttribute("lineDistance",new qt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class dx extends da{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Rm extends zn{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new zt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const kv=new ae,jp=new Ao,gu=new An,vu=new B;class px extends Ne{constructor(t=new _e,e=new Rm){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),gu.copy(n.boundingSphere),gu.applyMatrix4(i),gu.radius+=o,t.ray.intersectsSphere(gu)===!1)return;kv.copy(i).invert(),jp.copy(t.ray).applyMatrix4(kv);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),v=Math.min(f.count,l.start+l.count);for(let x=g,b=v;x<b;x++){const S=f.getX(x);vu.fromBufferAttribute(m,S),Wv(vu,S,h,i,t,e,this)}}else{const g=Math.max(0,l.start),v=Math.min(m.count,l.start+l.count);for(let x=g,b=v;x<b;x++)vu.fromBufferAttribute(m,x),Wv(vu,x,h,i,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function Wv(s,t,e,n,i,o,l){const c=jp.distanceSqToPoint(s);if(c<e){const h=new B;jp.closestPointToPoint(s,h),h.applyMatrix4(n);const f=i.ray.origin.distanceTo(h);if(f<i.near||f>i.far)return;o.push({distance:f,distanceToRay:Math.sqrt(c),point:h,index:t,face:null,faceIndex:null,barycoord:null,object:l})}}class mx extends an{constructor(t,e,n,i,o=dn,l=dn,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isVideoTexture=!0,this.generateMipmaps=!1;const p=this;function m(){p.needsUpdate=!0,t.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class b1 extends mx{constructor(t,e,n,i,o,l,c,h){super({},t,e,n,i,o,l,c,h),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class E1 extends an{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=Tn,this.minFilter=Tn,this.generateMipmaps=!1,this.needsUpdate=!0}}class jh extends an{constructor(t,e,n,i,o,l,c,h,f,p,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class T1 extends jh{constructor(t,e,n,i,o,l){super(t,e,n,o,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Ui,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class A1 extends jh{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,Is),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class w1 extends an{constructor(t,e,n,i,o,l,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Dm extends an{constructor(t,e,n=Os,i,o,l,c=Tn,h=Tn,f,p=go,m=1){if(p!==go&&p!==vo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const g={width:t,height:e,depth:m};super(g,i,o,l,c,h,p,n,f),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new ua(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class Kh extends _e{constructor(t=1,e=1,n=4,i=8,o=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:i,heightSegments:o},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),o=Math.max(1,Math.floor(o));const l=[],c=[],h=[],f=[],p=e/2,m=Math.PI/2*t,g=e,v=2*m+g,x=n*2+o,b=i+1,S=new B,y=new B;for(let E=0;E<=x;E++){let A=0,T=0,L=0,D=0;if(E<=n){const C=E/n,w=C*Math.PI/2;T=-p-t*Math.cos(w),L=t*Math.sin(w),D=-t*Math.cos(w),A=C*m}else if(E<=n+o){const C=(E-n)/o;T=-p+C*e,L=t,D=0,A=m+C*g}else{const C=(E-n-o)/n,w=C*Math.PI/2;T=p+t*Math.sin(w),L=t*Math.cos(w),D=t*Math.sin(w),A=m+g+C*m}const P=Math.max(0,Math.min(1,A/v));let O=0;E===0?O=.5/i:E===x&&(O=-.5/i);for(let C=0;C<=i;C++){const w=C/i,H=w*Math.PI*2,Q=Math.sin(H),X=Math.cos(H);y.x=-L*X,y.y=T,y.z=L*Q,c.push(y.x,y.y,y.z),S.set(-L*X,D,L*Q),S.normalize(),h.push(S.x,S.y,S.z),f.push(w+O,P)}if(E>0){const C=(E-1)*b;for(let w=0;w<i;w++){const H=C+w,Q=C+w+1,X=E*b+w,J=E*b+w+1;l.push(H,Q,X),l.push(Q,J,X)}}}this.setIndex(l),this.setAttribute("position",new qt(c,3)),this.setAttribute("normal",new qt(h,3)),this.setAttribute("uv",new qt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Kh(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class Jh extends _e{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const o=[],l=[],c=[],h=[],f=new B,p=new pt;l.push(0,0,0),c.push(0,0,1),h.push(.5,.5);for(let m=0,g=3;m<=e;m++,g+=3){const v=n+m/e*i;f.x=t*Math.cos(v),f.y=t*Math.sin(v),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(l[g]/t+1)/2,p.y=(l[g+1]/t+1)/2,h.push(p.x,p.y)}for(let m=1;m<=e;m++)o.push(m,m+1,0);this.setIndex(o),this.setAttribute("position",new qt(l,3)),this.setAttribute("normal",new qt(c,3)),this.setAttribute("uv",new qt(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Jh(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class Ql extends _e{constructor(t=1,e=1,n=1,i=32,o=1,l=!1,c=0,h=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:o,openEnded:l,thetaStart:c,thetaLength:h};const f=this;i=Math.floor(i),o=Math.floor(o);const p=[],m=[],g=[],v=[];let x=0;const b=[],S=n/2;let y=0;E(),l===!1&&(t>0&&A(!0),e>0&&A(!1)),this.setIndex(p),this.setAttribute("position",new qt(m,3)),this.setAttribute("normal",new qt(g,3)),this.setAttribute("uv",new qt(v,2));function E(){const T=new B,L=new B;let D=0;const P=(e-t)/n;for(let O=0;O<=o;O++){const C=[],w=O/o,H=w*(e-t)+t;for(let Q=0;Q<=i;Q++){const X=Q/i,J=X*h+c,at=Math.sin(J),F=Math.cos(J);L.x=H*at,L.y=-w*n+S,L.z=H*F,m.push(L.x,L.y,L.z),T.set(at,P,F).normalize(),g.push(T.x,T.y,T.z),v.push(X,1-w),C.push(x++)}b.push(C)}for(let O=0;O<i;O++)for(let C=0;C<o;C++){const w=b[C][O],H=b[C+1][O],Q=b[C+1][O+1],X=b[C][O+1];(t>0||C!==0)&&(p.push(w,H,X),D+=3),(e>0||C!==o-1)&&(p.push(H,Q,X),D+=3)}f.addGroup(y,D,0),y+=D}function A(T){const L=x,D=new pt,P=new B;let O=0;const C=T===!0?t:e,w=T===!0?1:-1;for(let Q=1;Q<=i;Q++)m.push(0,S*w,0),g.push(0,w,0),v.push(.5,.5),x++;const H=x;for(let Q=0;Q<=i;Q++){const J=Q/i*h+c,at=Math.cos(J),F=Math.sin(J);P.x=C*F,P.y=S*w,P.z=C*at,m.push(P.x,P.y,P.z),g.push(0,w,0),D.x=at*.5+.5,D.y=F*.5*w+.5,v.push(D.x,D.y),x++}for(let Q=0;Q<i;Q++){const X=L+Q,J=H+Q;T===!0?p.push(J,J+1,X):p.push(J+1,J,X),O+=3}f.addGroup(y,O,T===!0?1:2),y+=O}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ql(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class $l extends Ql{constructor(t=1,e=1,n=32,i=1,o=!1,l=0,c=Math.PI*2){super(0,t,e,n,i,o,l,c),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:l,thetaLength:c}}static fromJSON(t){return new $l(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class ga extends _e{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const o=[],l=[];c(i),f(n),p(),this.setAttribute("position",new qt(o,3)),this.setAttribute("normal",new qt(o.slice(),3)),this.setAttribute("uv",new qt(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const A=new B,T=new B,L=new B;for(let D=0;D<e.length;D+=3)v(e[D+0],A),v(e[D+1],T),v(e[D+2],L),h(A,T,L,E)}function h(E,A,T,L){const D=L+1,P=[];for(let O=0;O<=D;O++){P[O]=[];const C=E.clone().lerp(T,O/D),w=A.clone().lerp(T,O/D),H=D-O;for(let Q=0;Q<=H;Q++)Q===0&&O===D?P[O][Q]=C:P[O][Q]=C.clone().lerp(w,Q/H)}for(let O=0;O<D;O++)for(let C=0;C<2*(D-O)-1;C++){const w=Math.floor(C/2);C%2===0?(g(P[O][w+1]),g(P[O+1][w]),g(P[O][w])):(g(P[O][w+1]),g(P[O+1][w+1]),g(P[O+1][w]))}}function f(E){const A=new B;for(let T=0;T<o.length;T+=3)A.x=o[T+0],A.y=o[T+1],A.z=o[T+2],A.normalize().multiplyScalar(E),o[T+0]=A.x,o[T+1]=A.y,o[T+2]=A.z}function p(){const E=new B;for(let A=0;A<o.length;A+=3){E.x=o[A+0],E.y=o[A+1],E.z=o[A+2];const T=S(E)/2/Math.PI+.5,L=y(E)/Math.PI+.5;l.push(T,1-L)}x(),m()}function m(){for(let E=0;E<l.length;E+=6){const A=l[E+0],T=l[E+2],L=l[E+4],D=Math.max(A,T,L),P=Math.min(A,T,L);D>.9&&P<.1&&(A<.2&&(l[E+0]+=1),T<.2&&(l[E+2]+=1),L<.2&&(l[E+4]+=1))}}function g(E){o.push(E.x,E.y,E.z)}function v(E,A){const T=E*3;A.x=t[T+0],A.y=t[T+1],A.z=t[T+2]}function x(){const E=new B,A=new B,T=new B,L=new B,D=new pt,P=new pt,O=new pt;for(let C=0,w=0;C<o.length;C+=9,w+=6){E.set(o[C+0],o[C+1],o[C+2]),A.set(o[C+3],o[C+4],o[C+5]),T.set(o[C+6],o[C+7],o[C+8]),D.set(l[w+0],l[w+1]),P.set(l[w+2],l[w+3]),O.set(l[w+4],l[w+5]),L.copy(E).add(A).add(T).divideScalar(3);const H=S(L);b(D,w+0,E,H),b(P,w+2,A,H),b(O,w+4,T,H)}}function b(E,A,T,L){L<0&&E.x===1&&(l[A]=E.x-1),T.x===0&&T.z===0&&(l[A]=L/2/Math.PI+.5)}function S(E){return Math.atan2(E.z,-E.x)}function y(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ga(t.vertices,t.indices,t.radius,t.details)}}class Qh extends ga{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n,o=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(o,l,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Qh(t.radius,t.detail)}}const _u=new B,yu=new B,lp=new B,xu=new ni;class gx extends _e{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const i=Math.pow(10,4),o=Math.cos(sr*e),l=t.getIndex(),c=t.getAttribute("position"),h=l?l.count:c.count,f=[0,0,0],p=["a","b","c"],m=new Array(3),g={},v=[];for(let x=0;x<h;x+=3){l?(f[0]=l.getX(x),f[1]=l.getX(x+1),f[2]=l.getX(x+2)):(f[0]=x,f[1]=x+1,f[2]=x+2);const{a:b,b:S,c:y}=xu;if(b.fromBufferAttribute(c,f[0]),S.fromBufferAttribute(c,f[1]),y.fromBufferAttribute(c,f[2]),xu.getNormal(lp),m[0]=`${Math.round(b.x*i)},${Math.round(b.y*i)},${Math.round(b.z*i)}`,m[1]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,m[2]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let E=0;E<3;E++){const A=(E+1)%3,T=m[E],L=m[A],D=xu[p[E]],P=xu[p[A]],O=`${T}_${L}`,C=`${L}_${T}`;C in g&&g[C]?(lp.dot(g[C].normal)<=o&&(v.push(D.x,D.y,D.z),v.push(P.x,P.y,P.z)),g[C]=null):O in g||(g[O]={index0:f[E],index1:f[A],normal:lp.clone()})}}for(const x in g)if(g[x]){const{index0:b,index1:S}=g[x];_u.fromBufferAttribute(c,b),yu.fromBufferAttribute(c,S),v.push(_u.x,_u.y,_u.z),v.push(yu.x,yu.y,yu.z)}this.setAttribute("position",new qt(v,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class Zi{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),o=0;e.push(0);for(let l=1;l<=t;l++)n=this.getPoint(l/t),o+=n.distanceTo(i),e.push(o),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let i=0;const o=n.length;let l;e?l=e:l=t*n[o-1];let c=0,h=o-1,f;for(;c<=h;)if(i=Math.floor(c+(h-c)/2),f=n[i]-l,f<0)c=i+1;else if(f>0)h=i-1;else{h=i;break}if(i=h,n[i]===l)return i/(o-1);const p=n[i],g=n[i+1]-p,v=(l-p)/g;return(i+v)/(o-1)}getTangent(t,e){let i=t-1e-4,o=t+1e-4;i<0&&(i=0),o>1&&(o=1);const l=this.getPoint(i),c=this.getPoint(o),h=e||(l.isVector2?new pt:new B);return h.copy(c).sub(l).normalize(),h}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new B,i=[],o=[],l=[],c=new B,h=new ae;for(let v=0;v<=t;v++){const x=v/t;i[v]=this.getTangentAt(x,new B)}o[0]=new B,l[0]=new B;let f=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),g=Math.abs(i[0].z);p<=f&&(f=p,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),o[0].crossVectors(i[0],c),l[0].crossVectors(i[0],o[0]);for(let v=1;v<=t;v++){if(o[v]=o[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(de(i[v-1].dot(i[v]),-1,1));o[v].applyMatrix4(h.makeRotationAxis(c,x))}l[v].crossVectors(i[v],o[v])}if(e===!0){let v=Math.acos(de(o[0].dot(o[t]),-1,1));v/=t,i[0].dot(c.crossVectors(o[0],o[t]))>0&&(v=-v);for(let x=1;x<=t;x++)o[x].applyMatrix4(h.makeRotationAxis(i[x],v*x)),l[x].crossVectors(i[x],o[x])}return{tangents:i,normals:o,binormals:l}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class $h extends Zi{constructor(t=0,e=0,n=1,i=1,o=0,l=Math.PI*2,c=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=o,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(t,e=new pt){const n=e,i=Math.PI*2;let o=this.aEndAngle-this.aStartAngle;const l=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=i;for(;o>i;)o-=i;o<Number.EPSILON&&(l?o=0:o=i),this.aClockwise===!0&&!l&&(o===i?o=-i:o=o-i);const c=this.aStartAngle+t*o;let h=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),g=h-this.aX,v=f-this.aY;h=g*p-v*m+this.aX,f=g*m+v*p+this.aY}return n.set(h,f)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class vx extends $h{constructor(t,e,n,i,o,l){super(t,e,n,n,i,o,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Um(){let s=0,t=0,e=0,n=0;function i(o,l,c,h){s=o,t=c,e=-3*o+3*l-2*c-h,n=2*o-2*l+c+h}return{initCatmullRom:function(o,l,c,h,f){i(l,c,f*(c-o),f*(h-l))},initNonuniformCatmullRom:function(o,l,c,h,f,p,m){let g=(l-o)/f-(c-o)/(f+p)+(c-l)/p,v=(c-l)/p-(h-l)/(p+m)+(h-c)/m;g*=p,v*=p,i(l,c,g,v)},calc:function(o){const l=o*o,c=l*o;return s+t*o+e*l+n*c}}}const Su=new B,cp=new Um,up=new Um,hp=new Um;class _x extends Zi{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new B){const n=e,i=this.points,o=i.length,l=(o-(this.closed?0:1))*t;let c=Math.floor(l),h=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/o)+1)*o:h===0&&c===o-1&&(c=o-2,h=1);let f,p;this.closed||c>0?f=i[(c-1)%o]:(Su.subVectors(i[0],i[1]).add(i[0]),f=Su);const m=i[c%o],g=i[(c+1)%o];if(this.closed||c+2<o?p=i[(c+2)%o]:(Su.subVectors(i[o-1],i[o-2]).add(i[o-1]),p=Su),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(f.distanceToSquared(m),v),b=Math.pow(m.distanceToSquared(g),v),S=Math.pow(g.distanceToSquared(p),v);b<1e-4&&(b=1),x<1e-4&&(x=b),S<1e-4&&(S=b),cp.initNonuniformCatmullRom(f.x,m.x,g.x,p.x,x,b,S),up.initNonuniformCatmullRom(f.y,m.y,g.y,p.y,x,b,S),hp.initNonuniformCatmullRom(f.z,m.z,g.z,p.z,x,b,S)}else this.curveType==="catmullrom"&&(cp.initCatmullRom(f.x,m.x,g.x,p.x,this.tension),up.initCatmullRom(f.y,m.y,g.y,p.y,this.tension),hp.initCatmullRom(f.z,m.z,g.z,p.z,this.tension));return n.set(cp.calc(h),up.calc(h),hp.calc(h)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new B().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Xv(s,t,e,n,i){const o=(n-t)*.5,l=(i-e)*.5,c=s*s,h=s*c;return(2*e-2*n+o+l)*h+(-3*e+3*n-2*o-l)*c+o*s+e}function C1(s,t){const e=1-s;return e*e*t}function R1(s,t){return 2*(1-s)*s*t}function D1(s,t){return s*s*t}function Cl(s,t,e,n){return C1(s,t)+R1(s,e)+D1(s,n)}function U1(s,t){const e=1-s;return e*e*e*t}function N1(s,t){const e=1-s;return 3*e*e*s*t}function L1(s,t){return 3*(1-s)*s*s*t}function P1(s,t){return s*s*s*t}function Rl(s,t,e,n,i){return U1(s,t)+N1(s,e)+L1(s,n)+P1(s,i)}class Nm extends Zi{constructor(t=new pt,e=new pt,n=new pt,i=new pt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new pt){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Rl(t,i.x,o.x,l.x,c.x),Rl(t,i.y,o.y,l.y,c.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class yx extends Zi{constructor(t=new B,e=new B,n=new B,i=new B){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new B){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Rl(t,i.x,o.x,l.x,c.x),Rl(t,i.y,o.y,l.y,c.y),Rl(t,i.z,o.z,l.z,c.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Lm extends Zi{constructor(t=new pt,e=new pt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new pt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new pt){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class xx extends Zi{constructor(t=new B,e=new B){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new B){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new B){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Pm extends Zi{constructor(t=new pt,e=new pt,n=new pt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new pt){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Cl(t,i.x,o.x,l.x),Cl(t,i.y,o.y,l.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Im extends Zi{constructor(t=new B,e=new B,n=new B){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new B){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Cl(t,i.x,o.x,l.x),Cl(t,i.y,o.y,l.y),Cl(t,i.z,o.z,l.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Om extends Zi{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new pt){const n=e,i=this.points,o=(i.length-1)*t,l=Math.floor(o),c=o-l,h=i[l===0?l:l-1],f=i[l],p=i[l>i.length-2?i.length-1:l+1],m=i[l>i.length-3?i.length-1:l+2];return n.set(Xv(c,h.x,f.x,p.x,m.x),Xv(c,h.y,f.y,p.y,m.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new pt().fromArray(i))}return this}}var Th=Object.freeze({__proto__:null,ArcCurve:vx,CatmullRomCurve3:_x,CubicBezierCurve:Nm,CubicBezierCurve3:yx,EllipseCurve:$h,LineCurve:Lm,LineCurve3:xx,QuadraticBezierCurve:Pm,QuadraticBezierCurve3:Im,SplineCurve:Om});class Sx extends Zi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Th[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let o=0;for(;o<i.length;){if(i[o]>=n){const l=i[o]-n,c=this.curves[o],h=c.getLength(),f=h===0?0:1-l/h;return c.getPointAt(f,e)}o++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,o=this.curves;i<o.length;i++){const l=o[i],c=l.isEllipseCurve?t*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?t*l.points.length:t,h=l.getPoints(c);for(let f=0;f<h.length;f++){const p=h[f];n&&n.equals(p)||(e.push(p),n=p)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Th[i.type]().fromJSON(i))}return this}}class Ah extends Sx{constructor(t){super(),this.type="Path",this.currentPoint=new pt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Lm(this.currentPoint.clone(),new pt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const o=new Pm(this.currentPoint.clone(),new pt(t,e),new pt(n,i));return this.curves.push(o),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,o,l){const c=new Nm(this.currentPoint.clone(),new pt(t,e),new pt(n,i),new pt(o,l));return this.curves.push(c),this.currentPoint.set(o,l),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Om(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+c,e+h,n,i,o,l),this}absarc(t,e,n,i,o,l){return this.absellipse(t,e,n,n,i,o,l),this}ellipse(t,e,n,i,o,l,c,h){const f=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(t+f,e+p,n,i,o,l,c,h),this}absellipse(t,e,n,i,o,l,c,h){const f=new $h(t,e,n,i,o,l,c,h);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const p=f.getPoint(1);return this.currentPoint.copy(p),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class ar extends Ah{constructor(t){super(t),this.uuid=_i(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Ah().fromJSON(i))}return this}}function I1(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let o=Mx(s,0,i,e,!0);const l=[];if(!o||o.next===o.prev)return l;let c,h,f;if(n&&(o=H1(s,t,o,e)),s.length>80*e){c=1/0,h=1/0;let p=-1/0,m=-1/0;for(let g=e;g<i;g+=e){const v=s[g],x=s[g+1];v<c&&(c=v),x<h&&(h=x),v>p&&(p=v),x>m&&(m=x)}f=Math.max(p-c,m-h),f=f!==0?32767/f:0}return Vl(o,l,e,c,h,f,0),l}function Mx(s,t,e,n,i){let o;if(i===J1(s,t,e,n)>0)for(let l=t;l<e;l+=n)o=qv(l/n|0,s[l],s[l+1],o);else for(let l=e-n;l>=t;l-=n)o=qv(l/n|0,s[l],s[l+1],o);return o&&Mo(o,o.next)&&(kl(o),o=o.next),o}function lr(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(Mo(e,e.next)||$e(e.prev,e,e.next)===0)){if(kl(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Vl(s,t,e,n,i,o,l){if(!s)return;!l&&o&&X1(s,n,i,o);let c=s;for(;s.prev!==s.next;){const h=s.prev,f=s.next;if(o?B1(s,n,i,o):O1(s)){t.push(h.i,s.i,f.i),kl(s),s=f.next,c=f.next;continue}if(s=f,s===c){l?l===1?(s=z1(lr(s),t),Vl(s,t,e,n,i,o,2)):l===2&&F1(s,t,e,n,i,o):Vl(lr(s),t,e,n,i,o,1);break}}}function O1(s){const t=s.prev,e=s,n=s.next;if($e(t,e,n)>=0)return!1;const i=t.x,o=e.x,l=n.x,c=t.y,h=e.y,f=n.y,p=Math.min(i,o,l),m=Math.min(c,h,f),g=Math.max(i,o,l),v=Math.max(c,h,f);let x=n.next;for(;x!==t;){if(x.x>=p&&x.x<=g&&x.y>=m&&x.y<=v&&_l(i,c,o,h,l,f,x.x,x.y)&&$e(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function B1(s,t,e,n){const i=s.prev,o=s,l=s.next;if($e(i,o,l)>=0)return!1;const c=i.x,h=o.x,f=l.x,p=i.y,m=o.y,g=l.y,v=Math.min(c,h,f),x=Math.min(p,m,g),b=Math.max(c,h,f),S=Math.max(p,m,g),y=Kp(v,x,t,e,n),E=Kp(b,S,t,e,n);let A=s.prevZ,T=s.nextZ;for(;A&&A.z>=y&&T&&T.z<=E;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&_l(c,p,h,m,f,g,A.x,A.y)&&$e(A.prev,A,A.next)>=0||(A=A.prevZ,T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&_l(c,p,h,m,f,g,T.x,T.y)&&$e(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;A&&A.z>=y;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&_l(c,p,h,m,f,g,A.x,A.y)&&$e(A.prev,A,A.next)>=0)return!1;A=A.prevZ}for(;T&&T.z<=E;){if(T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&_l(c,p,h,m,f,g,T.x,T.y)&&$e(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function z1(s,t){let e=s;do{const n=e.prev,i=e.next.next;!Mo(n,i)&&Ex(n,e,e.next,i)&&Gl(n,i)&&Gl(i,n)&&(t.push(n.i,e.i,i.i),kl(e),kl(e.next),e=s=i),e=e.next}while(e!==s);return lr(e)}function F1(s,t,e,n,i,o){let l=s;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&Z1(l,c)){let h=Tx(l,c);l=lr(l,l.next),h=lr(h,h.next),Vl(l,t,e,n,i,o,0),Vl(h,t,e,n,i,o,0);return}c=c.next}l=l.next}while(l!==s)}function H1(s,t,e,n){const i=[];for(let o=0,l=t.length;o<l;o++){const c=t[o]*n,h=o<l-1?t[o+1]*n:s.length,f=Mx(s,c,h,n,!1);f===f.next&&(f.steiner=!0),i.push(Y1(f))}i.sort(V1);for(let o=0;o<i.length;o++)e=G1(i[o],e);return e}function V1(s,t){let e=s.x-t.x;if(e===0&&(e=s.y-t.y,e===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(t.next.y-t.y)/(t.next.x-t.x);e=n-i}return e}function G1(s,t){const e=k1(s,t);if(!e)return t;const n=Tx(e,s);return lr(n,n.next),lr(e,e.next)}function k1(s,t){let e=t;const n=s.x,i=s.y;let o=-1/0,l;if(Mo(s,e))return e;do{if(Mo(s,e.next))return e.next;if(i<=e.y&&i>=e.next.y&&e.next.y!==e.y){const m=e.x+(i-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(m<=n&&m>o&&(o=m,l=e.x<e.next.x?e:e.next,m===n))return l}e=e.next}while(e!==t);if(!l)return null;const c=l,h=l.x,f=l.y;let p=1/0;e=l;do{if(n>=e.x&&e.x>=h&&n!==e.x&&bx(i<f?n:o,i,h,f,i<f?o:n,i,e.x,e.y)){const m=Math.abs(i-e.y)/(n-e.x);Gl(e,s)&&(m<p||m===p&&(e.x>l.x||e.x===l.x&&W1(l,e)))&&(l=e,p=m)}e=e.next}while(e!==c);return l}function W1(s,t){return $e(s.prev,s,t.prev)<0&&$e(t.next,s,s.next)<0}function X1(s,t,e,n){let i=s;do i.z===0&&(i.z=Kp(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,q1(i)}function q1(s){let t,e=1;do{let n=s,i;s=null;let o=null;for(t=0;n;){t++;let l=n,c=0;for(let f=0;f<e&&(c++,l=l.nextZ,!!l);f++);let h=e;for(;c>0||h>0&&l;)c!==0&&(h===0||!l||n.z<=l.z)?(i=n,n=n.nextZ,c--):(i=l,l=l.nextZ,h--),o?o.nextZ=i:s=i,i.prevZ=o,o=i;n=l}o.nextZ=null,e*=2}while(t>1);return s}function Kp(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function Y1(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function bx(s,t,e,n,i,o,l,c){return(i-l)*(t-c)>=(s-l)*(o-c)&&(s-l)*(n-c)>=(e-l)*(t-c)&&(e-l)*(o-c)>=(i-l)*(n-c)}function _l(s,t,e,n,i,o,l,c){return!(s===l&&t===c)&&bx(s,t,e,n,i,o,l,c)}function Z1(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!j1(s,t)&&(Gl(s,t)&&Gl(t,s)&&K1(s,t)&&($e(s.prev,s,t.prev)||$e(s,t.prev,t))||Mo(s,t)&&$e(s.prev,s,s.next)>0&&$e(t.prev,t,t.next)>0)}function $e(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function Mo(s,t){return s.x===t.x&&s.y===t.y}function Ex(s,t,e,n){const i=bu($e(s,t,e)),o=bu($e(s,t,n)),l=bu($e(e,n,s)),c=bu($e(e,n,t));return!!(i!==o&&l!==c||i===0&&Mu(s,e,t)||o===0&&Mu(s,n,t)||l===0&&Mu(e,s,n)||c===0&&Mu(e,t,n))}function Mu(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function bu(s){return s>0?1:s<0?-1:0}function j1(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&Ex(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function Gl(s,t){return $e(s.prev,s,s.next)<0?$e(s,t,s.next)>=0&&$e(s,s.prev,t)>=0:$e(s,t,s.prev)<0||$e(s,s.next,t)<0}function K1(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,o=(s.y+t.y)/2;do e.y>o!=e.next.y>o&&e.next.y!==e.y&&i<(e.next.x-e.x)*(o-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function Tx(s,t){const e=Jp(s.i,s.x,s.y),n=Jp(t.i,t.x,t.y),i=s.next,o=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,o.next=n,n.prev=o,n}function qv(s,t,e,n){const i=Jp(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function kl(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Jp(s,t,e){return{i:s,x:t,y:e,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function J1(s,t,e,n){let i=0;for(let o=t,l=e-n;o<e;o+=n)i+=(s[l]-s[o])*(s[o+1]+s[l+1]),l=o;return i}class Q1{static triangulate(t,e,n=2){return I1(t,e,n)}}class qi{static area(t){const e=t.length;let n=0;for(let i=e-1,o=0;o<e;i=o++)n+=t[i].x*t[o].y-t[o].x*t[i].y;return n*.5}static isClockWise(t){return qi.area(t)<0}static triangulateShape(t,e){const n=[],i=[],o=[];Yv(t),Zv(n,t);let l=t.length;e.forEach(Yv);for(let h=0;h<e.length;h++)i.push(l),l+=e[h].length,Zv(n,e[h]);const c=Q1.triangulate(n,i);for(let h=0;h<c.length;h+=3)o.push(c.slice(h,h+3));return o}}function Yv(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function Zv(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class tf extends _e{constructor(t=new ar([new pt(.5,.5),new pt(-.5,.5),new pt(-.5,-.5),new pt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],o=[];for(let c=0,h=t.length;c<h;c++){const f=t[c];l(f)}this.setAttribute("position",new qt(i,3)),this.setAttribute("uv",new qt(o,2)),this.computeVertexNormals();function l(c){const h=[],f=e.curveSegments!==void 0?e.curveSegments:12,p=e.steps!==void 0?e.steps:1,m=e.depth!==void 0?e.depth:1;let g=e.bevelEnabled!==void 0?e.bevelEnabled:!0,v=e.bevelThickness!==void 0?e.bevelThickness:.2,x=e.bevelSize!==void 0?e.bevelSize:v-.1,b=e.bevelOffset!==void 0?e.bevelOffset:0,S=e.bevelSegments!==void 0?e.bevelSegments:3;const y=e.extrudePath,E=e.UVGenerator!==void 0?e.UVGenerator:$1;let A,T=!1,L,D,P,O;y&&(A=y.getSpacedPoints(p),T=!0,g=!1,L=y.computeFrenetFrames(p,!1),D=new B,P=new B,O=new B),g||(S=0,v=0,x=0,b=0);const C=c.extractPoints(f);let w=C.shape;const H=C.holes;if(!qi.isClockWise(w)){w=w.reverse();for(let I=0,Tt=H.length;I<Tt;I++){const _t=H[I];qi.isClockWise(_t)&&(H[I]=_t.reverse())}}function X(I){const _t=10000000000000001e-36;let bt=I[0];for(let ut=1;ut<=I.length;ut++){const Ot=ut%I.length,vt=I[Ot],It=vt.x-bt.x,ue=vt.y-bt.y,z=It*It+ue*ue,R=Math.max(Math.abs(vt.x),Math.abs(vt.y),Math.abs(bt.x),Math.abs(bt.y)),K=_t*R*R;if(z<=K){I.splice(Ot,1),ut--;continue}bt=vt}}X(w),H.forEach(X);const J=H.length,at=w;for(let I=0;I<J;I++){const Tt=H[I];w=w.concat(Tt)}function F(I,Tt,_t){return Tt||console.error("THREE.ExtrudeGeometry: vec does not exist"),I.clone().addScaledVector(Tt,_t)}const q=w.length;function G(I,Tt,_t){let bt,ut,Ot;const vt=I.x-Tt.x,It=I.y-Tt.y,ue=_t.x-I.x,z=_t.y-I.y,R=vt*vt+It*It,K=vt*z-It*ue;if(Math.abs(K)>Number.EPSILON){const rt=Math.sqrt(R),dt=Math.sqrt(ue*ue+z*z),ot=Tt.x-It/rt,Zt=Tt.y+vt/rt,Ct=_t.x-z/dt,Gt=_t.y+ue/dt,Yt=((Ct-ot)*z-(Gt-Zt)*ue)/(vt*z-It*ue);bt=ot+vt*Yt-I.x,ut=Zt+It*Yt-I.y;const ft=bt*bt+ut*ut;if(ft<=2)return new pt(bt,ut);Ot=Math.sqrt(ft/2)}else{let rt=!1;vt>Number.EPSILON?ue>Number.EPSILON&&(rt=!0):vt<-Number.EPSILON?ue<-Number.EPSILON&&(rt=!0):Math.sign(It)===Math.sign(z)&&(rt=!0),rt?(bt=-It,ut=vt,Ot=Math.sqrt(R)):(bt=vt,ut=It,Ot=Math.sqrt(R/2))}return new pt(bt/Ot,ut/Ot)}const st=[];for(let I=0,Tt=at.length,_t=Tt-1,bt=I+1;I<Tt;I++,_t++,bt++)_t===Tt&&(_t=0),bt===Tt&&(bt=0),st[I]=G(at[I],at[_t],at[bt]);const lt=[];let mt,wt=st.concat();for(let I=0,Tt=J;I<Tt;I++){const _t=H[I];mt=[];for(let bt=0,ut=_t.length,Ot=ut-1,vt=bt+1;bt<ut;bt++,Ot++,vt++)Ot===ut&&(Ot=0),vt===ut&&(vt=0),mt[bt]=G(_t[bt],_t[Ot],_t[vt]);lt.push(mt),wt=wt.concat(mt)}let jt;if(S===0)jt=qi.triangulateShape(at,H);else{const I=[],Tt=[];for(let _t=0;_t<S;_t++){const bt=_t/S,ut=v*Math.cos(bt*Math.PI/2),Ot=x*Math.sin(bt*Math.PI/2)+b;for(let vt=0,It=at.length;vt<It;vt++){const ue=F(at[vt],st[vt],Ot);fe(ue.x,ue.y,-ut),bt===0&&I.push(ue)}for(let vt=0,It=J;vt<It;vt++){const ue=H[vt];mt=lt[vt];const z=[];for(let R=0,K=ue.length;R<K;R++){const rt=F(ue[R],mt[R],Ot);fe(rt.x,rt.y,-ut),bt===0&&z.push(rt)}bt===0&&Tt.push(z)}}jt=qi.triangulateShape(I,Tt)}const $=jt.length,gt=x+b;for(let I=0;I<q;I++){const Tt=g?F(w[I],wt[I],gt):w[I];T?(P.copy(L.normals[0]).multiplyScalar(Tt.x),D.copy(L.binormals[0]).multiplyScalar(Tt.y),O.copy(A[0]).add(P).add(D),fe(O.x,O.y,O.z)):fe(Tt.x,Tt.y,0)}for(let I=1;I<=p;I++)for(let Tt=0;Tt<q;Tt++){const _t=g?F(w[Tt],wt[Tt],gt):w[Tt];T?(P.copy(L.normals[I]).multiplyScalar(_t.x),D.copy(L.binormals[I]).multiplyScalar(_t.y),O.copy(A[I]).add(P).add(D),fe(O.x,O.y,O.z)):fe(_t.x,_t.y,m/p*I)}for(let I=S-1;I>=0;I--){const Tt=I/S,_t=v*Math.cos(Tt*Math.PI/2),bt=x*Math.sin(Tt*Math.PI/2)+b;for(let ut=0,Ot=at.length;ut<Ot;ut++){const vt=F(at[ut],st[ut],bt);fe(vt.x,vt.y,m+_t)}for(let ut=0,Ot=H.length;ut<Ot;ut++){const vt=H[ut];mt=lt[ut];for(let It=0,ue=vt.length;It<ue;It++){const z=F(vt[It],mt[It],bt);T?fe(z.x,z.y+A[p-1].y,A[p-1].x+_t):fe(z.x,z.y,m+_t)}}}Wt(),Dt();function Wt(){const I=i.length/3;if(g){let Tt=0,_t=q*Tt;for(let bt=0;bt<$;bt++){const ut=jt[bt];Jt(ut[2]+_t,ut[1]+_t,ut[0]+_t)}Tt=p+S*2,_t=q*Tt;for(let bt=0;bt<$;bt++){const ut=jt[bt];Jt(ut[0]+_t,ut[1]+_t,ut[2]+_t)}}else{for(let Tt=0;Tt<$;Tt++){const _t=jt[Tt];Jt(_t[2],_t[1],_t[0])}for(let Tt=0;Tt<$;Tt++){const _t=jt[Tt];Jt(_t[0]+q*p,_t[1]+q*p,_t[2]+q*p)}}n.addGroup(I,i.length/3-I,0)}function Dt(){const I=i.length/3;let Tt=0;Vt(at,Tt),Tt+=at.length;for(let _t=0,bt=H.length;_t<bt;_t++){const ut=H[_t];Vt(ut,Tt),Tt+=ut.length}n.addGroup(I,i.length/3-I,1)}function Vt(I,Tt){let _t=I.length;for(;--_t>=0;){const bt=_t;let ut=_t-1;ut<0&&(ut=I.length-1);for(let Ot=0,vt=p+S*2;Ot<vt;Ot++){const It=q*Ot,ue=q*(Ot+1),z=Tt+bt+It,R=Tt+ut+It,K=Tt+ut+ue,rt=Tt+bt+ue;Be(z,R,K,rt)}}}function fe(I,Tt,_t){h.push(I),h.push(Tt),h.push(_t)}function Jt(I,Tt,_t){xe(I),xe(Tt),xe(_t);const bt=i.length/3,ut=E.generateTopUV(n,i,bt-3,bt-2,bt-1);oe(ut[0]),oe(ut[1]),oe(ut[2])}function Be(I,Tt,_t,bt){xe(I),xe(Tt),xe(bt),xe(Tt),xe(_t),xe(bt);const ut=i.length/3,Ot=E.generateSideWallUV(n,i,ut-6,ut-3,ut-2,ut-1);oe(Ot[0]),oe(Ot[1]),oe(Ot[3]),oe(Ot[1]),oe(Ot[2]),oe(Ot[3])}function xe(I){i.push(h[I*3+0]),i.push(h[I*3+1]),i.push(h[I*3+2])}function oe(I){o.push(I.x),o.push(I.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return tT(e,n,t)}static fromJSON(t,e){const n=[];for(let o=0,l=t.shapes.length;o<l;o++){const c=e[t.shapes[o]];n.push(c)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new Th[i.type]().fromJSON(i)),new tf(n,t.options)}}const $1={generateTopUV:function(s,t,e,n,i){const o=t[e*3],l=t[e*3+1],c=t[n*3],h=t[n*3+1],f=t[i*3],p=t[i*3+1];return[new pt(o,l),new pt(c,h),new pt(f,p)]},generateSideWallUV:function(s,t,e,n,i,o){const l=t[e*3],c=t[e*3+1],h=t[e*3+2],f=t[n*3],p=t[n*3+1],m=t[n*3+2],g=t[i*3],v=t[i*3+1],x=t[i*3+2],b=t[o*3],S=t[o*3+1],y=t[o*3+2];return Math.abs(c-p)<Math.abs(l-f)?[new pt(l,1-h),new pt(f,1-m),new pt(g,1-x),new pt(b,1-y)]:[new pt(c,1-h),new pt(p,1-m),new pt(v,1-x),new pt(S,1-y)]}};function tT(s,t,e){if(e.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const o=s[n];e.shapes.push(o.uuid)}else e.shapes.push(s.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class ef extends ga{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],o=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,o,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new ef(t.radius,t.detail)}}class nf extends _e{constructor(t=[new pt(0,-.5),new pt(.5,0),new pt(0,.5)],e=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=de(i,0,Math.PI*2);const o=[],l=[],c=[],h=[],f=[],p=1/e,m=new B,g=new pt,v=new B,x=new B,b=new B;let S=0,y=0;for(let E=0;E<=t.length-1;E++)switch(E){case 0:S=t[E+1].x-t[E].x,y=t[E+1].y-t[E].y,v.x=y*1,v.y=-S,v.z=y*0,b.copy(v),v.normalize(),h.push(v.x,v.y,v.z);break;case t.length-1:h.push(b.x,b.y,b.z);break;default:S=t[E+1].x-t[E].x,y=t[E+1].y-t[E].y,v.x=y*1,v.y=-S,v.z=y*0,x.copy(v),v.x+=b.x,v.y+=b.y,v.z+=b.z,v.normalize(),h.push(v.x,v.y,v.z),b.copy(x)}for(let E=0;E<=e;E++){const A=n+E*p*i,T=Math.sin(A),L=Math.cos(A);for(let D=0;D<=t.length-1;D++){m.x=t[D].x*T,m.y=t[D].y,m.z=t[D].x*L,l.push(m.x,m.y,m.z),g.x=E/e,g.y=D/(t.length-1),c.push(g.x,g.y);const P=h[3*D+0]*T,O=h[3*D+1],C=h[3*D+0]*L;f.push(P,O,C)}}for(let E=0;E<e;E++)for(let A=0;A<t.length-1;A++){const T=A+E*t.length,L=T,D=T+t.length,P=T+t.length+1,O=T+1;o.push(L,D,O),o.push(P,O,D)}this.setIndex(o),this.setAttribute("position",new qt(l,3)),this.setAttribute("uv",new qt(c,2)),this.setAttribute("normal",new qt(f,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new nf(t.points,t.segments,t.phiStart,t.phiLength)}}class tc extends ga{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new tc(t.radius,t.detail)}}class Co extends _e{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const o=t/2,l=e/2,c=Math.floor(n),h=Math.floor(i),f=c+1,p=h+1,m=t/c,g=e/h,v=[],x=[],b=[],S=[];for(let y=0;y<p;y++){const E=y*g-l;for(let A=0;A<f;A++){const T=A*m-o;x.push(T,-E,0),b.push(0,0,1),S.push(A/c),S.push(1-y/h)}}for(let y=0;y<h;y++)for(let E=0;E<c;E++){const A=E+f*y,T=E+f*(y+1),L=E+1+f*(y+1),D=E+1+f*y;v.push(A,T,D),v.push(T,L,D)}this.setIndex(v),this.setAttribute("position",new qt(x,3)),this.setAttribute("normal",new qt(b,3)),this.setAttribute("uv",new qt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Co(t.width,t.height,t.widthSegments,t.heightSegments)}}class sf extends _e{constructor(t=.5,e=1,n=32,i=1,o=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:o,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],h=[],f=[],p=[];let m=t;const g=(e-t)/i,v=new B,x=new pt;for(let b=0;b<=i;b++){for(let S=0;S<=n;S++){const y=o+S/n*l;v.x=m*Math.cos(y),v.y=m*Math.sin(y),h.push(v.x,v.y,v.z),f.push(0,0,1),x.x=(v.x/e+1)/2,x.y=(v.y/e+1)/2,p.push(x.x,x.y)}m+=g}for(let b=0;b<i;b++){const S=b*(n+1);for(let y=0;y<n;y++){const E=y+S,A=E,T=E+n+1,L=E+n+2,D=E+1;c.push(A,T,D),c.push(T,L,D)}}this.setIndex(c),this.setAttribute("position",new qt(h,3)),this.setAttribute("normal",new qt(f,3)),this.setAttribute("uv",new qt(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new sf(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class af extends _e{constructor(t=new ar([new pt(0,.5),new pt(-.5,-.5),new pt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],o=[],l=[];let c=0,h=0;if(Array.isArray(t)===!1)f(t);else for(let p=0;p<t.length;p++)f(t[p]),this.addGroup(c,h,p),c+=h,h=0;this.setIndex(n),this.setAttribute("position",new qt(i,3)),this.setAttribute("normal",new qt(o,3)),this.setAttribute("uv",new qt(l,2));function f(p){const m=i.length/3,g=p.extractPoints(e);let v=g.shape;const x=g.holes;qi.isClockWise(v)===!1&&(v=v.reverse());for(let S=0,y=x.length;S<y;S++){const E=x[S];qi.isClockWise(E)===!0&&(x[S]=E.reverse())}const b=qi.triangulateShape(v,x);for(let S=0,y=x.length;S<y;S++){const E=x[S];v=v.concat(E)}for(let S=0,y=v.length;S<y;S++){const E=v[S];i.push(E.x,E.y,0),o.push(0,0,1),l.push(E.x,E.y)}for(let S=0,y=b.length;S<y;S++){const E=b[S],A=E[0]+m,T=E[1]+m,L=E[2]+m;n.push(A,T,L),h+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return eT(e,t)}static fromJSON(t,e){const n=[];for(let i=0,o=t.shapes.length;i<o;i++){const l=e[t.shapes[i]];n.push(l)}return new af(n,t.curveSegments)}}function eT(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class ec extends _e{constructor(t=1,e=32,n=16,i=0,o=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:o,thetaStart:l,thetaLength:c},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const h=Math.min(l+c,Math.PI);let f=0;const p=[],m=new B,g=new B,v=[],x=[],b=[],S=[];for(let y=0;y<=n;y++){const E=[],A=y/n;let T=0;y===0&&l===0?T=.5/e:y===n&&h===Math.PI&&(T=-.5/e);for(let L=0;L<=e;L++){const D=L/e;m.x=-t*Math.cos(i+D*o)*Math.sin(l+A*c),m.y=t*Math.cos(l+A*c),m.z=t*Math.sin(i+D*o)*Math.sin(l+A*c),x.push(m.x,m.y,m.z),g.copy(m).normalize(),b.push(g.x,g.y,g.z),S.push(D+T,1-A),E.push(f++)}p.push(E)}for(let y=0;y<n;y++)for(let E=0;E<e;E++){const A=p[y][E+1],T=p[y][E],L=p[y+1][E],D=p[y+1][E+1];(y!==0||l>0)&&v.push(A,T,D),(y!==n-1||h<Math.PI)&&v.push(T,L,D)}this.setIndex(v),this.setAttribute("position",new qt(x,3)),this.setAttribute("normal",new qt(b,3)),this.setAttribute("uv",new qt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ec(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class rf extends ga{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new rf(t.radius,t.detail)}}class of extends _e{constructor(t=1,e=.4,n=12,i=48,o=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:o},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],h=[],f=[],p=new B,m=new B,g=new B;for(let v=0;v<=n;v++)for(let x=0;x<=i;x++){const b=x/i*o,S=v/n*Math.PI*2;m.x=(t+e*Math.cos(S))*Math.cos(b),m.y=(t+e*Math.cos(S))*Math.sin(b),m.z=e*Math.sin(S),c.push(m.x,m.y,m.z),p.x=t*Math.cos(b),p.y=t*Math.sin(b),g.subVectors(m,p).normalize(),h.push(g.x,g.y,g.z),f.push(x/i),f.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const b=(i+1)*v+x-1,S=(i+1)*(v-1)+x-1,y=(i+1)*(v-1)+x,E=(i+1)*v+x;l.push(b,S,E),l.push(S,y,E)}this.setIndex(l),this.setAttribute("position",new qt(c,3)),this.setAttribute("normal",new qt(h,3)),this.setAttribute("uv",new qt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new of(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class lf extends _e{constructor(t=1,e=.4,n=64,i=8,o=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:o,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],h=[],f=[],p=[],m=new B,g=new B,v=new B,x=new B,b=new B,S=new B,y=new B;for(let A=0;A<=n;++A){const T=A/n*o*Math.PI*2;E(T,o,l,t,v),E(T+.01,o,l,t,x),S.subVectors(x,v),y.addVectors(x,v),b.crossVectors(S,y),y.crossVectors(b,S),b.normalize(),y.normalize();for(let L=0;L<=i;++L){const D=L/i*Math.PI*2,P=-e*Math.cos(D),O=e*Math.sin(D);m.x=v.x+(P*y.x+O*b.x),m.y=v.y+(P*y.y+O*b.y),m.z=v.z+(P*y.z+O*b.z),h.push(m.x,m.y,m.z),g.subVectors(m,v).normalize(),f.push(g.x,g.y,g.z),p.push(A/n),p.push(L/i)}}for(let A=1;A<=n;A++)for(let T=1;T<=i;T++){const L=(i+1)*(A-1)+(T-1),D=(i+1)*A+(T-1),P=(i+1)*A+T,O=(i+1)*(A-1)+T;c.push(L,D,O),c.push(D,P,O)}this.setIndex(c),this.setAttribute("position",new qt(h,3)),this.setAttribute("normal",new qt(f,3)),this.setAttribute("uv",new qt(p,2));function E(A,T,L,D,P){const O=Math.cos(A),C=Math.sin(A),w=L/T*A,H=Math.cos(w);P.x=D*(2+H)*.5*O,P.y=D*(2+H)*C*.5,P.z=D*Math.sin(w)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new lf(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class cf extends _e{constructor(t=new Im(new B(-1,-1,0),new B(-1,1,0),new B(1,1,0)),e=64,n=1,i=8,o=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:o};const l=t.computeFrenetFrames(e,o);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new B,h=new B,f=new pt;let p=new B;const m=[],g=[],v=[],x=[];b(),this.setIndex(x),this.setAttribute("position",new qt(m,3)),this.setAttribute("normal",new qt(g,3)),this.setAttribute("uv",new qt(v,2));function b(){for(let A=0;A<e;A++)S(A);S(o===!1?e:0),E(),y()}function S(A){p=t.getPointAt(A/e,p);const T=l.normals[A],L=l.binormals[A];for(let D=0;D<=i;D++){const P=D/i*Math.PI*2,O=Math.sin(P),C=-Math.cos(P);h.x=C*T.x+O*L.x,h.y=C*T.y+O*L.y,h.z=C*T.z+O*L.z,h.normalize(),g.push(h.x,h.y,h.z),c.x=p.x+n*h.x,c.y=p.y+n*h.y,c.z=p.z+n*h.z,m.push(c.x,c.y,c.z)}}function y(){for(let A=1;A<=e;A++)for(let T=1;T<=i;T++){const L=(i+1)*(A-1)+(T-1),D=(i+1)*A+(T-1),P=(i+1)*A+T,O=(i+1)*(A-1)+T;x.push(L,D,O),x.push(D,P,O)}}function E(){for(let A=0;A<=e;A++)for(let T=0;T<=i;T++)f.x=A/e,f.y=T/i,v.push(f.x,f.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new cf(new Th[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Ax extends _e{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,i=new B,o=new B;if(t.index!==null){const l=t.attributes.position,c=t.index;let h=t.groups;h.length===0&&(h=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,p=h.length;f<p;++f){const m=h[f],g=m.start,v=m.count;for(let x=g,b=g+v;x<b;x+=3)for(let S=0;S<3;S++){const y=c.getX(x+S),E=c.getX(x+(S+1)%3);i.fromBufferAttribute(l,y),o.fromBufferAttribute(l,E),jv(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}}else{const l=t.attributes.position;for(let c=0,h=l.count/3;c<h;c++)for(let f=0;f<3;f++){const p=3*c+f,m=3*c+(f+1)%3;i.fromBufferAttribute(l,p),o.fromBufferAttribute(l,m),jv(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}this.setAttribute("position",new qt(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function jv(s,t,e){const n=`${s.x},${s.y},${s.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${s.x},${s.y},${s.z}`;return e.has(n)===!0||e.has(i)===!0?!1:(e.add(n),e.add(i),!0)}var Kv=Object.freeze({__proto__:null,BoxGeometry:ur,CapsuleGeometry:Kh,CircleGeometry:Jh,ConeGeometry:$l,CylinderGeometry:Ql,DodecahedronGeometry:Qh,EdgesGeometry:gx,ExtrudeGeometry:tf,IcosahedronGeometry:ef,LatheGeometry:nf,OctahedronGeometry:tc,PlaneGeometry:Co,PolyhedronGeometry:ga,RingGeometry:sf,ShapeGeometry:af,SphereGeometry:ec,TetrahedronGeometry:rf,TorusGeometry:of,TorusKnotGeometry:lf,TubeGeometry:cf,WireframeGeometry:Ax});class wx extends zn{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new zt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Cx extends Yi{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Bm extends zn{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new zt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new zt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pa,this.normalScale=new pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new yi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Rx extends Bm{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new pt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return de(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new zt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new zt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new zt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class Dx extends zn{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new zt(16777215),this.specular=new zt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new zt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pa,this.normalScale=new pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new yi,this.combine=jl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Ux extends zn{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new zt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new zt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pa,this.normalScale=new pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Nx extends zn{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pa,this.normalScale=new pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Lx extends zn{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new zt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new zt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pa,this.normalScale=new pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new yi,this.combine=jl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class zm extends zn{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=ky,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Fm extends zn{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class Px extends zn{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new zt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pa,this.normalScale=new pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Ix extends Yn{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function nr(s,t){return!s||s.constructor===t?s:typeof t.BYTES_PER_ELEMENT=="number"?new t(s):Array.prototype.slice.call(s)}function Ox(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function Bx(s){function t(i,o){return s[i]-s[o]}const e=s.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n}function Qp(s,t,e){const n=s.length,i=new s.constructor(n);for(let o=0,l=0;l!==n;++o){const c=e[o]*t;for(let h=0;h!==t;++h)i[l++]=s[c+h]}return i}function Hm(s,t,e,n){let i=1,o=s[0];for(;o!==void 0&&o[n]===void 0;)o=s[i++];if(o===void 0)return;let l=o[n];if(l!==void 0)if(Array.isArray(l))do l=o[n],l!==void 0&&(t.push(o.time),e.push(...l)),o=s[i++];while(o!==void 0);else if(l.toArray!==void 0)do l=o[n],l!==void 0&&(t.push(o.time),l.toArray(e,e.length)),o=s[i++];while(o!==void 0);else do l=o[n],l!==void 0&&(t.push(o.time),e.push(l)),o=s[i++];while(o!==void 0)}function nT(s,t,e,n,i=30){const o=s.clone();o.name=t;const l=[];for(let h=0;h<o.tracks.length;++h){const f=o.tracks[h],p=f.getValueSize(),m=[],g=[];for(let v=0;v<f.times.length;++v){const x=f.times[v]*i;if(!(x<e||x>=n)){m.push(f.times[v]);for(let b=0;b<p;++b)g.push(f.values[v*p+b])}}m.length!==0&&(f.times=nr(m,f.times.constructor),f.values=nr(g,f.values.constructor),l.push(f))}o.tracks=l;let c=1/0;for(let h=0;h<o.tracks.length;++h)c>o.tracks[h].times[0]&&(c=o.tracks[h].times[0]);for(let h=0;h<o.tracks.length;++h)o.tracks[h].shift(-1*c);return o.resetDuration(),o}function iT(s,t=0,e=s,n=30){n<=0&&(n=30);const i=e.tracks.length,o=t/n;for(let l=0;l<i;++l){const c=e.tracks[l],h=c.ValueTypeName;if(h==="bool"||h==="string")continue;const f=s.tracks.find(function(y){return y.name===c.name&&y.ValueTypeName===h});if(f===void 0)continue;let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let g=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=v/3);const x=c.times.length-1;let b;if(o<=c.times[0]){const y=p,E=m-p;b=c.values.slice(y,E)}else if(o>=c.times[x]){const y=x*m+p,E=y+m-p;b=c.values.slice(y,E)}else{const y=c.createInterpolant(),E=p,A=m-p;y.evaluate(o),b=y.resultBuffer.slice(E,A)}h==="quaternion"&&new si().fromArray(b).normalize().conjugate().toArray(b);const S=f.times.length;for(let y=0;y<S;++y){const E=y*v+g;if(h==="quaternion")si.multiplyQuaternionsFlat(f.values,E,b,0,f.values,E);else{const A=v-g*2;for(let T=0;T<A;++T)f.values[E+T]-=b[T]}}}return s.blendMode=xm,s}class sT{static convertArray(t,e){return nr(t,e)}static isTypedArray(t){return Ox(t)}static getKeyframeOrder(t){return Bx(t)}static sortedArray(t,e,n){return Qp(t,e,n)}static flattenJSON(t,e,n,i){Hm(t,e,n,i)}static subclip(t,e,n,i,o=30){return nT(t,e,n,i,o)}static makeClipAdditive(t,e=0,n=t,i=30){return iT(t,e,n,i)}}class nc{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],o=e[n-1];t:{e:{let l;n:{i:if(!(t<i)){for(let c=n+2;;){if(i===void 0){if(t<o)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(o=i,i=e[++n],t<i)break e}l=e.length;break n}if(!(t>=o)){const c=e[1];t<c&&(n=2,o=c);for(let h=n-2;;){if(o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===h)break;if(i=o,o=e[--n-1],t>=o)break e}l=n,n=0;break n}break t}for(;n<l;){const c=n+l>>>1;t<e[c]?l=c:n=c+1}if(i=e[n],o=e[n-1],o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,o,i)}return this.interpolate_(n,o,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,o=t*i;for(let l=0;l!==i;++l)e[l]=n[o+l];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class zx extends nc{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:tr,endingEnd:tr}}intervalChanged_(t,e,n){const i=this.parameterPositions;let o=t-2,l=t+1,c=i[o],h=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case er:o=t,c=2*e-n;break;case Ol:o=i.length-2,c=e+i[o]-i[o+1];break;default:o=t,c=n}if(h===void 0)switch(this.getSettings_().endingEnd){case er:l=t,h=2*n-e;break;case Ol:l=1,h=n+i[1]-i[0];break;default:l=t-1,h=e}const f=(n-e)*.5,p=this.valueSize;this._weightPrev=f/(e-c),this._weightNext=f/(h-n),this._offsetPrev=o*p,this._offsetNext=l*p}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,v=this._weightNext,x=(n-e)/(i-e),b=x*x,S=b*x,y=-g*S+2*g*b-g*x,E=(1+g)*S+(-1.5-2*g)*b+(-.5+g)*x+1,A=(-1-v)*S+(1.5+v)*b+.5*x,T=v*S-v*b;for(let L=0;L!==c;++L)o[L]=y*l[p+L]+E*l[f+L]+A*l[h+L]+T*l[m+L];return o}}class Vm extends nc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=(n-e)/(i-e),m=1-p;for(let g=0;g!==c;++g)o[g]=l[f+g]*m+l[h+g]*p;return o}}class Fx extends nc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Pi{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=nr(e,this.TimeBufferType),this.values=nr(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:nr(t.times,Array),values:nr(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Fx(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Vm(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new zx(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Il:e=this.InterpolantFactoryMethodDiscrete;break;case Mh:e=this.InterpolantFactoryMethodLinear;break;case Ou:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Il;case this.InterpolantFactoryMethodLinear:return Mh;case this.InterpolantFactoryMethodSmooth:return Ou}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let o=0,l=i-1;for(;o!==i&&n[o]<t;)++o;for(;l!==-1&&n[l]>e;)--l;if(++l,o!==0||l!==i){o>=l&&(l=Math.max(l,1),o=l-1);const c=this.getValueSize();this.times=n.slice(o,l),this.values=this.values.slice(o*c,l*c)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,o=n.length;o===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let c=0;c!==o;c++){const h=n[c];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,h),t=!1;break}if(l!==null&&l>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,h,l),t=!1;break}l=h}if(i!==void 0&&Ox(i))for(let c=0,h=i.length;c!==h;++c){const f=i[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Ou,o=t.length-1;let l=1;for(let c=1;c<o;++c){let h=!1;const f=t[c],p=t[c+1];if(f!==p&&(c!==1||f!==t[0]))if(i)h=!0;else{const m=c*n,g=m-n,v=m+n;for(let x=0;x!==n;++x){const b=e[m+x];if(b!==e[g+x]||b!==e[v+x]){h=!0;break}}}if(h){if(c!==l){t[l]=t[c];const m=c*n,g=l*n;for(let v=0;v!==n;++v)e[g+v]=e[m+v]}++l}}if(o>0){t[l]=t[o];for(let c=o*n,h=l*n,f=0;f!==n;++f)e[h+f]=e[c+f];++l}return l!==t.length?(this.times=t.slice(0,l),this.values=e.slice(0,l*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}Pi.prototype.ValueTypeName="";Pi.prototype.TimeBufferType=Float32Array;Pi.prototype.ValueBufferType=Float32Array;Pi.prototype.DefaultInterpolation=Mh;class hr extends Pi{constructor(t,e,n){super(t,e,n)}}hr.prototype.ValueTypeName="bool";hr.prototype.ValueBufferType=Array;hr.prototype.DefaultInterpolation=Il;hr.prototype.InterpolantFactoryMethodLinear=void 0;hr.prototype.InterpolantFactoryMethodSmooth=void 0;class Gm extends Pi{constructor(t,e,n,i){super(t,e,n,i)}}Gm.prototype.ValueTypeName="color";class Wl extends Pi{constructor(t,e,n,i){super(t,e,n,i)}}Wl.prototype.ValueTypeName="number";class Hx extends nc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(n-e)/(i-e);let f=t*c;for(let p=f+c;f!==p;f+=4)si.slerpFlat(o,0,l,f-c,l,f,h);return o}}class ic extends Pi{constructor(t,e,n,i){super(t,e,n,i)}InterpolantFactoryMethodLinear(t){return new Hx(this.times,this.values,this.getValueSize(),t)}}ic.prototype.ValueTypeName="quaternion";ic.prototype.InterpolantFactoryMethodSmooth=void 0;class fr extends Pi{constructor(t,e,n){super(t,e,n)}}fr.prototype.ValueTypeName="string";fr.prototype.ValueBufferType=Array;fr.prototype.DefaultInterpolation=Il;fr.prototype.InterpolantFactoryMethodLinear=void 0;fr.prototype.InterpolantFactoryMethodSmooth=void 0;class Xl extends Pi{constructor(t,e,n,i){super(t,e,n,i)}}Xl.prototype.ValueTypeName="vector";class ql{constructor(t="",e=-1,n=[],i=Hh){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=_i(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let l=0,c=n.length;l!==c;++l)e.push(rT(n[l]).scale(i));const o=new this(t.name,t.duration,e,t.blendMode);return o.uuid=t.uuid,o}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let o=0,l=n.length;o!==l;++o)e.push(Pi.toJSON(n[o]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const o=e.length,l=[];for(let c=0;c<o;c++){let h=[],f=[];h.push((c+o-1)%o,c,(c+1)%o),f.push(0,1,0);const p=Bx(h);h=Qp(h,1,p),f=Qp(f,1,p),!i&&h[0]===0&&(h.push(o),f.push(f[0])),l.push(new Wl(".morphTargetInfluences["+e[c].name+"]",h,f).scale(1/n))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},o=/^([\w-]*?)([\d]+)$/;for(let c=0,h=t.length;c<h;c++){const f=t[c],p=f.name.match(o);if(p&&p.length>1){const m=p[1];let g=i[m];g||(i[m]=g=[]),g.push(f)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],e,n));return l}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,g,v,x,b){if(v.length!==0){const S=[],y=[];Hm(v,S,y,x),S.length!==0&&b.push(new m(g,S,y))}},i=[],o=t.name||"default",l=t.fps||30,c=t.blendMode;let h=t.length||-1;const f=t.hierarchy||[];for(let m=0;m<f.length;m++){const g=f[m].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const v={};let x;for(x=0;x<g.length;x++)if(g[x].morphTargets)for(let b=0;b<g[x].morphTargets.length;b++)v[g[x].morphTargets[b]]=-1;for(const b in v){const S=[],y=[];for(let E=0;E!==g[x].morphTargets.length;++E){const A=g[x];S.push(A.time),y.push(A.morphTarget===b?1:0)}i.push(new Wl(".morphTargetInfluence["+b+"]",S,y))}h=v.length*l}else{const v=".bones["+e[m].name+"]";n(Xl,v+".position",g,"pos",i),n(ic,v+".quaternion",g,"rot",i),n(Xl,v+".scale",g,"scl",i)}}return i.length===0?null:new this(o,h,i,c)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const o=this.tracks[n];e=Math.max(e,o.times[o.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function aT(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Wl;case"vector":case"vector2":case"vector3":case"vector4":return Xl;case"color":return Gm;case"quaternion":return ic;case"bool":case"boolean":return hr;case"string":return fr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function rT(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=aT(s.type);if(s.times===void 0){const e=[],n=[];Hm(s.keys,e,n,"value"),s.times=e,s.values=n}return t.parse!==void 0?t.parse(s):new t(s.name,s.times,s.values,s.interpolation)}const Us={enabled:!1,files:{},add:function(s,t){this.enabled!==!1&&(this.files[s]=t)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class km{constructor(t,e,n){const i=this;let o=!1,l=0,c=0,h;const f=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(p){c++,o===!1&&i.onStart!==void 0&&i.onStart(p,l,c),o=!0},this.itemEnd=function(p){l++,i.onProgress!==void 0&&i.onProgress(p,l,c),l===c&&(o=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return h?h(p):p},this.setURLModifier=function(p){return h=p,this},this.addHandler=function(p,m){return f.push(p,m),this},this.removeHandler=function(p){const m=f.indexOf(p);return m!==-1&&f.splice(m,2),this},this.getHandler=function(p){for(let m=0,g=f.length;m<g;m+=2){const v=f[m],x=f[m+1];if(v.global&&(v.lastIndex=0),v.test(p))return x}return null}}}const Vx=new km;class ai{constructor(t){this.manager=t!==void 0?t:Vx,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,o){n.load(t,i,e,o)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}ai.DEFAULT_MATERIAL_NAME="__DEFAULT";const ws={};class oT extends Error{constructor(t,e){super(t),this.response=e}}class Bs extends ai{constructor(t){super(t),this.mimeType="",this.responseType=""}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=Us.get(t);if(o!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(o),this.manager.itemEnd(t)},0),o;if(ws[t]!==void 0){ws[t].push({onLoad:e,onProgress:n,onError:i});return}ws[t]=[],ws[t].push({onLoad:e,onProgress:n,onError:i});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,h=this.responseType;fetch(l).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const p=ws[t],m=f.body.getReader(),g=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=g?parseInt(g):0,x=v!==0;let b=0;const S=new ReadableStream({start(y){E();function E(){m.read().then(({done:A,value:T})=>{if(A)y.close();else{b+=T.byteLength;const L=new ProgressEvent("progress",{lengthComputable:x,loaded:b,total:v});for(let D=0,P=p.length;D<P;D++){const O=p[D];O.onProgress&&O.onProgress(L)}y.enqueue(T),E()}},A=>{y.error(A)})}}});return new Response(S)}else throw new oT(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(h){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(p=>new DOMParser().parseFromString(p,c));case"json":return f.json();default:if(c==="")return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),g=m&&m[1]?m[1].toLowerCase():void 0,v=new TextDecoder(g);return f.arrayBuffer().then(x=>v.decode(x))}}}).then(f=>{Us.add(t,f);const p=ws[t];delete ws[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onLoad&&v.onLoad(f)}}).catch(f=>{const p=ws[t];if(p===void 0)throw this.manager.itemError(t),f;delete ws[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onError&&v.onError(f)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class lT extends ai{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Bs(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=ql.parse(t[n]);e.push(i)}return e}}class cT extends ai{constructor(t){super(t)}load(t,e,n,i){const o=this,l=[],c=new jh,h=new Bs(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(o.withCredentials);let f=0;function p(m){h.load(t[m],function(g){const v=o.parse(g,!0);l[m]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},f+=1,f===6&&(v.mipmapCount===1&&(c.minFilter=dn),c.image=l,c.format=v.format,c.needsUpdate=!0,e&&e(c))},n,i)}if(Array.isArray(t))for(let m=0,g=t.length;m<g;++m)p(m);else h.load(t,function(m){const g=o.parse(m,!0);if(g.isCubemap){const v=g.mipmaps.length/g.mipmapCount;for(let x=0;x<v;x++){l[x]={mipmaps:[]};for(let b=0;b<g.mipmapCount;b++)l[x].mipmaps.push(g.mipmaps[x*g.mipmapCount+b]),l[x].format=g.format,l[x].width=g.width,l[x].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=dn),c.format=g.format,c.needsUpdate=!0,e&&e(c)},n,i);return c}}class Yl extends ai{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=Us.get(t);if(l!==void 0)return o.manager.itemStart(t),setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0),l;const c=Hl("img");function h(){p(),Us.add(t,this),e&&e(this),o.manager.itemEnd(t)}function f(m){p(),i&&i(m),o.manager.itemError(t),o.manager.itemEnd(t)}function p(){c.removeEventListener("load",h,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",h,!1),c.addEventListener("error",f,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),o.manager.itemStart(t),c.src=t,c}}class uT extends ai{constructor(t){super(t)}load(t,e,n,i){const o=new Jl;o.colorSpace=In;const l=new Yl(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function h(f){l.load(t[f],function(p){o.images[f]=p,c++,c===6&&(o.needsUpdate=!0,e&&e(o))},void 0,i)}for(let f=0;f<t.length;++f)h(f);return o}}class hT extends ai{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new os,c=new Bs(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(o.withCredentials),c.load(t,function(h){let f;try{f=o.parse(h)}catch(p){if(i!==void 0)i(p);else{console.error(p);return}}f.image!==void 0?l.image=f.image:f.data!==void 0&&(l.image.width=f.width,l.image.height=f.height,l.image.data=f.data),l.wrapS=f.wrapS!==void 0?f.wrapS:Ui,l.wrapT=f.wrapT!==void 0?f.wrapT:Ui,l.magFilter=f.magFilter!==void 0?f.magFilter:dn,l.minFilter=f.minFilter!==void 0?f.minFilter:dn,l.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.colorSpace!==void 0&&(l.colorSpace=f.colorSpace),f.flipY!==void 0&&(l.flipY=f.flipY),f.format!==void 0&&(l.format=f.format),f.type!==void 0&&(l.type=f.type),f.mipmaps!==void 0&&(l.mipmaps=f.mipmaps,l.minFilter=as),f.mipmapCount===1&&(l.minFilter=dn),f.generateMipmaps!==void 0&&(l.generateMipmaps=f.generateMipmaps),l.needsUpdate=!0,e&&e(l,f)},n,i),l}}class fT extends ai{constructor(t){super(t)}load(t,e,n,i){const o=new an,l=new Yl(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(t,function(c){o.image=c,o.needsUpdate=!0,e!==void 0&&e(o)},n,i),o}}class va extends Ne{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new zt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class Gx extends va{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ne.DEFAULT_UP),this.updateMatrix(),this.groundColor=new zt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const fp=new ae,Jv=new B,Qv=new B;class Wm{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new pt(512,512),this.mapType=Li,this.map=null,this.mapPass=null,this.matrix=new ae,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new wo,this._frameExtents=new pt(1,1),this._viewportCount=1,this._viewports=[new Ue(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Jv.setFromMatrixPosition(t.matrixWorld),e.position.copy(Jv),Qv.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Qv),e.updateMatrixWorld(),fp.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(fp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(fp)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class dT extends Wm{constructor(){super(new xn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=_o*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,o=t.distance||e.far;(n!==e.fov||i!==e.aspect||o!==e.far)&&(e.fov=n,e.aspect=i,e.far=o,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class kx extends va{constructor(t,e,n=0,i=Math.PI/3,o=0,l=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ne.DEFAULT_UP),this.updateMatrix(),this.target=new Ne,this.distance=n,this.angle=i,this.penumbra=o,this.decay=l,this.map=null,this.shadow=new dT}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const $v=new ae,gl=new B,dp=new B;class pT extends Wm{constructor(){super(new xn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new pt(4,2),this._viewportCount=6,this._viewports=[new Ue(2,1,1,1),new Ue(0,1,1,1),new Ue(3,1,1,1),new Ue(1,1,1,1),new Ue(3,0,1,1),new Ue(1,0,1,1)],this._cubeDirections=[new B(1,0,0),new B(-1,0,0),new B(0,0,1),new B(0,0,-1),new B(0,1,0),new B(0,-1,0)],this._cubeUps=[new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,0,1),new B(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,o=t.distance||n.far;o!==n.far&&(n.far=o,n.updateProjectionMatrix()),gl.setFromMatrixPosition(t.matrixWorld),n.position.copy(gl),dp.copy(n.position),dp.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(dp),n.updateMatrixWorld(),i.makeTranslation(-gl.x,-gl.y,-gl.z),$v.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix($v)}}class Wx extends va{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new pT}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class sc extends kh{constructor(t=-1,e=1,n=1,i=-1,o=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=o,this.far=l,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,o,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let o=n-t,l=n+t,c=i+e,h=i-e;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=f*this.view.offsetX,l=o+f*this.view.width,c-=p*this.view.offsetY,h=c-p*this.view.height}this.projectionMatrix.makeOrthographic(o,l,c,h,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class mT extends Wm{constructor(){super(new sc(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Xx extends va{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ne.DEFAULT_UP),this.updateMatrix(),this.target=new Ne,this.shadow=new mT}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class qx extends va{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Yx extends va{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class Zx{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new B)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.282095),e.addScaledVector(l[1],.488603*i),e.addScaledVector(l[2],.488603*o),e.addScaledVector(l[3],.488603*n),e.addScaledVector(l[4],1.092548*(n*i)),e.addScaledVector(l[5],1.092548*(i*o)),e.addScaledVector(l[6],.315392*(3*o*o-1)),e.addScaledVector(l[7],1.092548*(n*o)),e.addScaledVector(l[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.886227),e.addScaledVector(l[1],2*.511664*i),e.addScaledVector(l[2],2*.511664*o),e.addScaledVector(l[3],2*.511664*n),e.addScaledVector(l[4],2*.429043*n*i),e.addScaledVector(l[5],2*.429043*i*o),e.addScaledVector(l[6],.743125*o*o-.247708),e.addScaledVector(l[7],2*.429043*n*o),e.addScaledVector(l[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,o=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*o,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*o,e[6]=.315392*(3*o*o-1),e[7]=1.092548*n*o,e[8]=.546274*(n*n-i*i)}}class jx extends va{constructor(t=new Zx,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class uf extends ai{constructor(t){super(t),this.textures={}}load(t,e,n,i){const o=this,l=new Bs(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(o){return e[o]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",o),e[o]}const i=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=t.sheen),t.sheenColor!==void 0&&(i.sheenColor=new zt().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(i.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.specularIntensity!==void 0&&(i.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(i.dispersion=t.dispersion),t.iridescence!==void 0&&(i.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(i.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(i.transmission=t.transmission),t.thickness!==void 0&&(i.thickness=t.thickness),t.attenuationDistance!==void 0&&(i.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(i.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(i.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.shadowSide!==void 0&&(i.shadowSide=t.shadowSide),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(i.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(i.depthFunc=t.depthFunc),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(i.blendSrc=t.blendSrc),t.blendDst!==void 0&&(i.blendDst=t.blendDst),t.blendEquation!==void 0&&(i.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(i.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(i.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==void 0&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(i.dithering=t.dithering),t.alphaToCoverage!==void 0&&(i.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(i.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const o in t.uniforms){const l=t.uniforms[o];switch(i.uniforms[o]={},l.type){case"t":i.uniforms[o].value=n(l.value);break;case"c":i.uniforms[o].value=new zt().setHex(l.value);break;case"v2":i.uniforms[o].value=new pt().fromArray(l.value);break;case"v3":i.uniforms[o].value=new B().fromArray(l.value);break;case"v4":i.uniforms[o].value=new Ue().fromArray(l.value);break;case"m3":i.uniforms[o].value=new pe().fromArray(l.value);break;case"m4":i.uniforms[o].value=new ae().fromArray(l.value);break;default:i.uniforms[o].value=l.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(i.glslVersion=t.glslVersion),t.extensions!==void 0)for(const o in t.extensions)i.extensions[o]=t.extensions[o];if(t.lights!==void 0&&(i.lights=t.lights),t.clipping!==void 0&&(i.clipping=t.clipping),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let o=t.normalScale;Array.isArray(o)===!1&&(o=[o,o]),i.normalScale=new pt().fromArray(o)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(i.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapRotation!==void 0&&i.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new pt().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(i.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(i.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(i.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(i.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return uf.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:wx,SpriteMaterial:wm,RawShaderMaterial:Cx,ShaderMaterial:Yi,PointsMaterial:Rm,MeshPhysicalMaterial:Rx,MeshStandardMaterial:Bm,MeshPhongMaterial:Dx,MeshToonMaterial:Ux,MeshNormalMaterial:Nx,MeshLambertMaterial:Lx,MeshDepthMaterial:zm,MeshDistanceMaterial:Fm,MeshBasicMaterial:ma,MeshMatcapMaterial:Px,LineDashedMaterial:Ix,LineBasicMaterial:Yn,Material:zn};return new e[t]}}class $p{static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Kx extends _e{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class Jx extends ai{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Bs(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(v,x){if(e[x]!==void 0)return e[x];const S=v.interleavedBuffers[x],y=o(v,S.buffer),E=lo(S.type,y),A=new qh(E,S.stride);return A.uuid=S.uuid,e[x]=A,A}function o(v,x){if(n[x]!==void 0)return n[x];const S=v.arrayBuffers[x],y=new Uint32Array(S).buffer;return n[x]=y,y}const l=t.isInstancedBufferGeometry?new Kx:new _e,c=t.data.index;if(c!==void 0){const v=lo(c.type,c.array);l.setIndex(new ke(v,1))}const h=t.data.attributes;for(const v in h){const x=h[v];let b;if(x.isInterleavedBufferAttribute){const S=i(t.data,x.data);b=new or(S,x.itemSize,x.offset,x.normalized)}else{const S=lo(x.type,x.array),y=x.isInstancedBufferAttribute?So:ke;b=new y(S,x.itemSize,x.normalized)}x.name!==void 0&&(b.name=x.name),x.usage!==void 0&&b.setUsage(x.usage),l.setAttribute(v,b)}const f=t.data.morphAttributes;if(f)for(const v in f){const x=f[v],b=[];for(let S=0,y=x.length;S<y;S++){const E=x[S];let A;if(E.isInterleavedBufferAttribute){const T=i(t.data,E.data);A=new or(T,E.itemSize,E.offset,E.normalized)}else{const T=lo(E.type,E.array);A=new ke(T,E.itemSize,E.normalized)}E.name!==void 0&&(A.name=E.name),b.push(A)}l.morphAttributes[v]=b}t.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const m=t.data.groups||t.data.drawcalls||t.data.offsets;if(m!==void 0)for(let v=0,x=m.length;v!==x;++v){const b=m[v];l.addGroup(b.start,b.count,b.materialIndex)}const g=t.data.boundingSphere;return g!==void 0&&(l.boundingSphere=new An().fromJSON(g)),t.name&&(l.name=t.name),t.userData&&(l.userData=t.userData),l}}class gT extends ai{constructor(t){super(t)}load(t,e,n,i){const o=this,l=this.path===""?$p.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||l;const c=new Bs(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(t,function(h){let f=null;try{f=JSON.parse(h)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+t+".",m.message);return}const p=f.metadata;if(p===void 0||p.type===void 0||p.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}o.parse(f,e)},n,i)}async loadAsync(t,e){const n=this,i=this.path===""?$p.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const o=new Bs(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials);const l=await o.loadAsync(t,e),c=JSON.parse(l),h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(c)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),o=this.parseGeometries(t.geometries,i),l=this.parseImages(t.images,function(){e!==void 0&&e(f)}),c=this.parseTextures(t.textures,l),h=this.parseMaterials(t.materials,c),f=this.parseObject(t.object,o,h,c,n),p=this.parseSkeletons(t.skeletons,f);if(this.bindSkeletons(f,p),this.bindLightTargets(f),e!==void 0){let m=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){m=!0;break}m===!1&&e(f)}return f}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),o=await this.parseImagesAsync(t.images),l=this.parseTextures(t.textures,o),c=this.parseMaterials(t.materials,l),h=this.parseObject(t.object,i,c,l,e),f=this.parseSkeletons(t.skeletons,h);return this.bindSkeletons(h,f),this.bindLightTargets(h),h}parseShapes(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const o=new ar().fromJSON(t[n]);e[o.uuid]=o}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(o){o.isBone&&(i[o.uuid]=o)}),t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=new Yh().fromJSON(t[o],i);n[c.uuid]=c}return n}parseGeometries(t,e){const n={};if(t!==void 0){const i=new Jx;for(let o=0,l=t.length;o<l;o++){let c;const h=t[o];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(h);break;default:h.type in Kv?c=Kv[h.type].fromJSON(h,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}c.uuid=h.uuid,h.name!==void 0&&(c.name=h.name),h.userData!==void 0&&(c.userData=h.userData),n[h.uuid]=c}}return n}parseMaterials(t,e){const n={},i={};if(t!==void 0){const o=new uf;o.setTextures(e);for(let l=0,c=t.length;l<c;l++){const h=t[l];n[h.uuid]===void 0&&(n[h.uuid]=o.parse(h)),i[h.uuid]=n[h.uuid]}}return i}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const i=t[n],o=ql.parse(i);e[o.uuid]=o}return e}parseImages(t,e){const n=this,i={};let o;function l(h){return n.manager.itemStart(h),o.load(h,function(){n.manager.itemEnd(h)},void 0,function(){n.manager.itemError(h),n.manager.itemEnd(h)})}function c(h){if(typeof h=="string"){const f=h,p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return l(p)}else return h.data?{data:lo(h.type,h.data),width:h.width,height:h.height}:null}if(t!==void 0&&t.length>0){const h=new km(e);o=new Yl(h),o.setCrossOrigin(this.crossOrigin);for(let f=0,p=t.length;f<p;f++){const m=t[f],g=m.url;if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x],y=c(S);y!==null&&(y instanceof HTMLImageElement?v.push(y):v.push(new os(y.data,y.width,y.height)))}i[m.uuid]=new ua(v)}else{const v=c(m.url);i[m.uuid]=new ua(v)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function o(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:e.resourcePath+c;return await i.loadAsync(h)}else return l.data?{data:lo(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){i=new Yl(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=t.length;l<c;l++){const h=t[l],f=h.url;if(Array.isArray(f)){const p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m],x=await o(v);x!==null&&(x instanceof HTMLImageElement?p.push(x):p.push(new os(x.data,x.width,x.height)))}n[h.uuid]=new ua(p)}else{const p=await o(h.url);n[h.uuid]=new ua(p)}}}return n}parseTextures(t,e){function n(o,l){return typeof o=="number"?o:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",o),l[o])}const i={};if(t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=t[o];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),e[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const h=e[c.image],f=h.data;let p;Array.isArray(f)?(p=new Jl,f.length===6&&(p.needsUpdate=!0)):(f&&f.data?p=new os:p=new an,f&&(p.needsUpdate=!0)),p.source=h,p.uuid=c.uuid,c.name!==void 0&&(p.name=c.name),c.mapping!==void 0&&(p.mapping=n(c.mapping,vT)),c.channel!==void 0&&(p.channel=c.channel),c.offset!==void 0&&p.offset.fromArray(c.offset),c.repeat!==void 0&&p.repeat.fromArray(c.repeat),c.center!==void 0&&p.center.fromArray(c.center),c.rotation!==void 0&&(p.rotation=c.rotation),c.wrap!==void 0&&(p.wrapS=n(c.wrap[0],t_),p.wrapT=n(c.wrap[1],t_)),c.format!==void 0&&(p.format=c.format),c.internalFormat!==void 0&&(p.internalFormat=c.internalFormat),c.type!==void 0&&(p.type=c.type),c.colorSpace!==void 0&&(p.colorSpace=c.colorSpace),c.minFilter!==void 0&&(p.minFilter=n(c.minFilter,e_)),c.magFilter!==void 0&&(p.magFilter=n(c.magFilter,e_)),c.anisotropy!==void 0&&(p.anisotropy=c.anisotropy),c.flipY!==void 0&&(p.flipY=c.flipY),c.generateMipmaps!==void 0&&(p.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(p.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(p.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(p.compareFunction=c.compareFunction),c.userData!==void 0&&(p.userData=c.userData),i[c.uuid]=p}return i}parseObject(t,e,n,i,o){let l;function c(g){return e[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),e[g]}function h(g){if(g!==void 0){if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),v.push(n[S])}return v}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}function f(g){return i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),i[g]}let p,m;switch(t.type){case"Scene":l=new Am,t.background!==void 0&&(Number.isInteger(t.background)?l.background=new zt(t.background):l.background=f(t.background)),t.environment!==void 0&&(l.environment=f(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?l.fog=new Xh(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(l.fog=new Wh(t.fog.color,t.fog.density)),t.fog.name!==""&&(l.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(l.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(l.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&l.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":l=new xn(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(l.focus=t.focus),t.zoom!==void 0&&(l.zoom=t.zoom),t.filmGauge!==void 0&&(l.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(l.filmOffset=t.filmOffset),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"OrthographicCamera":l=new sc(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(l.zoom=t.zoom),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"AmbientLight":l=new qx(t.color,t.intensity);break;case"DirectionalLight":l=new Xx(t.color,t.intensity),l.target=t.target||"";break;case"PointLight":l=new Wx(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":l=new Yx(t.color,t.intensity,t.width,t.height);break;case"SpotLight":l=new kx(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),l.target=t.target||"";break;case"HemisphereLight":l=new Gx(t.color,t.groundColor,t.intensity);break;case"LightProbe":l=new jx().fromJSON(t);break;case"SkinnedMesh":p=c(t.geometry),m=h(t.material),l=new ux(p,m),t.bindMode!==void 0&&(l.bindMode=t.bindMode),t.bindMatrix!==void 0&&l.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(l.skeleton=t.skeleton);break;case"Mesh":p=c(t.geometry),m=h(t.material),l=new hn(p,m);break;case"InstancedMesh":p=c(t.geometry),m=h(t.material);const g=t.count,v=t.instanceMatrix,x=t.instanceColor;l=new hx(p,m,g),l.instanceMatrix=new So(new Float32Array(v.array),16),x!==void 0&&(l.instanceColor=new So(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":p=c(t.geometry),m=h(t.material),l=new fx(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,m),l.geometry=p,l.perObjectFrustumCulled=t.perObjectFrustumCulled,l.sortObjects=t.sortObjects,l._drawRanges=t.drawRanges,l._reservedRanges=t.reservedRanges,l._geometryInfo=t.geometryInfo.map(b=>{let S=null,y=null;return b.boundingBox!==void 0&&(S=new Bn().fromJSON(b.boundingBox)),b.boundingSphere!==void 0&&(y=new An().fromJSON(b.boundingSphere)),{...b,boundingBox:S,boundingSphere:y}}),l._instanceInfo=t.instanceInfo,l._availableInstanceIds=t._availableInstanceIds,l._availableGeometryIds=t._availableGeometryIds,l._nextIndexStart=t.nextIndexStart,l._nextVertexStart=t.nextVertexStart,l._geometryCount=t.geometryCount,l._maxInstanceCount=t.maxInstanceCount,l._maxVertexCount=t.maxVertexCount,l._maxIndexCount=t.maxIndexCount,l._geometryInitialized=t.geometryInitialized,l._matricesTexture=f(t.matricesTexture.uuid),l._indirectTexture=f(t.indirectTexture.uuid),t.colorsTexture!==void 0&&(l._colorsTexture=f(t.colorsTexture.uuid)),t.boundingSphere!==void 0&&(l.boundingSphere=new An().fromJSON(t.boundingSphere)),t.boundingBox!==void 0&&(l.boundingBox=new Bn().fromJSON(t.boundingBox));break;case"LOD":l=new cx;break;case"Line":l=new da(c(t.geometry),h(t.material));break;case"LineLoop":l=new dx(c(t.geometry),h(t.material));break;case"LineSegments":l=new us(c(t.geometry),h(t.material));break;case"PointCloud":case"Points":l=new px(c(t.geometry),h(t.material));break;case"Sprite":l=new lx(h(t.material));break;case"Group":l=new co;break;case"Bone":l=new Cm;break;default:l=new Ne}if(l.uuid=t.uuid,t.name!==void 0&&(l.name=t.name),t.matrix!==void 0?(l.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=t.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(t.position!==void 0&&l.position.fromArray(t.position),t.rotation!==void 0&&l.rotation.fromArray(t.rotation),t.quaternion!==void 0&&l.quaternion.fromArray(t.quaternion),t.scale!==void 0&&l.scale.fromArray(t.scale)),t.up!==void 0&&l.up.fromArray(t.up),t.castShadow!==void 0&&(l.castShadow=t.castShadow),t.receiveShadow!==void 0&&(l.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(l.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(l.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(l.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(l.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(l.visible=t.visible),t.frustumCulled!==void 0&&(l.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(l.renderOrder=t.renderOrder),t.userData!==void 0&&(l.userData=t.userData),t.layers!==void 0&&(l.layers.mask=t.layers),t.children!==void 0){const g=t.children;for(let v=0;v<g.length;v++)l.add(this.parseObject(g[v],e,n,i,o))}if(t.animations!==void 0){const g=t.animations;for(let v=0;v<g.length;v++){const x=g[v];l.animations.push(o[x])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(l.autoUpdate=t.autoUpdate);const g=t.levels;for(let v=0;v<g.length;v++){const x=g[v],b=l.getObjectByProperty("uuid",x.object);b!==void 0&&l.addLevel(b,x.distance,x.hysteresis)}}return l}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=e[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);i!==void 0?e.target=i:e.target=new Ne}})}}const vT={UVMapping:Lh,CubeReflectionMapping:Is,CubeRefractionMapping:ha,EquirectangularReflectionMapping:Ul,EquirectangularRefractionMapping:Nl,CubeUVReflectionMapping:Eo},t_={RepeatWrapping:Ll,ClampToEdgeWrapping:Ui,MirroredRepeatWrapping:Pl},e_={NearestFilter:Tn,NearestMipmapNearestFilter:fm,NearestMipmapLinearFilter:oo,LinearFilter:dn,LinearMipmapNearestFilter:Sl,LinearMipmapLinearFilter:as},pp=new WeakMap;class _T extends ai{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=Us.get(t);if(l!==void 0){if(o.manager.itemStart(t),l.then){l.then(f=>{if(pp.has(l)===!0)i&&i(pp.get(l)),o.manager.itemError(t),o.manager.itemEnd(t);else return e&&e(f),o.manager.itemEnd(t),f});return}return setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const h=fetch(t,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(o.options,{colorSpaceConversion:"none"}))}).then(function(f){return Us.add(t,f),e&&e(f),o.manager.itemEnd(t),f}).catch(function(f){i&&i(f),pp.set(h,f),Us.remove(t),o.manager.itemError(t),o.manager.itemEnd(t)});Us.add(t,h),o.manager.itemStart(t)}}let Eu;class Xm{static getContext(){return Eu===void 0&&(Eu=new(window.AudioContext||window.webkitAudioContext)),Eu}static setContext(t){Eu=t}}class yT extends ai{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Bs(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(h){try{const f=h.slice(0);Xm.getContext().decodeAudioData(f,function(m){e(m)}).catch(c)}catch(f){c(f)}},n,i);function c(h){i?i(h):console.error(h),o.manager.itemError(t)}}}const n_=new ae,i_=new ae,ka=new ae;class xT{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new xn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new xn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,ka.copy(t.projectionMatrix);const i=e.eyeSep/2,o=i*e.near/e.focus,l=e.near*Math.tan(sr*e.fov*.5)/e.zoom;let c,h;i_.elements[12]=-i,n_.elements[12]=i,c=-l*e.aspect+o,h=l*e.aspect+o,ka.elements[0]=2*e.near/(h-c),ka.elements[8]=(h+c)/(h-c),this.cameraL.projectionMatrix.copy(ka),c=-l*e.aspect-o,h=l*e.aspect-o,ka.elements[0]=2*e.near/(h-c),ka.elements[8]=(h+c)/(h-c),this.cameraR.projectionMatrix.copy(ka)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(i_),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(n_)}}class Qx extends xn{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class qm{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=s_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=s_();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function s_(){return performance.now()}const Wa=new B,mp=new si,ST=new B,Xa=new B,qa=new B;class MT extends Ne{constructor(){super(),this.type="AudioListener",this.context=Xm.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new qm}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Wa,mp,ST),Xa.set(0,0,-1).applyQuaternion(mp),qa.set(0,1,0).applyQuaternion(mp),e.positionX){const n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Wa.x,n),e.positionY.linearRampToValueAtTime(Wa.y,n),e.positionZ.linearRampToValueAtTime(Wa.z,n),e.forwardX.linearRampToValueAtTime(Xa.x,n),e.forwardY.linearRampToValueAtTime(Xa.y,n),e.forwardZ.linearRampToValueAtTime(Xa.z,n),e.upX.linearRampToValueAtTime(qa.x,n),e.upY.linearRampToValueAtTime(qa.y,n),e.upZ.linearRampToValueAtTime(qa.z,n)}else e.setPosition(Wa.x,Wa.y,Wa.z),e.setOrientation(Xa.x,Xa.y,Xa.z,qa.x,qa.y,qa.z)}}class $x extends Ne{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const Ya=new B,a_=new si,bT=new B,Za=new B;class ET extends $x{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ya,a_,bT),Za.set(0,0,1).applyQuaternion(a_);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Ya.x,n),e.positionY.linearRampToValueAtTime(Ya.y,n),e.positionZ.linearRampToValueAtTime(Ya.z,n),e.orientationX.linearRampToValueAtTime(Za.x,n),e.orientationY.linearRampToValueAtTime(Za.y,n),e.orientationZ.linearRampToValueAtTime(Za.z,n)}else e.setPosition(Ya.x,Ya.y,Ya.z),e.setOrientation(Za.x,Za.y,Za.z)}}class TT{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class tS{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,o,l;switch(e){case"quaternion":i=this._slerp,o=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,o=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,o=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=o,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,o=t*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[o+c]=n[c];l=e}else{l+=e;const c=e/l;this._mixBufferRegion(n,o,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,o=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){const h=e*this._origIndex;this._mixBufferRegion(n,i,h,1-o,e)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let h=e,f=e+e;h!==f;++h)if(n[h]!==n[h+e]){c.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let o=n,l=i;o!==l;++o)e[o]=e[i+o%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,o){if(i>=.5)for(let l=0;l!==o;++l)t[e+l]=t[n+l]}_slerp(t,e,n,i){si.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,o){const l=this._workIndex*o;si.multiplyQuaternionsFlat(t,l,t,e,t,n),si.slerpFlat(t,e,t,e,t,l,i)}_lerp(t,e,n,i,o){const l=1-i;for(let c=0;c!==o;++c){const h=e+c;t[h]=t[h]*l+t[n+c]*i}}_lerpAdditive(t,e,n,i,o){for(let l=0;l!==o;++l){const c=e+l;t[c]=t[c]+t[n+l]*i}}}const Ym="\\[\\]\\.:\\/",AT=new RegExp("["+Ym+"]","g"),Zm="[^"+Ym+"]",wT="[^"+Ym.replace("\\.","")+"]",CT=/((?:WC+[\/:])*)/.source.replace("WC",Zm),RT=/(WCOD+)?/.source.replace("WCOD",wT),DT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Zm),UT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Zm),NT=new RegExp("^"+CT+RT+DT+UT+"$"),LT=["material","materials","bones","map"];class PT{constructor(t,e,n){const i=n||De.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,o=n.length;i!==o;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class De{constructor(t,e,n){this.path=e,this.parsedPath=n||De.parseTrackName(e),this.node=De.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new De.Composite(t,e,n):new De(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(AT,"")}static parseTrackName(t){const e=NT.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const o=n.nodeName.substring(i+1);LT.indexOf(o)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=o)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(o){for(let l=0;l<o.length;l++){const c=o[l];if(c.name===e||c.uuid===e)return c;const h=n(c.children);if(h)return h}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let o=e.propertyIndex;if(t||(t=De.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let p=0;p<t.length;p++)if(t[p].name===f){f=p;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(f!==void 0){if(t[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[f]}}const l=t[i];if(l===void 0){const f=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+i+" but it wasn't found.",t);return}let c=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?c=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(o!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[o]!==void 0&&(o=t.morphTargetDictionary[o])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=o}else l.fromArray!==void 0&&l.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}De.Composite=PT;De.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};De.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};De.prototype.GetterByBindingType=[De.prototype._getValue_direct,De.prototype._getValue_array,De.prototype._getValue_arrayElement,De.prototype._getValue_toArray];De.prototype.SetterByBindingTypeAndVersioning=[[De.prototype._setValue_direct,De.prototype._setValue_direct_setNeedsUpdate,De.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[De.prototype._setValue_array,De.prototype._setValue_array_setNeedsUpdate,De.prototype._setValue_array_setMatrixWorldNeedsUpdate],[De.prototype._setValue_arrayElement,De.prototype._setValue_arrayElement_setNeedsUpdate,De.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[De.prototype._setValue_fromArray,De.prototype._setValue_fromArray_setNeedsUpdate,De.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class IT{constructor(){this.isAnimationObjectGroup=!0,this.uuid=_i(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,o=this._bindings,l=o.length;let c,h=t.length,f=this.nCachedObjects_;for(let p=0,m=arguments.length;p!==m;++p){const g=arguments[p],v=g.uuid;let x=e[v];if(x===void 0){x=h++,e[v]=x,t.push(g);for(let b=0,S=l;b!==S;++b)o[b].push(new De(g,n[b],i[b]))}else if(x<f){c=t[x];const b=--f,S=t[b];e[S.uuid]=x,t[x]=S,e[v]=b,t[b]=g;for(let y=0,E=l;y!==E;++y){const A=o[y],T=A[b];let L=A[x];A[x]=T,L===void 0&&(L=new De(g,n[y],i[y])),A[b]=L}}else t[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const h=arguments[l],f=h.uuid,p=e[f];if(p!==void 0&&p>=o){const m=o++,g=t[m];e[g.uuid]=p,t[p]=g,e[f]=m,t[m]=h;for(let v=0,x=i;v!==x;++v){const b=n[v],S=b[m],y=b[p];b[p]=S,b[m]=y}}}this.nCachedObjects_=o}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_,l=t.length;for(let c=0,h=arguments.length;c!==h;++c){const f=arguments[c],p=f.uuid,m=e[p];if(m!==void 0)if(delete e[p],m<o){const g=--o,v=t[g],x=--l,b=t[x];e[v.uuid]=m,t[m]=v,e[b.uuid]=g,t[g]=b,t.pop();for(let S=0,y=i;S!==y;++S){const E=n[S],A=E[g],T=E[x];E[m]=A,E[g]=T,E.pop()}}else{const g=--l,v=t[g];g>0&&(e[v.uuid]=m),t[m]=v,t.pop();for(let x=0,b=i;x!==b;++x){const S=n[x];S[m]=S[g],S.pop()}}}this.nCachedObjects_=o}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const o=this._bindings;if(i!==void 0)return o[i];const l=this._paths,c=this._parsedPaths,h=this._objects,f=h.length,p=this.nCachedObjects_,m=new Array(f);i=o.length,n[t]=i,l.push(t),c.push(e),o.push(m);for(let g=p,v=h.length;g!==v;++g){const x=h[g];m[g]=new De(x,t,e)}return m}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,o=this._parsedPaths,l=this._bindings,c=l.length-1,h=l[c],f=t[c];e[f]=n,l[n]=h,l.pop(),o[n]=o[c],o.pop(),i[n]=i[c],i.pop()}}}class eS{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const o=e.tracks,l=o.length,c=new Array(l),h={endingStart:tr,endingEnd:tr};for(let f=0;f!==l;++f){const p=o[f].createInterpolant(null);c[f]=p,p.settings=h}this._interpolantSettings=h,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Vy,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),n===!0){const i=this._clip.duration,o=t._clip.duration,l=o/i,c=i/o;t.warp(1,l,e),this.warp(c,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,o=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const h=c.parameterPositions,f=c.sampleValues;return h[0]=o,h[1]=o+n,f[0]=t/l,f[1]=e/l,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const o=this._startTime;if(o!==null){const h=(t-o)*n;h<0||n===0?e=0:(this._startTime=null,e=n*h)}e*=this._updateTimeScale(t);const l=this._updateTime(e),c=this._updateWeight(t);if(c>0){const h=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case xm:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulateAdditive(c);break;case Hh:default:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulate(i,c)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,o=this._loopCount;const l=n===Gy;if(t===0)return o===-1?i:l&&(o&1)===1?e-i:i;if(n===Hy){o===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(o===-1&&(t>=0?(o=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=e||i<0){const c=Math.floor(i/e);i-=e*c,o+=Math.abs(c);const h=this.repetitions-o;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(h===1){const f=t<0;this._setEndings(f,!f,l)}else this._setEndings(!1,!1,l);this._loopCount=o,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(o&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=er,i.endingEnd=er):(t?i.endingStart=this.zeroSlopeAtStart?er:tr:i.endingStart=Ol,e?i.endingEnd=this.zeroSlopeAtEnd?er:tr:i.endingEnd=Ol)}_scheduleFading(t,e,n){const i=this._mixer,o=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,h=l.sampleValues;return c[0]=o,h[0]=e,c[1]=o+t,h[1]=n,this}}const OT=new Float32Array(1);class BT extends cs{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,o=i.length,l=t._propertyBindings,c=t._interpolants,h=n.uuid,f=this._bindingsByRootAndName;let p=f[h];p===void 0&&(p={},f[h]=p);for(let m=0;m!==o;++m){const g=i[m],v=g.name;let x=p[v];if(x!==void 0)++x.referenceCount,l[m]=x;else{if(x=l[m],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,h,v));continue}const b=e&&e._propertyBindings[m].binding.parsedPath;x=new tS(De.create(n,v,b),g.ValueTypeName,g.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,h,v),l[m]=x}c[m].resultBuffer=x.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,o=this._actionsByClip[i];this._bindAction(t,o&&o.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];o.useCount++===0&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.useCount===0&&(o.restoreOriginalState(),this._takeBackBinding(o))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,o=this._actionsByClip;let l=o[e];if(l===void 0)l={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,o[e]=l;else{const c=l.knownActions;t._byClipCacheIndex=c.length,c.push(t)}t._cacheIndex=i.length,i.push(t),l.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const o=t._clip.uuid,l=this._actionsByClip,c=l[o],h=c.knownActions,f=h[h.length-1],p=t._byClipCacheIndex;f._byClipCacheIndex=p,h[p]=f,h.pop(),t._byClipCacheIndex=null;const m=c.actionByRoot,g=(t._localRoot||this._root).uuid;delete m[g],h.length===0&&delete l[o],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.referenceCount===0&&this._removeInactiveBinding(o)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,o=this._bindings;let l=i[e];l===void 0&&(l={},i[e]=l),l[n]=t,t._cacheIndex=o.length,o.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,o=n.path,l=this._bindingsByRootAndName,c=l[i],h=e[e.length-1],f=t._cacheIndex;h._cacheIndex=f,e[f]=h,e.pop(),delete c[o],Object.keys(c).length===0&&delete l[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new Vm(new Float32Array(2),new Float32Array(2),1,OT),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,o=e[i];t.__cacheIndex=i,e[i]=t,o.__cacheIndex=n,e[n]=o}clipAction(t,e,n){const i=e||this._root,o=i.uuid;let l=typeof t=="string"?ql.findByName(i,t):t;const c=l!==null?l.uuid:t,h=this._actionsByClip[c];let f=null;if(n===void 0&&(l!==null?n=l.blendMode:n=Hh),h!==void 0){const m=h.actionByRoot[o];if(m!==void 0&&m.blendMode===n)return m;f=h.knownActions[0],l===null&&(l=f._clip)}if(l===null)return null;const p=new eS(this,l,e,n);return this._bindAction(p,f),this._addInactiveAction(p,c,o),p}existingAction(t,e){const n=e||this._root,i=n.uuid,o=typeof t=="string"?ql.findByName(n,t):t,l=o?o.uuid:t,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,o=Math.sign(t),l=this._accuIndex^=1;for(let f=0;f!==n;++f)e[f]._update(i,t,o,l);const c=this._bindings,h=this._nActiveBindings;for(let f=0;f!==h;++f)c[f].apply(l);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,o=i[n];if(o!==void 0){const l=o.knownActions;for(let c=0,h=l.length;c!==h;++c){const f=l[c];this._deactivateAction(f);const p=f._cacheIndex,m=e[e.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=p,e[p]=m,e.pop(),this._removeInactiveBindingsForAction(f)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,h=c[e];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const i=this._bindingsByRootAndName,o=i[e];if(o!==void 0)for(const l in o){const c=o[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class zT extends bm{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new Gh(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class jm{constructor(t){this.value=t}clone(){return new jm(this.value.clone===void 0?this.value:this.value.clone())}}let FT=0;class HT extends cs{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:FT++}),this.name="",this.usage=zl,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++){const o=Array.isArray(e[n])?e[n]:[e[n]];for(let l=0;l<o.length;l++)this.uniforms.push(o[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class VT extends qh{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class GT{constructor(t,e,n,i,o){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=o,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const r_=new ae;class nS{constructor(t,e,n=0,i=1/0){this.ray=new Ao(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new yo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return r_.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(r_),this}intersectObject(t,e=!0,n=[]){return tm(t,this,n,e),n.sort(o_),n}intersectObjects(t,e=!0,n=[]){for(let i=0,o=t.length;i<o;i++)tm(t[i],this,n,e);return n.sort(o_),n}}function o_(s,t){return s.distance-t.distance}function tm(s,t,e,n){let i=!0;if(s.layers.test(t.layers)&&s.raycast(t,e)===!1&&(i=!1),i===!0&&n===!0){const o=s.children;for(let l=0,c=o.length;l<c;l++)tm(o[l],t,e,!0)}}class kT{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=de(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(de(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class WT{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class Km{constructor(t,e,n,i){Km.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const o=this.elements;return o[0]=t,o[2]=e,o[1]=n,o[3]=i,this}}const l_=new pt;class XT{constructor(t=new pt(1/0,1/0),e=new pt(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=l_.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,l_).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const c_=new B,Tu=new B;class qT{constructor(t=new B,e=new B){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){c_.subVectors(t,this.start),Tu.subVectors(this.end,this.start);const n=Tu.dot(Tu);let o=Tu.dot(c_)/n;return e&&(o=de(o,0,1)),o}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const u_=new B;class YT extends Ne{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new _e,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,h=32;l<h;l++,c++){const f=l/h*Math.PI*2,p=c/h*Math.PI*2;i.push(Math.cos(f),Math.sin(f),1,Math.cos(p),Math.sin(p),1)}n.setAttribute("position",new qt(i,3));const o=new Yn({fog:!1,toneMapped:!1});this.cone=new us(n,o),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),u_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(u_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ra=new B,Au=new ae,gp=new ae;class ZT extends us{constructor(t){const e=iS(t),n=new _e,i=[],o=[],l=new zt(0,0,1),c=new zt(0,1,0);for(let f=0;f<e.length;f++){const p=e[f];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),o.push(l.r,l.g,l.b),o.push(c.r,c.g,c.b))}n.setAttribute("position",new qt(i,3)),n.setAttribute("color",new qt(o,3));const h=new Yn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,h),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");gp.copy(this.root.matrixWorld).invert();for(let o=0,l=0;o<e.length;o++){const c=e[o];c.parent&&c.parent.isBone&&(Au.multiplyMatrices(gp,c.matrixWorld),ra.setFromMatrixPosition(Au),i.setXYZ(l,ra.x,ra.y,ra.z),Au.multiplyMatrices(gp,c.parent.matrixWorld),ra.setFromMatrixPosition(Au),i.setXYZ(l+1,ra.x,ra.y,ra.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}}function iS(s){const t=[];s.isBone===!0&&t.push(s);for(let e=0;e<s.children.length;e++)t.push(...iS(s.children[e]));return t}class jT extends hn{constructor(t,e,n){const i=new ec(e,4,2),o=new ma({wireframe:!0,fog:!1,toneMapped:!1});super(i,o),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const KT=new B,h_=new zt,f_=new zt;class JT extends Ne{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new tc(e);i.rotateY(Math.PI*.5),this.material=new ma({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const o=i.getAttribute("position"),l=new Float32Array(o.count*3);i.setAttribute("color",new ke(l,3)),this.add(new hn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");h_.copy(this.light.color),f_.copy(this.light.groundColor);for(let n=0,i=e.count;n<i;n++){const o=n<i/2?h_:f_;e.setXYZ(n,o.r,o.g,o.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(KT.setFromMatrixPosition(this.light.matrixWorld).negate())}}class QT extends us{constructor(t=10,e=10,n=4473924,i=8947848){n=new zt(n),i=new zt(i);const o=e/2,l=t/e,c=t/2,h=[],f=[];for(let g=0,v=0,x=-c;g<=e;g++,x+=l){h.push(-c,0,x,c,0,x),h.push(x,0,-c,x,0,c);const b=g===o?n:i;b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3}const p=new _e;p.setAttribute("position",new qt(h,3)),p.setAttribute("color",new qt(f,3));const m=new Yn({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class $T extends us{constructor(t=10,e=16,n=8,i=64,o=4473924,l=8947848){o=new zt(o),l=new zt(l);const c=[],h=[];if(e>1)for(let m=0;m<e;m++){const g=m/e*(Math.PI*2),v=Math.sin(g)*t,x=Math.cos(g)*t;c.push(0,0,0),c.push(v,0,x);const b=m&1?o:l;h.push(b.r,b.g,b.b),h.push(b.r,b.g,b.b)}for(let m=0;m<n;m++){const g=m&1?o:l,v=t-t/n*m;for(let x=0;x<i;x++){let b=x/i*(Math.PI*2),S=Math.sin(b)*v,y=Math.cos(b)*v;c.push(S,0,y),h.push(g.r,g.g,g.b),b=(x+1)/i*(Math.PI*2),S=Math.sin(b)*v,y=Math.cos(b)*v,c.push(S,0,y),h.push(g.r,g.g,g.b)}}const f=new _e;f.setAttribute("position",new qt(c,3)),f.setAttribute("color",new qt(h,3));const p=new Yn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const d_=new B,wu=new B,p_=new B;class tA extends Ne{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new _e;i.setAttribute("position",new qt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const o=new Yn({fog:!1,toneMapped:!1});this.lightPlane=new da(i,o),this.add(this.lightPlane),i=new _e,i.setAttribute("position",new qt([0,0,0,0,0,1],3)),this.targetLine=new da(i,o),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),d_.setFromMatrixPosition(this.light.matrixWorld),wu.setFromMatrixPosition(this.light.target.matrixWorld),p_.subVectors(wu,d_),this.lightPlane.lookAt(wu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(wu),this.targetLine.scale.z=p_.length()}}const Cu=new B,sn=new kh;class eA extends us{constructor(t){const e=new _e,n=new Yn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],o=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,b){h(x),h(b)}function h(x){i.push(0,0,0),o.push(0,0,0),l[x]===void 0&&(l[x]=[]),l[x].push(i.length/3-1)}e.setAttribute("position",new qt(i,3)),e.setAttribute("color",new qt(o,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const f=new zt(16755200),p=new zt(16711680),m=new zt(43775),g=new zt(16777215),v=new zt(3355443);this.setColors(f,p,m,g,v)}setColors(t,e,n,i,o){const c=this.geometry.getAttribute("color");c.setXYZ(0,t.r,t.g,t.b),c.setXYZ(1,t.r,t.g,t.b),c.setXYZ(2,t.r,t.g,t.b),c.setXYZ(3,t.r,t.g,t.b),c.setXYZ(4,t.r,t.g,t.b),c.setXYZ(5,t.r,t.g,t.b),c.setXYZ(6,t.r,t.g,t.b),c.setXYZ(7,t.r,t.g,t.b),c.setXYZ(8,t.r,t.g,t.b),c.setXYZ(9,t.r,t.g,t.b),c.setXYZ(10,t.r,t.g,t.b),c.setXYZ(11,t.r,t.g,t.b),c.setXYZ(12,t.r,t.g,t.b),c.setXYZ(13,t.r,t.g,t.b),c.setXYZ(14,t.r,t.g,t.b),c.setXYZ(15,t.r,t.g,t.b),c.setXYZ(16,t.r,t.g,t.b),c.setXYZ(17,t.r,t.g,t.b),c.setXYZ(18,t.r,t.g,t.b),c.setXYZ(19,t.r,t.g,t.b),c.setXYZ(20,t.r,t.g,t.b),c.setXYZ(21,t.r,t.g,t.b),c.setXYZ(22,t.r,t.g,t.b),c.setXYZ(23,t.r,t.g,t.b),c.setXYZ(24,e.r,e.g,e.b),c.setXYZ(25,e.r,e.g,e.b),c.setXYZ(26,e.r,e.g,e.b),c.setXYZ(27,e.r,e.g,e.b),c.setXYZ(28,e.r,e.g,e.b),c.setXYZ(29,e.r,e.g,e.b),c.setXYZ(30,e.r,e.g,e.b),c.setXYZ(31,e.r,e.g,e.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,o.r,o.g,o.b),c.setXYZ(41,o.r,o.g,o.b),c.setXYZ(42,o.r,o.g,o.b),c.setXYZ(43,o.r,o.g,o.b),c.setXYZ(44,o.r,o.g,o.b),c.setXYZ(45,o.r,o.g,o.b),c.setXYZ(46,o.r,o.g,o.b),c.setXYZ(47,o.r,o.g,o.b),c.setXYZ(48,o.r,o.g,o.b),c.setXYZ(49,o.r,o.g,o.b),c.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap,n=1,i=1;sn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const o=this.camera.coordinateSystem===Ni?-1:0;rn("c",e,t,sn,0,0,o),rn("t",e,t,sn,0,0,1),rn("n1",e,t,sn,-1,-1,o),rn("n2",e,t,sn,n,-1,o),rn("n3",e,t,sn,-1,i,o),rn("n4",e,t,sn,n,i,o),rn("f1",e,t,sn,-1,-1,1),rn("f2",e,t,sn,n,-1,1),rn("f3",e,t,sn,-1,i,1),rn("f4",e,t,sn,n,i,1),rn("u1",e,t,sn,n*.7,i*1.1,o),rn("u2",e,t,sn,-1*.7,i*1.1,o),rn("u3",e,t,sn,0,i*2,o),rn("cf1",e,t,sn,-1,0,1),rn("cf2",e,t,sn,n,0,1),rn("cf3",e,t,sn,0,-1,1),rn("cf4",e,t,sn,0,i,1),rn("cn1",e,t,sn,-1,0,o),rn("cn2",e,t,sn,n,0,o),rn("cn3",e,t,sn,0,-1,o),rn("cn4",e,t,sn,0,i,o),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function rn(s,t,e,n,i,o,l){Cu.set(i,o,l).unproject(n);const c=t[s];if(c!==void 0){const h=e.getAttribute("position");for(let f=0,p=c.length;f<p;f++)h.setXYZ(c[f],Cu.x,Cu.y,Cu.z)}}const Ru=new Bn;class nA extends us{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),o=new _e;o.setIndex(new ke(n,1)),o.setAttribute("position",new ke(i,3)),super(o,new Yn({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Ru.setFromObject(this.object),Ru.isEmpty())return;const t=Ru.min,e=Ru.max,n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class iA extends us{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],o=new _e;o.setIndex(new ke(n,1)),o.setAttribute("position",new qt(i,3)),super(o,new Yn({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class sA extends da{constructor(t,e=1,n=16776960){const i=n,o=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new _e;l.setAttribute("position",new qt(o,3)),l.computeBoundingSphere(),super(l,new Yn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],h=new _e;h.setAttribute("position",new qt(c,3)),h.computeBoundingSphere(),this.add(new hn(h,new ma({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const m_=new B;let Du,vp;class aA extends Ne{constructor(t=new B(0,0,1),e=new B(0,0,0),n=1,i=16776960,o=n*.2,l=o*.2){super(),this.type="ArrowHelper",Du===void 0&&(Du=new _e,Du.setAttribute("position",new qt([0,0,0,0,1,0],3)),vp=new $l(.5,1,5,1),vp.translate(0,-.5,0)),this.position.copy(e),this.line=new da(Du,new Yn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new hn(vp,new ma({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,o,l)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{m_.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(m_,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class rA extends us{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new _e;i.setAttribute("position",new qt(e,3)),i.setAttribute("color",new qt(n,3));const o=new Yn({vertexColors:!0,toneMapped:!1});super(i,o),this.type="AxesHelper"}setColors(t,e,n){const i=new zt,o=this.geometry.attributes.color.array;return i.set(t),i.toArray(o,0),i.toArray(o,3),i.set(e),i.toArray(o,6),i.toArray(o,9),i.set(n),i.toArray(o,12),i.toArray(o,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class oA{constructor(){this.type="ShapePath",this.color=new zt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Ah,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,o,l){return this.currentPath.bezierCurveTo(t,e,n,i,o,l),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(y){const E=[];for(let A=0,T=y.length;A<T;A++){const L=y[A],D=new ar;D.curves=L.curves,E.push(D)}return E}function n(y,E){const A=E.length;let T=!1;for(let L=A-1,D=0;D<A;L=D++){let P=E[L],O=E[D],C=O.x-P.x,w=O.y-P.y;if(Math.abs(w)>Number.EPSILON){if(w<0&&(P=E[D],C=-C,O=E[L],w=-w),y.y<P.y||y.y>O.y)continue;if(y.y===P.y){if(y.x===P.x)return!0}else{const H=w*(y.x-P.x)-C*(y.y-P.y);if(H===0)return!0;if(H<0)continue;T=!T}}else{if(y.y!==P.y)continue;if(O.x<=y.x&&y.x<=P.x||P.x<=y.x&&y.x<=O.x)return!0}}return T}const i=qi.isClockWise,o=this.subPaths;if(o.length===0)return[];let l,c,h;const f=[];if(o.length===1)return c=o[0],h=new ar,h.curves=c.curves,f.push(h),f;let p=!i(o[0].getPoints());p=t?!p:p;const m=[],g=[];let v=[],x=0,b;g[x]=void 0,v[x]=[];for(let y=0,E=o.length;y<E;y++)c=o[y],b=c.getPoints(),l=i(b),l=t?!l:l,l?(!p&&g[x]&&x++,g[x]={s:new ar,p:b},g[x].s.curves=c.curves,p&&x++,v[x]=[]):v[x].push({h:c,p:b[0]});if(!g[0])return e(o);if(g.length>1){let y=!1,E=0;for(let A=0,T=g.length;A<T;A++)m[A]=[];for(let A=0,T=g.length;A<T;A++){const L=v[A];for(let D=0;D<L.length;D++){const P=L[D];let O=!0;for(let C=0;C<g.length;C++)n(P.p,g[C].p)&&(A!==C&&E++,O?(O=!1,m[C].push(P)):y=!0);O&&m[A].push(P)}}E>0&&y===!1&&(v=m)}let S;for(let y=0,E=g.length;y<E;y++){h=g[y].s,f.push(h),S=v[y];for(let A=0,T=S.length;A<T;A++)h.holes.push(S[A].h)}return f}}class lA extends cs{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){if(t===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=t}disconnect(){}dispose(){}update(){}}function cA(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function uA(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function hA(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function em(s,t,e,n){const i=fA(n);switch(e){case gm:return s*t;case Bh:return s*t/i.components*i.byteLength;case Kl:return s*t/i.components*i.byteLength;case _m:return s*t*2/i.components*i.byteLength;case zh:return s*t*2/i.components*i.byteLength;case vm:return s*t*3/i.components*i.byteLength;case On:return s*t*4/i.components*i.byteLength;case Fh:return s*t*4/i.components*i.byteLength;case Ml:case bl:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case El:case Tl:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case Ju:case $u:return Math.max(s,16)*Math.max(t,8)/4;case Ku:case Qu:return Math.max(s,8)*Math.max(t,8)/2;case th:case eh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case nh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case ih:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case sh:return Math.floor((s+4)/5)*Math.floor((t+3)/4)*16;case ah:return Math.floor((s+4)/5)*Math.floor((t+4)/5)*16;case rh:return Math.floor((s+5)/6)*Math.floor((t+4)/5)*16;case oh:return Math.floor((s+5)/6)*Math.floor((t+5)/6)*16;case lh:return Math.floor((s+7)/8)*Math.floor((t+4)/5)*16;case ch:return Math.floor((s+7)/8)*Math.floor((t+5)/6)*16;case uh:return Math.floor((s+7)/8)*Math.floor((t+7)/8)*16;case hh:return Math.floor((s+9)/10)*Math.floor((t+4)/5)*16;case fh:return Math.floor((s+9)/10)*Math.floor((t+5)/6)*16;case dh:return Math.floor((s+9)/10)*Math.floor((t+7)/8)*16;case ph:return Math.floor((s+9)/10)*Math.floor((t+9)/10)*16;case mh:return Math.floor((s+11)/12)*Math.floor((t+9)/10)*16;case gh:return Math.floor((s+11)/12)*Math.floor((t+11)/12)*16;case Al:case vh:case _h:return Math.ceil(s/4)*Math.ceil(t/4)*16;case ym:case yh:return Math.ceil(s/4)*Math.ceil(t/4)*8;case xh:case Sh:return Math.ceil(s/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function fA(s){switch(s){case Li:case dm:return{byteLength:1,components:1};case po:case pm:case To:return{byteLength:2,components:1};case Ih:case Oh:return{byteLength:2,components:4};case Os:case Ph:case ii:return{byteLength:4,components:1};case mm:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class dA{static contain(t,e){return cA(t,e)}static cover(t,e){return uA(t,e)}static fill(t){return hA(t)}static getByteLength(t,e,n,i){return em(t,e,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Uh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Uh);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function sS(){let s=null,t=!1,e=null,n=null;function i(o,l){e(o,l),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(o){e=o},setContext:function(o){s=o}}}function pA(s){const t=new WeakMap;function e(c,h){const f=c.array,p=c.usage,m=f.byteLength,g=s.createBuffer();s.bindBuffer(h,g),s.bufferData(h,f,p),c.onUploadCallback();let v;if(f instanceof Float32Array)v=s.FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=s.HALF_FLOAT:v=s.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=s.SHORT;else if(f instanceof Uint32Array)v=s.UNSIGNED_INT;else if(f instanceof Int32Array)v=s.INT;else if(f instanceof Int8Array)v=s.BYTE;else if(f instanceof Uint8Array)v=s.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:m}}function n(c,h,f){const p=h.array,m=h.updateRanges;if(s.bindBuffer(f,c),m.length===0)s.bufferSubData(f,0,p);else{m.sort((v,x)=>v.start-x.start);let g=0;for(let v=1;v<m.length;v++){const x=m[g],b=m[v];b.start<=x.start+x.count+1?x.count=Math.max(x.count,b.start+b.count-x.start):(++g,m[g]=b)}m.length=g+1;for(let v=0,x=m.length;v<x;v++){const b=m[v];s.bufferSubData(f,b.start*p.BYTES_PER_ELEMENT,p,b.start,b.count)}h.clearUpdateRanges()}h.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),t.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=t.get(c);h&&(s.deleteBuffer(h.buffer),t.delete(c))}function l(c,h){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const p=t.get(c);(!p||p.version<c.version)&&t.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=t.get(c);if(f===void 0)t.set(c,e(c,h));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,h),f.version=c.version}}return{get:i,remove:o,update:l}}var mA=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,gA=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,vA=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,_A=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,yA=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,xA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,SA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,MA=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,bA=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,EA=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,TA=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,AA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,wA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,CA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,RA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,DA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,UA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,NA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,LA=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,PA=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,IA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,OA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,BA=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,zA=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,FA=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,HA=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,VA=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,GA=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,kA=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,WA=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,XA="gl_FragColor = linearToOutputTexel( gl_FragColor );",qA=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,YA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,ZA=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,jA=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,KA=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,JA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,QA=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,$A=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,tw=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,ew=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,nw=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,iw=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,sw=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,aw=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,rw=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,ow=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,lw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,cw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,uw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,hw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,fw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,dw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,pw=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,mw=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,gw=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,vw=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,_w=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,yw=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,xw=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,Sw=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Mw=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,bw=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Ew=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Tw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Aw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,ww=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,Cw=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Rw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Dw=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,Uw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Nw=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Lw=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Pw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Iw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Ow=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Bw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,zw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Fw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Hw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Vw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Gw=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,kw=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Ww=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Xw=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,qw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Yw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Zw=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,jw=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Kw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,Jw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Qw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,$w=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,tC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,eC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,nC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,iC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,sC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,aC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,rC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,oC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,lC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,cC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,uC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,hC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,fC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,dC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const pC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,mC=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,gC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,vC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,_C=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,yC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,xC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,SC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,MC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,bC=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,EC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,TC=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,AC=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,wC=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,CC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,RC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,DC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,UC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,NC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,LC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,PC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,IC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,OC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,BC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zC=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,FC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,HC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,VC=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,GC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,kC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,WC=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,XC=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,qC=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,YC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ye={alphahash_fragment:mA,alphahash_pars_fragment:gA,alphamap_fragment:vA,alphamap_pars_fragment:_A,alphatest_fragment:yA,alphatest_pars_fragment:xA,aomap_fragment:SA,aomap_pars_fragment:MA,batching_pars_vertex:bA,batching_vertex:EA,begin_vertex:TA,beginnormal_vertex:AA,bsdfs:wA,iridescence_fragment:CA,bumpmap_pars_fragment:RA,clipping_planes_fragment:DA,clipping_planes_pars_fragment:UA,clipping_planes_pars_vertex:NA,clipping_planes_vertex:LA,color_fragment:PA,color_pars_fragment:IA,color_pars_vertex:OA,color_vertex:BA,common:zA,cube_uv_reflection_fragment:FA,defaultnormal_vertex:HA,displacementmap_pars_vertex:VA,displacementmap_vertex:GA,emissivemap_fragment:kA,emissivemap_pars_fragment:WA,colorspace_fragment:XA,colorspace_pars_fragment:qA,envmap_fragment:YA,envmap_common_pars_fragment:ZA,envmap_pars_fragment:jA,envmap_pars_vertex:KA,envmap_physical_pars_fragment:ow,envmap_vertex:JA,fog_vertex:QA,fog_pars_vertex:$A,fog_fragment:tw,fog_pars_fragment:ew,gradientmap_pars_fragment:nw,lightmap_pars_fragment:iw,lights_lambert_fragment:sw,lights_lambert_pars_fragment:aw,lights_pars_begin:rw,lights_toon_fragment:lw,lights_toon_pars_fragment:cw,lights_phong_fragment:uw,lights_phong_pars_fragment:hw,lights_physical_fragment:fw,lights_physical_pars_fragment:dw,lights_fragment_begin:pw,lights_fragment_maps:mw,lights_fragment_end:gw,logdepthbuf_fragment:vw,logdepthbuf_pars_fragment:_w,logdepthbuf_pars_vertex:yw,logdepthbuf_vertex:xw,map_fragment:Sw,map_pars_fragment:Mw,map_particle_fragment:bw,map_particle_pars_fragment:Ew,metalnessmap_fragment:Tw,metalnessmap_pars_fragment:Aw,morphinstance_vertex:ww,morphcolor_vertex:Cw,morphnormal_vertex:Rw,morphtarget_pars_vertex:Dw,morphtarget_vertex:Uw,normal_fragment_begin:Nw,normal_fragment_maps:Lw,normal_pars_fragment:Pw,normal_pars_vertex:Iw,normal_vertex:Ow,normalmap_pars_fragment:Bw,clearcoat_normal_fragment_begin:zw,clearcoat_normal_fragment_maps:Fw,clearcoat_pars_fragment:Hw,iridescence_pars_fragment:Vw,opaque_fragment:Gw,packing:kw,premultiplied_alpha_fragment:Ww,project_vertex:Xw,dithering_fragment:qw,dithering_pars_fragment:Yw,roughnessmap_fragment:Zw,roughnessmap_pars_fragment:jw,shadowmap_pars_fragment:Kw,shadowmap_pars_vertex:Jw,shadowmap_vertex:Qw,shadowmask_pars_fragment:$w,skinbase_vertex:tC,skinning_pars_vertex:eC,skinning_vertex:nC,skinnormal_vertex:iC,specularmap_fragment:sC,specularmap_pars_fragment:aC,tonemapping_fragment:rC,tonemapping_pars_fragment:oC,transmission_fragment:lC,transmission_pars_fragment:cC,uv_pars_fragment:uC,uv_pars_vertex:hC,uv_vertex:fC,worldpos_vertex:dC,background_vert:pC,background_frag:mC,backgroundCube_vert:gC,backgroundCube_frag:vC,cube_vert:_C,cube_frag:yC,depth_vert:xC,depth_frag:SC,distanceRGBA_vert:MC,distanceRGBA_frag:bC,equirect_vert:EC,equirect_frag:TC,linedashed_vert:AC,linedashed_frag:wC,meshbasic_vert:CC,meshbasic_frag:RC,meshlambert_vert:DC,meshlambert_frag:UC,meshmatcap_vert:NC,meshmatcap_frag:LC,meshnormal_vert:PC,meshnormal_frag:IC,meshphong_vert:OC,meshphong_frag:BC,meshphysical_vert:zC,meshphysical_frag:FC,meshtoon_vert:HC,meshtoon_frag:VC,points_vert:GC,points_frag:kC,shadow_vert:WC,shadow_frag:XC,sprite_vert:qC,sprite_frag:YC},Ut={common:{diffuse:{value:new zt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new pe},alphaMap:{value:null},alphaMapTransform:{value:new pe},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new pe}},envmap:{envMap:{value:null},envMapRotation:{value:new pe},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new pe}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new pe}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new pe},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new pe},normalScale:{value:new pt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new pe},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new pe}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new pe}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new pe}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new zt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new zt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new pe},alphaTest:{value:0},uvTransform:{value:new pe}},sprite:{diffuse:{value:new zt(16777215)},opacity:{value:1},center:{value:new pt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new pe},alphaMap:{value:null},alphaMapTransform:{value:new pe},alphaTest:{value:0}}},Xi={basic:{uniforms:Wn([Ut.common,Ut.specularmap,Ut.envmap,Ut.aomap,Ut.lightmap,Ut.fog]),vertexShader:ye.meshbasic_vert,fragmentShader:ye.meshbasic_frag},lambert:{uniforms:Wn([Ut.common,Ut.specularmap,Ut.envmap,Ut.aomap,Ut.lightmap,Ut.emissivemap,Ut.bumpmap,Ut.normalmap,Ut.displacementmap,Ut.fog,Ut.lights,{emissive:{value:new zt(0)}}]),vertexShader:ye.meshlambert_vert,fragmentShader:ye.meshlambert_frag},phong:{uniforms:Wn([Ut.common,Ut.specularmap,Ut.envmap,Ut.aomap,Ut.lightmap,Ut.emissivemap,Ut.bumpmap,Ut.normalmap,Ut.displacementmap,Ut.fog,Ut.lights,{emissive:{value:new zt(0)},specular:{value:new zt(1118481)},shininess:{value:30}}]),vertexShader:ye.meshphong_vert,fragmentShader:ye.meshphong_frag},standard:{uniforms:Wn([Ut.common,Ut.envmap,Ut.aomap,Ut.lightmap,Ut.emissivemap,Ut.bumpmap,Ut.normalmap,Ut.displacementmap,Ut.roughnessmap,Ut.metalnessmap,Ut.fog,Ut.lights,{emissive:{value:new zt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ye.meshphysical_vert,fragmentShader:ye.meshphysical_frag},toon:{uniforms:Wn([Ut.common,Ut.aomap,Ut.lightmap,Ut.emissivemap,Ut.bumpmap,Ut.normalmap,Ut.displacementmap,Ut.gradientmap,Ut.fog,Ut.lights,{emissive:{value:new zt(0)}}]),vertexShader:ye.meshtoon_vert,fragmentShader:ye.meshtoon_frag},matcap:{uniforms:Wn([Ut.common,Ut.bumpmap,Ut.normalmap,Ut.displacementmap,Ut.fog,{matcap:{value:null}}]),vertexShader:ye.meshmatcap_vert,fragmentShader:ye.meshmatcap_frag},points:{uniforms:Wn([Ut.points,Ut.fog]),vertexShader:ye.points_vert,fragmentShader:ye.points_frag},dashed:{uniforms:Wn([Ut.common,Ut.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ye.linedashed_vert,fragmentShader:ye.linedashed_frag},depth:{uniforms:Wn([Ut.common,Ut.displacementmap]),vertexShader:ye.depth_vert,fragmentShader:ye.depth_frag},normal:{uniforms:Wn([Ut.common,Ut.bumpmap,Ut.normalmap,Ut.displacementmap,{opacity:{value:1}}]),vertexShader:ye.meshnormal_vert,fragmentShader:ye.meshnormal_frag},sprite:{uniforms:Wn([Ut.sprite,Ut.fog]),vertexShader:ye.sprite_vert,fragmentShader:ye.sprite_frag},background:{uniforms:{uvTransform:{value:new pe},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ye.background_vert,fragmentShader:ye.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new pe}},vertexShader:ye.backgroundCube_vert,fragmentShader:ye.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ye.cube_vert,fragmentShader:ye.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ye.equirect_vert,fragmentShader:ye.equirect_frag},distanceRGBA:{uniforms:Wn([Ut.common,Ut.displacementmap,{referencePosition:{value:new B},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ye.distanceRGBA_vert,fragmentShader:ye.distanceRGBA_frag},shadow:{uniforms:Wn([Ut.lights,Ut.fog,{color:{value:new zt(0)},opacity:{value:1}}]),vertexShader:ye.shadow_vert,fragmentShader:ye.shadow_frag}};Xi.physical={uniforms:Wn([Xi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new pe},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new pe},clearcoatNormalScale:{value:new pt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new pe},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new pe},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new pe},sheen:{value:0},sheenColor:{value:new zt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new pe},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new pe},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new pe},transmissionSamplerSize:{value:new pt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new pe},attenuationDistance:{value:0},attenuationColor:{value:new zt(0)},specularColor:{value:new zt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new pe},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new pe},anisotropyVector:{value:new pt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new pe}}]),vertexShader:ye.meshphysical_vert,fragmentShader:ye.meshphysical_frag};const Uu={r:0,b:0,g:0},ja=new yi,ZC=new ae;function jC(s,t,e,n,i,o,l){const c=new zt(0);let h=o===!0?0:1,f,p,m=null,g=0,v=null;function x(A){let T=A.isScene===!0?A.background:null;return T&&T.isTexture&&(T=(A.backgroundBlurriness>0?e:t).get(T)),T}function b(A){let T=!1;const L=x(A);L===null?y(c,h):L&&L.isColor&&(y(L,1),T=!0);const D=s.xr.getEnvironmentBlendMode();D==="additive"?n.buffers.color.setClear(0,0,0,1,l):D==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(s.autoClear||T)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function S(A,T){const L=x(T);L&&(L.isCubeTexture||L.mapping===Eo)?(p===void 0&&(p=new hn(new ur(1,1,1),new Yi({name:"BackgroundCubeMaterial",uniforms:xo(Xi.backgroundCube.uniforms),vertexShader:Xi.backgroundCube.vertexShader,fragmentShader:Xi.backgroundCube.fragmentShader,side:qn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(D,P,O){this.matrixWorld.copyPosition(O.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(p)),ja.copy(T.backgroundRotation),ja.x*=-1,ja.y*=-1,ja.z*=-1,L.isCubeTexture&&L.isRenderTargetTexture===!1&&(ja.y*=-1,ja.z*=-1),p.material.uniforms.envMap.value=L,p.material.uniforms.flipEnvMap.value=L.isCubeTexture&&L.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,p.material.uniforms.backgroundRotation.value.setFromMatrix4(ZC.makeRotationFromEuler(ja)),p.material.toneMapped=Ae.getTransfer(L.colorSpace)!==He,(m!==L||g!==L.version||v!==s.toneMapping)&&(p.material.needsUpdate=!0,m=L,g=L.version,v=s.toneMapping),p.layers.enableAll(),A.unshift(p,p.geometry,p.material,0,0,null)):L&&L.isTexture&&(f===void 0&&(f=new hn(new Co(2,2),new Yi({name:"BackgroundMaterial",uniforms:xo(Xi.background.uniforms),vertexShader:Xi.background.vertexShader,fragmentShader:Xi.background.fragmentShader,side:Ps,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(f)),f.material.uniforms.t2D.value=L,f.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,f.material.toneMapped=Ae.getTransfer(L.colorSpace)!==He,L.matrixAutoUpdate===!0&&L.updateMatrix(),f.material.uniforms.uvTransform.value.copy(L.matrix),(m!==L||g!==L.version||v!==s.toneMapping)&&(f.material.needsUpdate=!0,m=L,g=L.version,v=s.toneMapping),f.layers.enableAll(),A.unshift(f,f.geometry,f.material,0,0,null))}function y(A,T){A.getRGB(Uu,ix(s)),n.buffers.color.setClear(Uu.r,Uu.g,Uu.b,T,l)}function E(){p!==void 0&&(p.geometry.dispose(),p.material.dispose(),p=void 0),f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0)}return{getClearColor:function(){return c},setClearColor:function(A,T=1){c.set(A),h=T,y(c,h)},getClearAlpha:function(){return h},setClearAlpha:function(A){h=A,y(c,h)},render:b,addToRenderList:S,dispose:E}}function KC(s,t){const e=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=g(null);let o=i,l=!1;function c(w,H,Q,X,J){let at=!1;const F=m(X,Q,H);o!==F&&(o=F,f(o.object)),at=v(w,X,Q,J),at&&x(w,X,Q,J),J!==null&&t.update(J,s.ELEMENT_ARRAY_BUFFER),(at||l)&&(l=!1,T(w,H,Q,X),J!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(J).buffer))}function h(){return s.createVertexArray()}function f(w){return s.bindVertexArray(w)}function p(w){return s.deleteVertexArray(w)}function m(w,H,Q){const X=Q.wireframe===!0;let J=n[w.id];J===void 0&&(J={},n[w.id]=J);let at=J[H.id];at===void 0&&(at={},J[H.id]=at);let F=at[X];return F===void 0&&(F=g(h()),at[X]=F),F}function g(w){const H=[],Q=[],X=[];for(let J=0;J<e;J++)H[J]=0,Q[J]=0,X[J]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:H,enabledAttributes:Q,attributeDivisors:X,object:w,attributes:{},index:null}}function v(w,H,Q,X){const J=o.attributes,at=H.attributes;let F=0;const q=Q.getAttributes();for(const G in q)if(q[G].location>=0){const lt=J[G];let mt=at[G];if(mt===void 0&&(G==="instanceMatrix"&&w.instanceMatrix&&(mt=w.instanceMatrix),G==="instanceColor"&&w.instanceColor&&(mt=w.instanceColor)),lt===void 0||lt.attribute!==mt||mt&&lt.data!==mt.data)return!0;F++}return o.attributesNum!==F||o.index!==X}function x(w,H,Q,X){const J={},at=H.attributes;let F=0;const q=Q.getAttributes();for(const G in q)if(q[G].location>=0){let lt=at[G];lt===void 0&&(G==="instanceMatrix"&&w.instanceMatrix&&(lt=w.instanceMatrix),G==="instanceColor"&&w.instanceColor&&(lt=w.instanceColor));const mt={};mt.attribute=lt,lt&&lt.data&&(mt.data=lt.data),J[G]=mt,F++}o.attributes=J,o.attributesNum=F,o.index=X}function b(){const w=o.newAttributes;for(let H=0,Q=w.length;H<Q;H++)w[H]=0}function S(w){y(w,0)}function y(w,H){const Q=o.newAttributes,X=o.enabledAttributes,J=o.attributeDivisors;Q[w]=1,X[w]===0&&(s.enableVertexAttribArray(w),X[w]=1),J[w]!==H&&(s.vertexAttribDivisor(w,H),J[w]=H)}function E(){const w=o.newAttributes,H=o.enabledAttributes;for(let Q=0,X=H.length;Q<X;Q++)H[Q]!==w[Q]&&(s.disableVertexAttribArray(Q),H[Q]=0)}function A(w,H,Q,X,J,at,F){F===!0?s.vertexAttribIPointer(w,H,Q,J,at):s.vertexAttribPointer(w,H,Q,X,J,at)}function T(w,H,Q,X){b();const J=X.attributes,at=Q.getAttributes(),F=H.defaultAttributeValues;for(const q in at){const G=at[q];if(G.location>=0){let st=J[q];if(st===void 0&&(q==="instanceMatrix"&&w.instanceMatrix&&(st=w.instanceMatrix),q==="instanceColor"&&w.instanceColor&&(st=w.instanceColor)),st!==void 0){const lt=st.normalized,mt=st.itemSize,wt=t.get(st);if(wt===void 0)continue;const jt=wt.buffer,$=wt.type,gt=wt.bytesPerElement,Wt=$===s.INT||$===s.UNSIGNED_INT||st.gpuType===Ph;if(st.isInterleavedBufferAttribute){const Dt=st.data,Vt=Dt.stride,fe=st.offset;if(Dt.isInstancedInterleavedBuffer){for(let Jt=0;Jt<G.locationSize;Jt++)y(G.location+Jt,Dt.meshPerAttribute);w.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=Dt.meshPerAttribute*Dt.count)}else for(let Jt=0;Jt<G.locationSize;Jt++)S(G.location+Jt);s.bindBuffer(s.ARRAY_BUFFER,jt);for(let Jt=0;Jt<G.locationSize;Jt++)A(G.location+Jt,mt/G.locationSize,$,lt,Vt*gt,(fe+mt/G.locationSize*Jt)*gt,Wt)}else{if(st.isInstancedBufferAttribute){for(let Dt=0;Dt<G.locationSize;Dt++)y(G.location+Dt,st.meshPerAttribute);w.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=st.meshPerAttribute*st.count)}else for(let Dt=0;Dt<G.locationSize;Dt++)S(G.location+Dt);s.bindBuffer(s.ARRAY_BUFFER,jt);for(let Dt=0;Dt<G.locationSize;Dt++)A(G.location+Dt,mt/G.locationSize,$,lt,mt*gt,mt/G.locationSize*Dt*gt,Wt)}}else if(F!==void 0){const lt=F[q];if(lt!==void 0)switch(lt.length){case 2:s.vertexAttrib2fv(G.location,lt);break;case 3:s.vertexAttrib3fv(G.location,lt);break;case 4:s.vertexAttrib4fv(G.location,lt);break;default:s.vertexAttrib1fv(G.location,lt)}}}}E()}function L(){O();for(const w in n){const H=n[w];for(const Q in H){const X=H[Q];for(const J in X)p(X[J].object),delete X[J];delete H[Q]}delete n[w]}}function D(w){if(n[w.id]===void 0)return;const H=n[w.id];for(const Q in H){const X=H[Q];for(const J in X)p(X[J].object),delete X[J];delete H[Q]}delete n[w.id]}function P(w){for(const H in n){const Q=n[H];if(Q[w.id]===void 0)continue;const X=Q[w.id];for(const J in X)p(X[J].object),delete X[J];delete Q[w.id]}}function O(){C(),l=!0,o!==i&&(o=i,f(o.object))}function C(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:O,resetDefaultState:C,dispose:L,releaseStatesOfGeometry:D,releaseStatesOfProgram:P,initAttributes:b,enableAttribute:S,disableUnusedAttributes:E}}function JC(s,t,e){let n;function i(f){n=f}function o(f,p){s.drawArrays(n,f,p),e.update(p,n,1)}function l(f,p,m){m!==0&&(s.drawArraysInstanced(n,f,p,m),e.update(p,n,m))}function c(f,p,m){if(m===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,p,0,m);let v=0;for(let x=0;x<m;x++)v+=p[x];e.update(v,n,1)}function h(f,p,m,g){if(m===0)return;const v=t.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<f.length;x++)l(f[x],p[x],g[x]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,p,0,g,0,m);let x=0;for(let b=0;b<m;b++)x+=p[b]*g[b];e.update(x,n,1)}}this.setMode=i,this.render=o,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=h}function QC(s,t,e,n){let i;function o(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const P=t.get("EXT_texture_filter_anisotropic");i=s.getParameter(P.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(P){return!(P!==On&&n.convert(P)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(P){const O=P===To&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(P!==Li&&n.convert(P)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&P!==ii&&!O)}function h(P){if(P==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";P="mediump"}return P==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=e.precision!==void 0?e.precision:"highp";const p=h(f);p!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",p,"instead."),f=p);const m=e.logarithmicDepthBuffer===!0,g=e.reverseDepthBuffer===!0&&t.has("EXT_clip_control"),v=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),x=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),b=s.getParameter(s.MAX_TEXTURE_SIZE),S=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),y=s.getParameter(s.MAX_VERTEX_ATTRIBS),E=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),A=s.getParameter(s.MAX_VARYING_VECTORS),T=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),L=x>0,D=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:o,getMaxPrecision:h,textureFormatReadable:l,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:m,reverseDepthBuffer:g,maxTextures:v,maxVertexTextures:x,maxTextureSize:b,maxCubemapSize:S,maxAttributes:y,maxVertexUniforms:E,maxVaryings:A,maxFragmentUniforms:T,vertexTextures:L,maxSamples:D}}function $C(s){const t=this;let e=null,n=0,i=!1,o=!1;const l=new oa,c=new pe,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g){const v=m.length!==0||g||n!==0||i;return i=g,n=m.length,v},this.beginShadows=function(){o=!0,p(null)},this.endShadows=function(){o=!1},this.setGlobalState=function(m,g){e=p(m,g,0)},this.setState=function(m,g,v){const x=m.clippingPlanes,b=m.clipIntersection,S=m.clipShadows,y=s.get(m);if(!i||x===null||x.length===0||o&&!S)o?p(null):f();else{const E=o?0:n,A=E*4;let T=y.clippingState||null;h.value=T,T=p(x,g,A,v);for(let L=0;L!==A;++L)T[L]=e[L];y.clippingState=T,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=E}};function f(){h.value!==e&&(h.value=e,h.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function p(m,g,v,x){const b=m!==null?m.length:0;let S=null;if(b!==0){if(S=h.value,x!==!0||S===null){const y=v+b*4,E=g.matrixWorldInverse;c.getNormalMatrix(E),(S===null||S.length<y)&&(S=new Float32Array(y));for(let A=0,T=v;A!==b;++A,T+=4)l.copy(m[A]).applyMatrix4(E,c),l.normal.toArray(S,T),S[T+3]=l.constant}h.value=S,h.needsUpdate=!0}return t.numPlanes=b,t.numIntersection=0,S}}function tR(s){let t=new WeakMap;function e(l,c){return c===Ul?l.mapping=Is:c===Nl&&(l.mapping=ha),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===Ul||c===Nl)if(t.has(l)){const h=t.get(l).texture;return e(h,l.mapping)}else{const h=l.image;if(h&&h.height>0){const f=new rx(h.height);return f.fromEquirectangularTexture(s,l),t.set(l,f),l.addEventListener("dispose",i),e(f.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const h=t.get(c);h!==void 0&&(t.delete(c),h.dispose())}function o(){t=new WeakMap}return{get:n,dispose:o}}const uo=4,g_=[.125,.215,.35,.446,.526,.582],$a=20,_p=new sc,v_=new zt;let yp=null,xp=0,Sp=0,Mp=!1;const Qa=(1+Math.sqrt(5))/2,io=1/Qa,__=[new B(-Qa,io,0),new B(Qa,io,0),new B(-io,0,Qa),new B(io,0,Qa),new B(0,Qa,-io),new B(0,Qa,io),new B(-1,1,-1),new B(1,1,-1),new B(-1,1,1),new B(1,1,1)],eR=new B;class nm{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100,o={}){const{size:l=256,position:c=eR}=o;yp=this._renderer.getRenderTarget(),xp=this._renderer.getActiveCubeFace(),Sp=this._renderer.getActiveMipmapLevel(),Mp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(l);const h=this._allocateTargets();return h.depthBuffer=!0,this._sceneToCubeUV(t,n,i,h,c),e>0&&this._blur(h,0,0,e),this._applyPMREM(h),this._cleanup(h),h}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=S_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=x_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(yp,xp,Sp),this._renderer.xr.enabled=Mp,t.scissorTest=!1,Nu(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Is||t.mapping===ha?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),yp=this._renderer.getRenderTarget(),xp=this._renderer.getActiveCubeFace(),Sp=this._renderer.getActiveMipmapLevel(),Mp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:dn,minFilter:dn,generateMipmaps:!1,type:To,format:On,colorSpace:fa,depthBuffer:!1},i=y_(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=y_(t,e,n);const{_lodMax:o}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=nR(o)),this._blurMaterial=iR(o,t,e)}return i}_compileMaterial(t){const e=new hn(this._lodPlanes[0],t);this._renderer.compile(e,_p)}_sceneToCubeUV(t,e,n,i,o){const h=new xn(90,1,e,n),f=[1,-1,1,1,1,1],p=[1,1,1,-1,-1,-1],m=this._renderer,g=m.autoClear,v=m.toneMapping;m.getClearColor(v_),m.toneMapping=rs,m.autoClear=!1;const x=new ma({name:"PMREM.Background",side:qn,depthWrite:!1,depthTest:!1}),b=new hn(new ur,x);let S=!1;const y=t.background;y?y.isColor&&(x.color.copy(y),t.background=null,S=!0):(x.color.copy(v_),S=!0);for(let E=0;E<6;E++){const A=E%3;A===0?(h.up.set(0,f[E],0),h.position.set(o.x,o.y,o.z),h.lookAt(o.x+p[E],o.y,o.z)):A===1?(h.up.set(0,0,f[E]),h.position.set(o.x,o.y,o.z),h.lookAt(o.x,o.y+p[E],o.z)):(h.up.set(0,f[E],0),h.position.set(o.x,o.y,o.z),h.lookAt(o.x,o.y,o.z+p[E]));const T=this._cubeSize;Nu(i,A*T,E>2?T:0,T,T),m.setRenderTarget(i),S&&m.render(b,h),m.render(t,h)}b.geometry.dispose(),b.material.dispose(),m.toneMapping=v,m.autoClear=g,t.background=y}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Is||t.mapping===ha;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=S_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=x_());const o=i?this._cubemapMaterial:this._equirectMaterial,l=new hn(this._lodPlanes[0],o),c=o.uniforms;c.envMap.value=t;const h=this._cubeSize;Nu(e,0,0,3*h,2*h),n.setRenderTarget(e),n.render(l,_p)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let o=1;o<i;o++){const l=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),c=__[(i-o-1)%__.length];this._blur(t,o-1,o,l,c)}e.autoClear=n}_blur(t,e,n,i,o){const l=this._pingPongRenderTarget;this._halfBlur(t,l,e,n,i,"latitudinal",o),this._halfBlur(l,t,n,n,i,"longitudinal",o)}_halfBlur(t,e,n,i,o,l,c){const h=this._renderer,f=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new hn(this._lodPlanes[i],f),g=f.uniforms,v=this._sizeLods[n]-1,x=isFinite(o)?Math.PI/(2*v):2*Math.PI/(2*$a-1),b=o/x,S=isFinite(o)?1+Math.floor(p*b):$a;S>$a&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${$a}`);const y=[];let E=0;for(let P=0;P<$a;++P){const O=P/b,C=Math.exp(-O*O/2);y.push(C),P===0?E+=C:P<S&&(E+=2*C)}for(let P=0;P<y.length;P++)y[P]=y[P]/E;g.envMap.value=t.texture,g.samples.value=S,g.weights.value=y,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:A}=this;g.dTheta.value=x,g.mipInt.value=A-n;const T=this._sizeLods[i],L=3*T*(i>A-uo?i-A+uo:0),D=4*(this._cubeSize-T);Nu(e,L,D,3*T,2*T),h.setRenderTarget(e),h.render(m,_p)}}function nR(s){const t=[],e=[],n=[];let i=s;const o=s-uo+1+g_.length;for(let l=0;l<o;l++){const c=Math.pow(2,i);e.push(c);let h=1/c;l>s-uo?h=g_[l-s+uo-1]:l===0&&(h=0),n.push(h);const f=1/(c-2),p=-f,m=1+f,g=[p,p,m,p,m,m,p,p,m,m,p,m],v=6,x=6,b=3,S=2,y=1,E=new Float32Array(b*x*v),A=new Float32Array(S*x*v),T=new Float32Array(y*x*v);for(let D=0;D<v;D++){const P=D%3*2/3-1,O=D>2?0:-1,C=[P,O,0,P+2/3,O,0,P+2/3,O+1,0,P,O,0,P+2/3,O+1,0,P,O+1,0];E.set(C,b*x*D),A.set(g,S*x*D);const w=[D,D,D,D,D,D];T.set(w,y*x*D)}const L=new _e;L.setAttribute("position",new ke(E,b)),L.setAttribute("uv",new ke(A,S)),L.setAttribute("faceIndex",new ke(T,y)),t.push(L),i>uo&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function y_(s,t,e){const n=new ls(s,t,e);return n.texture.mapping=Eo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Nu(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function iR(s,t,e){const n=new Float32Array($a),i=new B(0,1,0);return new Yi({name:"SphericalGaussianBlur",defines:{n:$a,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Jm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ns,depthTest:!1,depthWrite:!1})}function x_(){return new Yi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Jm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ns,depthTest:!1,depthWrite:!1})}function S_(){return new Yi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Jm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ns,depthTest:!1,depthWrite:!1})}function Jm(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function sR(s){let t=new WeakMap,e=null;function n(c){if(c&&c.isTexture){const h=c.mapping,f=h===Ul||h===Nl,p=h===Is||h===ha;if(f||p){let m=t.get(c);const g=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return e===null&&(e=new nm(s)),m=f?e.fromEquirectangular(c,m):e.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),m.texture;if(m!==void 0)return m.texture;{const v=c.image;return f&&v&&v.height>0||p&&v&&i(v)?(e===null&&(e=new nm(s)),m=f?e.fromEquirectangular(c):e.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),c.addEventListener("dispose",o),m.texture):null}}}return c}function i(c){let h=0;const f=6;for(let p=0;p<f;p++)c[p]!==void 0&&h++;return h===f}function o(c){const h=c.target;h.removeEventListener("dispose",o);const f=t.get(h);f!==void 0&&(t.delete(h),f.dispose())}function l(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:l}}function aR(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const i=e(n);return i===null&&ho("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function rR(s,t,e,n){const i={},o=new WeakMap;function l(m){const g=m.target;g.index!==null&&t.remove(g.index);for(const x in g.attributes)t.remove(g.attributes[x]);g.removeEventListener("dispose",l),delete i[g.id];const v=o.get(g);v&&(t.remove(v),o.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,e.memory.geometries--}function c(m,g){return i[g.id]===!0||(g.addEventListener("dispose",l),i[g.id]=!0,e.memory.geometries++),g}function h(m){const g=m.attributes;for(const v in g)t.update(g[v],s.ARRAY_BUFFER)}function f(m){const g=[],v=m.index,x=m.attributes.position;let b=0;if(v!==null){const E=v.array;b=v.version;for(let A=0,T=E.length;A<T;A+=3){const L=E[A+0],D=E[A+1],P=E[A+2];g.push(L,D,D,P,P,L)}}else if(x!==void 0){const E=x.array;b=x.version;for(let A=0,T=E.length/3-1;A<T;A+=3){const L=A+0,D=A+1,P=A+2;g.push(L,D,D,P,P,L)}}else return;const S=new($y(g)?Tm:Em)(g,1);S.version=b;const y=o.get(m);y&&t.remove(y),o.set(m,S)}function p(m){const g=o.get(m);if(g){const v=m.index;v!==null&&g.version<v.version&&f(m)}else f(m);return o.get(m)}return{get:c,update:h,getWireframeAttribute:p}}function oR(s,t,e){let n;function i(g){n=g}let o,l;function c(g){o=g.type,l=g.bytesPerElement}function h(g,v){s.drawElements(n,v,o,g*l),e.update(v,n,1)}function f(g,v,x){x!==0&&(s.drawElementsInstanced(n,v,o,g*l,x),e.update(v,n,x))}function p(g,v,x){if(x===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,o,g,0,x);let S=0;for(let y=0;y<x;y++)S+=v[y];e.update(S,n,1)}function m(g,v,x,b){if(x===0)return;const S=t.get("WEBGL_multi_draw");if(S===null)for(let y=0;y<g.length;y++)f(g[y]/l,v[y],b[y]);else{S.multiDrawElementsInstancedWEBGL(n,v,0,o,g,0,b,0,x);let y=0;for(let E=0;E<x;E++)y+=v[E]*b[E];e.update(y,n,1)}}this.setMode=i,this.setIndex=c,this.render=h,this.renderInstances=f,this.renderMultiDraw=p,this.renderMultiDrawInstances=m}function lR(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(o,l,c){switch(e.calls++,l){case s.TRIANGLES:e.triangles+=c*(o/3);break;case s.LINES:e.lines+=c*(o/2);break;case s.LINE_STRIP:e.lines+=c*(o-1);break;case s.LINE_LOOP:e.lines+=c*o;break;case s.POINTS:e.points+=c*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function cR(s,t,e){const n=new WeakMap,i=new Ue;function o(l,c,h){const f=l.morphTargetInfluences,p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=p!==void 0?p.length:0;let g=n.get(c);if(g===void 0||g.count!==m){let C=function(){P.dispose(),n.delete(c),c.removeEventListener("dispose",C)};g!==void 0&&g.texture.dispose();const v=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,b=c.morphAttributes.color!==void 0,S=c.morphAttributes.position||[],y=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let A=0;v===!0&&(A=1),x===!0&&(A=2),b===!0&&(A=3);let T=c.attributes.position.count*A,L=1;T>t.maxTextureSize&&(L=Math.ceil(T/t.maxTextureSize),T=t.maxTextureSize);const D=new Float32Array(T*L*4*m),P=new Vh(D,T,L,m);P.type=ii,P.needsUpdate=!0;const O=A*4;for(let w=0;w<m;w++){const H=S[w],Q=y[w],X=E[w],J=T*L*4*w;for(let at=0;at<H.count;at++){const F=at*O;v===!0&&(i.fromBufferAttribute(H,at),D[J+F+0]=i.x,D[J+F+1]=i.y,D[J+F+2]=i.z,D[J+F+3]=0),x===!0&&(i.fromBufferAttribute(Q,at),D[J+F+4]=i.x,D[J+F+5]=i.y,D[J+F+6]=i.z,D[J+F+7]=0),b===!0&&(i.fromBufferAttribute(X,at),D[J+F+8]=i.x,D[J+F+9]=i.y,D[J+F+10]=i.z,D[J+F+11]=X.itemSize===4?i.w:1)}}g={count:m,texture:P,size:new pt(T,L)},n.set(c,g),c.addEventListener("dispose",C)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)h.getUniforms().setValue(s,"morphTexture",l.morphTexture,e);else{let v=0;for(let b=0;b<f.length;b++)v+=f[b];const x=c.morphTargetsRelative?1:1-v;h.getUniforms().setValue(s,"morphTargetBaseInfluence",x),h.getUniforms().setValue(s,"morphTargetInfluences",f)}h.getUniforms().setValue(s,"morphTargetsTexture",g.texture,e),h.getUniforms().setValue(s,"morphTargetsTextureSize",g.size)}return{update:o}}function uR(s,t,e,n){let i=new WeakMap;function o(h){const f=n.render.frame,p=h.geometry,m=t.get(h,p);if(i.get(m)!==f&&(t.update(m),i.set(m,f)),h.isInstancedMesh&&(h.hasEventListener("dispose",c)===!1&&h.addEventListener("dispose",c),i.get(h)!==f&&(e.update(h.instanceMatrix,s.ARRAY_BUFFER),h.instanceColor!==null&&e.update(h.instanceColor,s.ARRAY_BUFFER),i.set(h,f))),h.isSkinnedMesh){const g=h.skeleton;i.get(g)!==f&&(g.update(),i.set(g,f))}return m}function l(){i=new WeakMap}function c(h){const f=h.target;f.removeEventListener("dispose",c),e.remove(f.instanceMatrix),f.instanceColor!==null&&e.remove(f.instanceColor)}return{update:o,dispose:l}}const aS=new an,M_=new Dm(1,1),rS=new Vh,oS=new Gh,lS=new Jl,b_=[],E_=[],T_=new Float32Array(16),A_=new Float32Array(9),w_=new Float32Array(4);function Ro(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let o=b_[i];if(o===void 0&&(o=new Float32Array(i),b_[i]=o),t!==0){n.toArray(o,0);for(let l=1,c=0;l!==t;++l)c+=e,s[l].toArray(o,c)}return o}function pn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function mn(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function hf(s,t){let e=E_[t];e===void 0&&(e=new Int32Array(t),E_[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function hR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function fR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(pn(e,t))return;s.uniform2fv(this.addr,t),mn(e,t)}}function dR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(pn(e,t))return;s.uniform3fv(this.addr,t),mn(e,t)}}function pR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(pn(e,t))return;s.uniform4fv(this.addr,t),mn(e,t)}}function mR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(pn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),mn(e,t)}else{if(pn(e,n))return;w_.set(n),s.uniformMatrix2fv(this.addr,!1,w_),mn(e,n)}}function gR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(pn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),mn(e,t)}else{if(pn(e,n))return;A_.set(n),s.uniformMatrix3fv(this.addr,!1,A_),mn(e,n)}}function vR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(pn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),mn(e,t)}else{if(pn(e,n))return;T_.set(n),s.uniformMatrix4fv(this.addr,!1,T_),mn(e,n)}}function _R(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function yR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(pn(e,t))return;s.uniform2iv(this.addr,t),mn(e,t)}}function xR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(pn(e,t))return;s.uniform3iv(this.addr,t),mn(e,t)}}function SR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(pn(e,t))return;s.uniform4iv(this.addr,t),mn(e,t)}}function MR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function bR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(pn(e,t))return;s.uniform2uiv(this.addr,t),mn(e,t)}}function ER(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(pn(e,t))return;s.uniform3uiv(this.addr,t),mn(e,t)}}function TR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(pn(e,t))return;s.uniform4uiv(this.addr,t),mn(e,t)}}function AR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let o;this.type===s.SAMPLER_2D_SHADOW?(M_.compareFunction=Sm,o=M_):o=aS,e.setTexture2D(t||o,i)}function wR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||oS,i)}function CR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||lS,i)}function RR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||rS,i)}function DR(s){switch(s){case 5126:return hR;case 35664:return fR;case 35665:return dR;case 35666:return pR;case 35674:return mR;case 35675:return gR;case 35676:return vR;case 5124:case 35670:return _R;case 35667:case 35671:return yR;case 35668:case 35672:return xR;case 35669:case 35673:return SR;case 5125:return MR;case 36294:return bR;case 36295:return ER;case 36296:return TR;case 35678:case 36198:case 36298:case 36306:case 35682:return AR;case 35679:case 36299:case 36307:return wR;case 35680:case 36300:case 36308:case 36293:return CR;case 36289:case 36303:case 36311:case 36292:return RR}}function UR(s,t){s.uniform1fv(this.addr,t)}function NR(s,t){const e=Ro(t,this.size,2);s.uniform2fv(this.addr,e)}function LR(s,t){const e=Ro(t,this.size,3);s.uniform3fv(this.addr,e)}function PR(s,t){const e=Ro(t,this.size,4);s.uniform4fv(this.addr,e)}function IR(s,t){const e=Ro(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function OR(s,t){const e=Ro(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function BR(s,t){const e=Ro(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function zR(s,t){s.uniform1iv(this.addr,t)}function FR(s,t){s.uniform2iv(this.addr,t)}function HR(s,t){s.uniform3iv(this.addr,t)}function VR(s,t){s.uniform4iv(this.addr,t)}function GR(s,t){s.uniform1uiv(this.addr,t)}function kR(s,t){s.uniform2uiv(this.addr,t)}function WR(s,t){s.uniform3uiv(this.addr,t)}function XR(s,t){s.uniform4uiv(this.addr,t)}function qR(s,t,e){const n=this.cache,i=t.length,o=hf(e,i);pn(n,o)||(s.uniform1iv(this.addr,o),mn(n,o));for(let l=0;l!==i;++l)e.setTexture2D(t[l]||aS,o[l])}function YR(s,t,e){const n=this.cache,i=t.length,o=hf(e,i);pn(n,o)||(s.uniform1iv(this.addr,o),mn(n,o));for(let l=0;l!==i;++l)e.setTexture3D(t[l]||oS,o[l])}function ZR(s,t,e){const n=this.cache,i=t.length,o=hf(e,i);pn(n,o)||(s.uniform1iv(this.addr,o),mn(n,o));for(let l=0;l!==i;++l)e.setTextureCube(t[l]||lS,o[l])}function jR(s,t,e){const n=this.cache,i=t.length,o=hf(e,i);pn(n,o)||(s.uniform1iv(this.addr,o),mn(n,o));for(let l=0;l!==i;++l)e.setTexture2DArray(t[l]||rS,o[l])}function KR(s){switch(s){case 5126:return UR;case 35664:return NR;case 35665:return LR;case 35666:return PR;case 35674:return IR;case 35675:return OR;case 35676:return BR;case 5124:case 35670:return zR;case 35667:case 35671:return FR;case 35668:case 35672:return HR;case 35669:case 35673:return VR;case 5125:return GR;case 36294:return kR;case 36295:return WR;case 36296:return XR;case 35678:case 36198:case 36298:case 36306:case 35682:return qR;case 35679:case 36299:case 36307:return YR;case 35680:case 36300:case 36308:case 36293:return ZR;case 36289:case 36303:case 36311:case 36292:return jR}}class JR{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=DR(e.type)}}class QR{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=KR(e.type)}}class $R{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let o=0,l=i.length;o!==l;++o){const c=i[o];c.setValue(t,e[c.id],n)}}}const bp=/(\w+)(\])?(\[|\.)?/g;function C_(s,t){s.seq.push(t),s.map[t.id]=t}function t2(s,t,e){const n=s.name,i=n.length;for(bp.lastIndex=0;;){const o=bp.exec(n),l=bp.lastIndex;let c=o[1];const h=o[2]==="]",f=o[3];if(h&&(c=c|0),f===void 0||f==="["&&l+2===i){C_(e,f===void 0?new JR(c,s,t):new QR(c,s,t));break}else{let m=e.map[c];m===void 0&&(m=new $R(c),C_(e,m)),e=m}}}class zu{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const o=t.getActiveUniform(e,i),l=t.getUniformLocation(e,o.name);t2(o,l,this)}}setValue(t,e,n,i){const o=this.map[e];o!==void 0&&o.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let o=0,l=e.length;o!==l;++o){const c=e[o],h=n[c.id];h.needsUpdate!==!1&&c.setValue(t,h.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,o=t.length;i!==o;++i){const l=t[i];l.id in e&&n.push(l)}return n}}function R_(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}const e2=37297;let n2=0;function i2(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),o=Math.min(t+6,e.length);for(let l=i;l<o;l++){const c=l+1;n.push(`${c===t?">":" "} ${c}: ${e[l]}`)}return n.join(`
`)}const D_=new pe;function s2(s){Ae._getMatrix(D_,Ae.workingColorSpace,s);const t=`mat3( ${D_.elements.map(e=>e.toFixed(4))} )`;switch(Ae.getTransfer(s)){case Bl:return[t,"LinearTransferOETF"];case He:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[t,"LinearTransferOETF"]}}function U_(s,t,e){const n=s.getShaderParameter(t,s.COMPILE_STATUS),i=s.getShaderInfoLog(t).trim();if(n&&i==="")return"";const o=/ERROR: 0:(\d+)/.exec(i);if(o){const l=parseInt(o[1]);return e.toUpperCase()+`

`+i+`

`+i2(s.getShaderSource(t),l)}else return i}function a2(s,t){const e=s2(t);return[`vec4 ${s}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function r2(s,t){let e;switch(t){case Ly:e="Linear";break;case Py:e="Reinhard";break;case Iy:e="Cineon";break;case hm:e="ACESFilmic";break;case By:e="AgX";break;case zy:e="Neutral";break;case Oy:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const Lu=new B;function o2(){Ae.getLuminanceCoefficients(Lu);const s=Lu.x.toFixed(4),t=Lu.y.toFixed(4),e=Lu.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function l2(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(yl).join(`
`)}function c2(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function u2(s,t){const e={},n=s.getProgramParameter(t,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const o=s.getActiveAttrib(t,i),l=o.name;let c=1;o.type===s.FLOAT_MAT2&&(c=2),o.type===s.FLOAT_MAT3&&(c=3),o.type===s.FLOAT_MAT4&&(c=4),e[l]={type:o.type,location:s.getAttribLocation(t,l),locationSize:c}}return e}function yl(s){return s!==""}function N_(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function L_(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const h2=/^[ \t]*#include +<([\w\d./]+)>/gm;function im(s){return s.replace(h2,d2)}const f2=new Map;function d2(s,t){let e=ye[t];if(e===void 0){const n=f2.get(t);if(n!==void 0)e=ye[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return im(e)}const p2=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function P_(s){return s.replace(p2,m2)}function m2(s,t,e,n){let i="";for(let o=parseInt(t);o<parseInt(e);o++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return i}function I_(s){let t=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function g2(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Nh?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===xl?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Wi&&(t="SHADOWMAP_TYPE_VSM"),t}function v2(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Is:case ha:t="ENVMAP_TYPE_CUBE";break;case Eo:t="ENVMAP_TYPE_CUBE_UV";break}return t}function _2(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case ha:t="ENVMAP_MODE_REFRACTION";break}return t}function y2(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case jl:t="ENVMAP_BLENDING_MULTIPLY";break;case Uy:t="ENVMAP_BLENDING_MIX";break;case Ny:t="ENVMAP_BLENDING_ADD";break}return t}function x2(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function S2(s,t,e,n){const i=s.getContext(),o=e.defines;let l=e.vertexShader,c=e.fragmentShader;const h=g2(e),f=v2(e),p=_2(e),m=y2(e),g=x2(e),v=l2(e),x=c2(o),b=i.createProgram();let S,y,E=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(S=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(yl).join(`
`),S.length>0&&(S+=`
`),y=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(yl).join(`
`),y.length>0&&(y+=`
`)):(S=[I_(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+p:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(yl).join(`
`),y=[I_(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+f:"",e.envMap?"#define "+p:"",e.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==rs?"#define TONE_MAPPING":"",e.toneMapping!==rs?ye.tonemapping_pars_fragment:"",e.toneMapping!==rs?r2("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",ye.colorspace_pars_fragment,a2("linearToOutputTexel",e.outputColorSpace),o2(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(yl).join(`
`)),l=im(l),l=N_(l,e),l=L_(l,e),c=im(c),c=N_(c,e),c=L_(c,e),l=P_(l),c=P_(c),e.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,S=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,y=["#define varying in",e.glslVersion===Zp?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===Zp?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);const A=E+S+l,T=E+y+c,L=R_(i,i.VERTEX_SHADER,A),D=R_(i,i.FRAGMENT_SHADER,T);i.attachShader(b,L),i.attachShader(b,D),e.index0AttributeName!==void 0?i.bindAttribLocation(b,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(b,0,"position"),i.linkProgram(b);function P(H){if(s.debug.checkShaderErrors){const Q=i.getProgramInfoLog(b).trim(),X=i.getShaderInfoLog(L).trim(),J=i.getShaderInfoLog(D).trim();let at=!0,F=!0;if(i.getProgramParameter(b,i.LINK_STATUS)===!1)if(at=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,b,L,D);else{const q=U_(i,L,"vertex"),G=U_(i,D,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(b,i.VALIDATE_STATUS)+`

Material Name: `+H.name+`
Material Type: `+H.type+`

Program Info Log: `+Q+`
`+q+`
`+G)}else Q!==""?console.warn("THREE.WebGLProgram: Program Info Log:",Q):(X===""||J==="")&&(F=!1);F&&(H.diagnostics={runnable:at,programLog:Q,vertexShader:{log:X,prefix:S},fragmentShader:{log:J,prefix:y}})}i.deleteShader(L),i.deleteShader(D),O=new zu(i,b),C=u2(i,b)}let O;this.getUniforms=function(){return O===void 0&&P(this),O};let C;this.getAttributes=function(){return C===void 0&&P(this),C};let w=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=i.getProgramParameter(b,e2)),w},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(b),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=n2++,this.cacheKey=t,this.usedTimes=1,this.program=b,this.vertexShader=L,this.fragmentShader=D,this}let M2=0;class b2{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),o=this._getShaderStage(n),l=this._getShaderCacheForMaterial(t);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(o)===!1&&(l.add(o),o.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new E2(t),e.set(t,n)),n}}class E2{constructor(t){this.id=M2++,this.code=t,this.usedTimes=0}}function T2(s,t,e,n,i,o,l){const c=new yo,h=new b2,f=new Set,p=[],m=i.logarithmicDepthBuffer,g=i.vertexTextures;let v=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(C){return f.add(C),C===0?"uv":`uv${C}`}function S(C,w,H,Q,X){const J=Q.fog,at=X.geometry,F=C.isMeshStandardMaterial?Q.environment:null,q=(C.isMeshStandardMaterial?e:t).get(C.envMap||F),G=q&&q.mapping===Eo?q.image.height:null,st=x[C.type];C.precision!==null&&(v=i.getMaxPrecision(C.precision),v!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",v,"instead."));const lt=at.morphAttributes.position||at.morphAttributes.normal||at.morphAttributes.color,mt=lt!==void 0?lt.length:0;let wt=0;at.morphAttributes.position!==void 0&&(wt=1),at.morphAttributes.normal!==void 0&&(wt=2),at.morphAttributes.color!==void 0&&(wt=3);let jt,$,gt,Wt;if(st){const we=Xi[st];jt=we.vertexShader,$=we.fragmentShader}else jt=C.vertexShader,$=C.fragmentShader,h.update(C),gt=h.getVertexShaderID(C),Wt=h.getFragmentShaderID(C);const Dt=s.getRenderTarget(),Vt=s.state.buffers.depth.getReversed(),fe=X.isInstancedMesh===!0,Jt=X.isBatchedMesh===!0,Be=!!C.map,xe=!!C.matcap,oe=!!q,I=!!C.aoMap,Tt=!!C.lightMap,_t=!!C.bumpMap,bt=!!C.normalMap,ut=!!C.displacementMap,Ot=!!C.emissiveMap,vt=!!C.metalnessMap,It=!!C.roughnessMap,ue=C.anisotropy>0,z=C.clearcoat>0,R=C.dispersion>0,K=C.iridescence>0,rt=C.sheen>0,dt=C.transmission>0,ot=ue&&!!C.anisotropyMap,Zt=z&&!!C.clearcoatMap,Ct=z&&!!C.clearcoatNormalMap,Gt=z&&!!C.clearcoatRoughnessMap,Yt=K&&!!C.iridescenceMap,ft=K&&!!C.iridescenceThicknessMap,Lt=rt&&!!C.sheenColorMap,$t=rt&&!!C.sheenRoughnessMap,te=!!C.specularMap,At=!!C.specularColorMap,ne=!!C.specularIntensityMap,k=dt&&!!C.transmissionMap,Nt=dt&&!!C.thicknessMap,yt=!!C.gradientMap,Ht=!!C.alphaMap,St=C.alphaTest>0,ht=!!C.alphaHash,Xt=!!C.extensions;let re=rs;C.toneMapped&&(Dt===null||Dt.isXRRenderTarget===!0)&&(re=s.toneMapping);const ze={shaderID:st,shaderType:C.type,shaderName:C.name,vertexShader:jt,fragmentShader:$,defines:C.defines,customVertexShaderID:gt,customFragmentShaderID:Wt,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:v,batching:Jt,batchingColor:Jt&&X._colorsTexture!==null,instancing:fe,instancingColor:fe&&X.instanceColor!==null,instancingMorph:fe&&X.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:Dt===null?s.outputColorSpace:Dt.isXRRenderTarget===!0?Dt.texture.colorSpace:fa,alphaToCoverage:!!C.alphaToCoverage,map:Be,matcap:xe,envMap:oe,envMapMode:oe&&q.mapping,envMapCubeUVHeight:G,aoMap:I,lightMap:Tt,bumpMap:_t,normalMap:bt,displacementMap:g&&ut,emissiveMap:Ot,normalMapObjectSpace:bt&&C.normalMapType===Xy,normalMapTangentSpace:bt&&C.normalMapType===pa,metalnessMap:vt,roughnessMap:It,anisotropy:ue,anisotropyMap:ot,clearcoat:z,clearcoatMap:Zt,clearcoatNormalMap:Ct,clearcoatRoughnessMap:Gt,dispersion:R,iridescence:K,iridescenceMap:Yt,iridescenceThicknessMap:ft,sheen:rt,sheenColorMap:Lt,sheenRoughnessMap:$t,specularMap:te,specularColorMap:At,specularIntensityMap:ne,transmission:dt,transmissionMap:k,thicknessMap:Nt,gradientMap:yt,opaque:C.transparent===!1&&C.blending===ir&&C.alphaToCoverage===!1,alphaMap:Ht,alphaTest:St,alphaHash:ht,combine:C.combine,mapUv:Be&&b(C.map.channel),aoMapUv:I&&b(C.aoMap.channel),lightMapUv:Tt&&b(C.lightMap.channel),bumpMapUv:_t&&b(C.bumpMap.channel),normalMapUv:bt&&b(C.normalMap.channel),displacementMapUv:ut&&b(C.displacementMap.channel),emissiveMapUv:Ot&&b(C.emissiveMap.channel),metalnessMapUv:vt&&b(C.metalnessMap.channel),roughnessMapUv:It&&b(C.roughnessMap.channel),anisotropyMapUv:ot&&b(C.anisotropyMap.channel),clearcoatMapUv:Zt&&b(C.clearcoatMap.channel),clearcoatNormalMapUv:Ct&&b(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Gt&&b(C.clearcoatRoughnessMap.channel),iridescenceMapUv:Yt&&b(C.iridescenceMap.channel),iridescenceThicknessMapUv:ft&&b(C.iridescenceThicknessMap.channel),sheenColorMapUv:Lt&&b(C.sheenColorMap.channel),sheenRoughnessMapUv:$t&&b(C.sheenRoughnessMap.channel),specularMapUv:te&&b(C.specularMap.channel),specularColorMapUv:At&&b(C.specularColorMap.channel),specularIntensityMapUv:ne&&b(C.specularIntensityMap.channel),transmissionMapUv:k&&b(C.transmissionMap.channel),thicknessMapUv:Nt&&b(C.thicknessMap.channel),alphaMapUv:Ht&&b(C.alphaMap.channel),vertexTangents:!!at.attributes.tangent&&(bt||ue),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!at.attributes.color&&at.attributes.color.itemSize===4,pointsUvs:X.isPoints===!0&&!!at.attributes.uv&&(Be||Ht),fog:!!J,useFog:C.fog===!0,fogExp2:!!J&&J.isFogExp2,flatShading:C.flatShading===!0,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:m,reverseDepthBuffer:Vt,skinning:X.isSkinnedMesh===!0,morphTargets:at.morphAttributes.position!==void 0,morphNormals:at.morphAttributes.normal!==void 0,morphColors:at.morphAttributes.color!==void 0,morphTargetsCount:mt,morphTextureStride:wt,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:C.dithering,shadowMapEnabled:s.shadowMap.enabled&&H.length>0,shadowMapType:s.shadowMap.type,toneMapping:re,decodeVideoTexture:Be&&C.map.isVideoTexture===!0&&Ae.getTransfer(C.map.colorSpace)===He,decodeVideoTextureEmissive:Ot&&C.emissiveMap.isVideoTexture===!0&&Ae.getTransfer(C.emissiveMap.colorSpace)===He,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===ss,flipSided:C.side===qn,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionClipCullDistance:Xt&&C.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Xt&&C.extensions.multiDraw===!0||Jt)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()};return ze.vertexUv1s=f.has(1),ze.vertexUv2s=f.has(2),ze.vertexUv3s=f.has(3),f.clear(),ze}function y(C){const w=[];if(C.shaderID?w.push(C.shaderID):(w.push(C.customVertexShaderID),w.push(C.customFragmentShaderID)),C.defines!==void 0)for(const H in C.defines)w.push(H),w.push(C.defines[H]);return C.isRawShaderMaterial===!1&&(E(w,C),A(w,C),w.push(s.outputColorSpace)),w.push(C.customProgramCacheKey),w.join()}function E(C,w){C.push(w.precision),C.push(w.outputColorSpace),C.push(w.envMapMode),C.push(w.envMapCubeUVHeight),C.push(w.mapUv),C.push(w.alphaMapUv),C.push(w.lightMapUv),C.push(w.aoMapUv),C.push(w.bumpMapUv),C.push(w.normalMapUv),C.push(w.displacementMapUv),C.push(w.emissiveMapUv),C.push(w.metalnessMapUv),C.push(w.roughnessMapUv),C.push(w.anisotropyMapUv),C.push(w.clearcoatMapUv),C.push(w.clearcoatNormalMapUv),C.push(w.clearcoatRoughnessMapUv),C.push(w.iridescenceMapUv),C.push(w.iridescenceThicknessMapUv),C.push(w.sheenColorMapUv),C.push(w.sheenRoughnessMapUv),C.push(w.specularMapUv),C.push(w.specularColorMapUv),C.push(w.specularIntensityMapUv),C.push(w.transmissionMapUv),C.push(w.thicknessMapUv),C.push(w.combine),C.push(w.fogExp2),C.push(w.sizeAttenuation),C.push(w.morphTargetsCount),C.push(w.morphAttributeCount),C.push(w.numDirLights),C.push(w.numPointLights),C.push(w.numSpotLights),C.push(w.numSpotLightMaps),C.push(w.numHemiLights),C.push(w.numRectAreaLights),C.push(w.numDirLightShadows),C.push(w.numPointLightShadows),C.push(w.numSpotLightShadows),C.push(w.numSpotLightShadowsWithMaps),C.push(w.numLightProbes),C.push(w.shadowMapType),C.push(w.toneMapping),C.push(w.numClippingPlanes),C.push(w.numClipIntersection),C.push(w.depthPacking)}function A(C,w){c.disableAll(),w.supportsVertexTextures&&c.enable(0),w.instancing&&c.enable(1),w.instancingColor&&c.enable(2),w.instancingMorph&&c.enable(3),w.matcap&&c.enable(4),w.envMap&&c.enable(5),w.normalMapObjectSpace&&c.enable(6),w.normalMapTangentSpace&&c.enable(7),w.clearcoat&&c.enable(8),w.iridescence&&c.enable(9),w.alphaTest&&c.enable(10),w.vertexColors&&c.enable(11),w.vertexAlphas&&c.enable(12),w.vertexUv1s&&c.enable(13),w.vertexUv2s&&c.enable(14),w.vertexUv3s&&c.enable(15),w.vertexTangents&&c.enable(16),w.anisotropy&&c.enable(17),w.alphaHash&&c.enable(18),w.batching&&c.enable(19),w.dispersion&&c.enable(20),w.batchingColor&&c.enable(21),C.push(c.mask),c.disableAll(),w.fog&&c.enable(0),w.useFog&&c.enable(1),w.flatShading&&c.enable(2),w.logarithmicDepthBuffer&&c.enable(3),w.reverseDepthBuffer&&c.enable(4),w.skinning&&c.enable(5),w.morphTargets&&c.enable(6),w.morphNormals&&c.enable(7),w.morphColors&&c.enable(8),w.premultipliedAlpha&&c.enable(9),w.shadowMapEnabled&&c.enable(10),w.doubleSided&&c.enable(11),w.flipSided&&c.enable(12),w.useDepthPacking&&c.enable(13),w.dithering&&c.enable(14),w.transmission&&c.enable(15),w.sheen&&c.enable(16),w.opaque&&c.enable(17),w.pointsUvs&&c.enable(18),w.decodeVideoTexture&&c.enable(19),w.decodeVideoTextureEmissive&&c.enable(20),w.alphaToCoverage&&c.enable(21),C.push(c.mask)}function T(C){const w=x[C.type];let H;if(w){const Q=Xi[w];H=sx.clone(Q.uniforms)}else H=C.uniforms;return H}function L(C,w){let H;for(let Q=0,X=p.length;Q<X;Q++){const J=p[Q];if(J.cacheKey===w){H=J,++H.usedTimes;break}}return H===void 0&&(H=new S2(s,w,C,o),p.push(H)),H}function D(C){if(--C.usedTimes===0){const w=p.indexOf(C);p[w]=p[p.length-1],p.pop(),C.destroy()}}function P(C){h.remove(C)}function O(){h.dispose()}return{getParameters:S,getProgramCacheKey:y,getUniforms:T,acquireProgram:L,releaseProgram:D,releaseShaderCache:P,programs:p,dispose:O}}function A2(){let s=new WeakMap;function t(l){return s.has(l)}function e(l){let c=s.get(l);return c===void 0&&(c={},s.set(l,c)),c}function n(l){s.delete(l)}function i(l,c,h){s.get(l)[c]=h}function o(){s=new WeakMap}return{has:t,get:e,remove:n,update:i,dispose:o}}function w2(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function O_(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function B_(){const s=[];let t=0;const e=[],n=[],i=[];function o(){t=0,e.length=0,n.length=0,i.length=0}function l(m,g,v,x,b,S){let y=s[t];return y===void 0?(y={id:m.id,object:m,geometry:g,material:v,groupOrder:x,renderOrder:m.renderOrder,z:b,group:S},s[t]=y):(y.id=m.id,y.object=m,y.geometry=g,y.material=v,y.groupOrder=x,y.renderOrder=m.renderOrder,y.z=b,y.group=S),t++,y}function c(m,g,v,x,b,S){const y=l(m,g,v,x,b,S);v.transmission>0?n.push(y):v.transparent===!0?i.push(y):e.push(y)}function h(m,g,v,x,b,S){const y=l(m,g,v,x,b,S);v.transmission>0?n.unshift(y):v.transparent===!0?i.unshift(y):e.unshift(y)}function f(m,g){e.length>1&&e.sort(m||w2),n.length>1&&n.sort(g||O_),i.length>1&&i.sort(g||O_)}function p(){for(let m=t,g=s.length;m<g;m++){const v=s[m];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:e,transmissive:n,transparent:i,init:o,push:c,unshift:h,finish:p,sort:f}}function C2(){let s=new WeakMap;function t(n,i){const o=s.get(n);let l;return o===void 0?(l=new B_,s.set(n,[l])):i>=o.length?(l=new B_,o.push(l)):l=o[i],l}function e(){s=new WeakMap}return{get:t,dispose:e}}function R2(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new B,color:new zt};break;case"SpotLight":e={position:new B,direction:new B,color:new zt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new B,color:new zt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new B,skyColor:new zt,groundColor:new zt};break;case"RectAreaLight":e={color:new zt,position:new B,halfWidth:new B,halfHeight:new B};break}return s[t.id]=e,e}}}function D2(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pt};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pt};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pt,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let U2=0;function N2(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function L2(s){const t=new R2,e=D2(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new B);const i=new B,o=new ae,l=new ae;function c(f){let p=0,m=0,g=0;for(let C=0;C<9;C++)n.probe[C].set(0,0,0);let v=0,x=0,b=0,S=0,y=0,E=0,A=0,T=0,L=0,D=0,P=0;f.sort(N2);for(let C=0,w=f.length;C<w;C++){const H=f[C],Q=H.color,X=H.intensity,J=H.distance,at=H.shadow&&H.shadow.map?H.shadow.map.texture:null;if(H.isAmbientLight)p+=Q.r*X,m+=Q.g*X,g+=Q.b*X;else if(H.isLightProbe){for(let F=0;F<9;F++)n.probe[F].addScaledVector(H.sh.coefficients[F],X);P++}else if(H.isDirectionalLight){const F=t.get(H);if(F.color.copy(H.color).multiplyScalar(H.intensity),H.castShadow){const q=H.shadow,G=e.get(H);G.shadowIntensity=q.intensity,G.shadowBias=q.bias,G.shadowNormalBias=q.normalBias,G.shadowRadius=q.radius,G.shadowMapSize=q.mapSize,n.directionalShadow[v]=G,n.directionalShadowMap[v]=at,n.directionalShadowMatrix[v]=H.shadow.matrix,E++}n.directional[v]=F,v++}else if(H.isSpotLight){const F=t.get(H);F.position.setFromMatrixPosition(H.matrixWorld),F.color.copy(Q).multiplyScalar(X),F.distance=J,F.coneCos=Math.cos(H.angle),F.penumbraCos=Math.cos(H.angle*(1-H.penumbra)),F.decay=H.decay,n.spot[b]=F;const q=H.shadow;if(H.map&&(n.spotLightMap[L]=H.map,L++,q.updateMatrices(H),H.castShadow&&D++),n.spotLightMatrix[b]=q.matrix,H.castShadow){const G=e.get(H);G.shadowIntensity=q.intensity,G.shadowBias=q.bias,G.shadowNormalBias=q.normalBias,G.shadowRadius=q.radius,G.shadowMapSize=q.mapSize,n.spotShadow[b]=G,n.spotShadowMap[b]=at,T++}b++}else if(H.isRectAreaLight){const F=t.get(H);F.color.copy(Q).multiplyScalar(X),F.halfWidth.set(H.width*.5,0,0),F.halfHeight.set(0,H.height*.5,0),n.rectArea[S]=F,S++}else if(H.isPointLight){const F=t.get(H);if(F.color.copy(H.color).multiplyScalar(H.intensity),F.distance=H.distance,F.decay=H.decay,H.castShadow){const q=H.shadow,G=e.get(H);G.shadowIntensity=q.intensity,G.shadowBias=q.bias,G.shadowNormalBias=q.normalBias,G.shadowRadius=q.radius,G.shadowMapSize=q.mapSize,G.shadowCameraNear=q.camera.near,G.shadowCameraFar=q.camera.far,n.pointShadow[x]=G,n.pointShadowMap[x]=at,n.pointShadowMatrix[x]=H.shadow.matrix,A++}n.point[x]=F,x++}else if(H.isHemisphereLight){const F=t.get(H);F.skyColor.copy(H.color).multiplyScalar(X),F.groundColor.copy(H.groundColor).multiplyScalar(X),n.hemi[y]=F,y++}}S>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ut.LTC_FLOAT_1,n.rectAreaLTC2=Ut.LTC_FLOAT_2):(n.rectAreaLTC1=Ut.LTC_HALF_1,n.rectAreaLTC2=Ut.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=g;const O=n.hash;(O.directionalLength!==v||O.pointLength!==x||O.spotLength!==b||O.rectAreaLength!==S||O.hemiLength!==y||O.numDirectionalShadows!==E||O.numPointShadows!==A||O.numSpotShadows!==T||O.numSpotMaps!==L||O.numLightProbes!==P)&&(n.directional.length=v,n.spot.length=b,n.rectArea.length=S,n.point.length=x,n.hemi.length=y,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=A,n.pointShadowMap.length=A,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=A,n.spotLightMatrix.length=T+L-D,n.spotLightMap.length=L,n.numSpotLightShadowsWithMaps=D,n.numLightProbes=P,O.directionalLength=v,O.pointLength=x,O.spotLength=b,O.rectAreaLength=S,O.hemiLength=y,O.numDirectionalShadows=E,O.numPointShadows=A,O.numSpotShadows=T,O.numSpotMaps=L,O.numLightProbes=P,n.version=U2++)}function h(f,p){let m=0,g=0,v=0,x=0,b=0;const S=p.matrixWorldInverse;for(let y=0,E=f.length;y<E;y++){const A=f[y];if(A.isDirectionalLight){const T=n.directional[m];T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),m++}else if(A.isSpotLight){const T=n.spot[v];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),v++}else if(A.isRectAreaLight){const T=n.rectArea[x];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),l.identity(),o.copy(A.matrixWorld),o.premultiply(S),l.extractRotation(o),T.halfWidth.set(A.width*.5,0,0),T.halfHeight.set(0,A.height*.5,0),T.halfWidth.applyMatrix4(l),T.halfHeight.applyMatrix4(l),x++}else if(A.isPointLight){const T=n.point[g];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),g++}else if(A.isHemisphereLight){const T=n.hemi[b];T.direction.setFromMatrixPosition(A.matrixWorld),T.direction.transformDirection(S),b++}}}return{setup:c,setupView:h,state:n}}function z_(s){const t=new L2(s),e=[],n=[];function i(p){f.camera=p,e.length=0,n.length=0}function o(p){e.push(p)}function l(p){n.push(p)}function c(){t.setup(e)}function h(p){t.setupView(e,p)}const f={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:f,setupLights:c,setupLightsView:h,pushLight:o,pushShadow:l}}function P2(s){let t=new WeakMap;function e(i,o=0){const l=t.get(i);let c;return l===void 0?(c=new z_(s),t.set(i,[c])):o>=l.length?(c=new z_(s),l.push(c)):c=l[o],c}function n(){t=new WeakMap}return{get:e,dispose:n}}const I2=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,O2=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function B2(s,t,e){let n=new wo;const i=new pt,o=new pt,l=new Ue,c=new zm({depthPacking:Wy}),h=new Fm,f={},p=e.maxTextureSize,m={[Ps]:qn,[qn]:Ps,[ss]:ss},g=new Yi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new pt},radius:{value:4}},vertexShader:I2,fragmentShader:O2}),v=g.clone();v.defines.HORIZONTAL_PASS=1;const x=new _e;x.setAttribute("position",new ke(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new hn(x,g),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Nh;let y=this.type;this.render=function(D,P,O){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||D.length===0)return;const C=s.getRenderTarget(),w=s.getActiveCubeFace(),H=s.getActiveMipmapLevel(),Q=s.state;Q.setBlending(Ns),Q.buffers.color.setClear(1,1,1,1),Q.buffers.depth.setTest(!0),Q.setScissorTest(!1);const X=y!==Wi&&this.type===Wi,J=y===Wi&&this.type!==Wi;for(let at=0,F=D.length;at<F;at++){const q=D[at],G=q.shadow;if(G===void 0){console.warn("THREE.WebGLShadowMap:",q,"has no shadow.");continue}if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;i.copy(G.mapSize);const st=G.getFrameExtents();if(i.multiply(st),o.copy(G.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(o.x=Math.floor(p/st.x),i.x=o.x*st.x,G.mapSize.x=o.x),i.y>p&&(o.y=Math.floor(p/st.y),i.y=o.y*st.y,G.mapSize.y=o.y)),G.map===null||X===!0||J===!0){const mt=this.type!==Wi?{minFilter:Tn,magFilter:Tn}:{};G.map!==null&&G.map.dispose(),G.map=new ls(i.x,i.y,mt),G.map.texture.name=q.name+".shadowMap",G.camera.updateProjectionMatrix()}s.setRenderTarget(G.map),s.clear();const lt=G.getViewportCount();for(let mt=0;mt<lt;mt++){const wt=G.getViewport(mt);l.set(o.x*wt.x,o.y*wt.y,o.x*wt.z,o.y*wt.w),Q.viewport(l),G.updateMatrices(q,mt),n=G.getFrustum(),T(P,O,G.camera,q,this.type)}G.isPointLightShadow!==!0&&this.type===Wi&&E(G,O),G.needsUpdate=!1}y=this.type,S.needsUpdate=!1,s.setRenderTarget(C,w,H)};function E(D,P){const O=t.update(b);g.defines.VSM_SAMPLES!==D.blurSamples&&(g.defines.VSM_SAMPLES=D.blurSamples,v.defines.VSM_SAMPLES=D.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),D.mapPass===null&&(D.mapPass=new ls(i.x,i.y)),g.uniforms.shadow_pass.value=D.map.texture,g.uniforms.resolution.value=D.mapSize,g.uniforms.radius.value=D.radius,s.setRenderTarget(D.mapPass),s.clear(),s.renderBufferDirect(P,null,O,g,b,null),v.uniforms.shadow_pass.value=D.mapPass.texture,v.uniforms.resolution.value=D.mapSize,v.uniforms.radius.value=D.radius,s.setRenderTarget(D.map),s.clear(),s.renderBufferDirect(P,null,O,v,b,null)}function A(D,P,O,C){let w=null;const H=O.isPointLight===!0?D.customDistanceMaterial:D.customDepthMaterial;if(H!==void 0)w=H;else if(w=O.isPointLight===!0?h:c,s.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0||P.alphaToCoverage===!0){const Q=w.uuid,X=P.uuid;let J=f[Q];J===void 0&&(J={},f[Q]=J);let at=J[X];at===void 0&&(at=w.clone(),J[X]=at,P.addEventListener("dispose",L)),w=at}if(w.visible=P.visible,w.wireframe=P.wireframe,C===Wi?w.side=P.shadowSide!==null?P.shadowSide:P.side:w.side=P.shadowSide!==null?P.shadowSide:m[P.side],w.alphaMap=P.alphaMap,w.alphaTest=P.alphaToCoverage===!0?.5:P.alphaTest,w.map=P.map,w.clipShadows=P.clipShadows,w.clippingPlanes=P.clippingPlanes,w.clipIntersection=P.clipIntersection,w.displacementMap=P.displacementMap,w.displacementScale=P.displacementScale,w.displacementBias=P.displacementBias,w.wireframeLinewidth=P.wireframeLinewidth,w.linewidth=P.linewidth,O.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const Q=s.properties.get(w);Q.light=O}return w}function T(D,P,O,C,w){if(D.visible===!1)return;if(D.layers.test(P.layers)&&(D.isMesh||D.isLine||D.isPoints)&&(D.castShadow||D.receiveShadow&&w===Wi)&&(!D.frustumCulled||n.intersectsObject(D))){D.modelViewMatrix.multiplyMatrices(O.matrixWorldInverse,D.matrixWorld);const X=t.update(D),J=D.material;if(Array.isArray(J)){const at=X.groups;for(let F=0,q=at.length;F<q;F++){const G=at[F],st=J[G.materialIndex];if(st&&st.visible){const lt=A(D,st,C,w);D.onBeforeShadow(s,D,P,O,X,lt,G),s.renderBufferDirect(O,null,X,lt,D,G),D.onAfterShadow(s,D,P,O,X,lt,G)}}}else if(J.visible){const at=A(D,J,C,w);D.onBeforeShadow(s,D,P,O,X,at,null),s.renderBufferDirect(O,null,X,at,D,null),D.onAfterShadow(s,D,P,O,X,at,null)}}const Q=D.children;for(let X=0,J=Q.length;X<J;X++)T(Q[X],P,O,C,w)}function L(D){D.target.removeEventListener("dispose",L);for(const O in f){const C=f[O],w=D.target.uuid;w in C&&(C[w].dispose(),delete C[w])}}}const z2={[ku]:Wu,[Xu]:Zu,[qu]:ju,[rr]:Yu,[Wu]:ku,[Zu]:Xu,[ju]:qu,[Yu]:rr};function F2(s,t){function e(){let k=!1;const Nt=new Ue;let yt=null;const Ht=new Ue(0,0,0,0);return{setMask:function(St){yt!==St&&!k&&(s.colorMask(St,St,St,St),yt=St)},setLocked:function(St){k=St},setClear:function(St,ht,Xt,re,ze){ze===!0&&(St*=re,ht*=re,Xt*=re),Nt.set(St,ht,Xt,re),Ht.equals(Nt)===!1&&(s.clearColor(St,ht,Xt,re),Ht.copy(Nt))},reset:function(){k=!1,yt=null,Ht.set(-1,0,0,0)}}}function n(){let k=!1,Nt=!1,yt=null,Ht=null,St=null;return{setReversed:function(ht){if(Nt!==ht){const Xt=t.get("EXT_clip_control");ht?Xt.clipControlEXT(Xt.LOWER_LEFT_EXT,Xt.ZERO_TO_ONE_EXT):Xt.clipControlEXT(Xt.LOWER_LEFT_EXT,Xt.NEGATIVE_ONE_TO_ONE_EXT),Nt=ht;const re=St;St=null,this.setClear(re)}},getReversed:function(){return Nt},setTest:function(ht){ht?Dt(s.DEPTH_TEST):Vt(s.DEPTH_TEST)},setMask:function(ht){yt!==ht&&!k&&(s.depthMask(ht),yt=ht)},setFunc:function(ht){if(Nt&&(ht=z2[ht]),Ht!==ht){switch(ht){case ku:s.depthFunc(s.NEVER);break;case Wu:s.depthFunc(s.ALWAYS);break;case Xu:s.depthFunc(s.LESS);break;case rr:s.depthFunc(s.LEQUAL);break;case qu:s.depthFunc(s.EQUAL);break;case Yu:s.depthFunc(s.GEQUAL);break;case Zu:s.depthFunc(s.GREATER);break;case ju:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Ht=ht}},setLocked:function(ht){k=ht},setClear:function(ht){St!==ht&&(Nt&&(ht=1-ht),s.clearDepth(ht),St=ht)},reset:function(){k=!1,yt=null,Ht=null,St=null,Nt=!1}}}function i(){let k=!1,Nt=null,yt=null,Ht=null,St=null,ht=null,Xt=null,re=null,ze=null;return{setTest:function(we){k||(we?Dt(s.STENCIL_TEST):Vt(s.STENCIL_TEST))},setMask:function(we){Nt!==we&&!k&&(s.stencilMask(we),Nt=we)},setFunc:function(we,Zn,xi){(yt!==we||Ht!==Zn||St!==xi)&&(s.stencilFunc(we,Zn,xi),yt=we,Ht=Zn,St=xi)},setOp:function(we,Zn,xi){(ht!==we||Xt!==Zn||re!==xi)&&(s.stencilOp(we,Zn,xi),ht=we,Xt=Zn,re=xi)},setLocked:function(we){k=we},setClear:function(we){ze!==we&&(s.clearStencil(we),ze=we)},reset:function(){k=!1,Nt=null,yt=null,Ht=null,St=null,ht=null,Xt=null,re=null,ze=null}}}const o=new e,l=new n,c=new i,h=new WeakMap,f=new WeakMap;let p={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,y=null,E=null,A=null,T=null,L=null,D=null,P=new zt(0,0,0),O=0,C=!1,w=null,H=null,Q=null,X=null,J=null;const at=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let F=!1,q=0;const G=s.getParameter(s.VERSION);G.indexOf("WebGL")!==-1?(q=parseFloat(/^WebGL (\d)/.exec(G)[1]),F=q>=1):G.indexOf("OpenGL ES")!==-1&&(q=parseFloat(/^OpenGL ES (\d)/.exec(G)[1]),F=q>=2);let st=null,lt={};const mt=s.getParameter(s.SCISSOR_BOX),wt=s.getParameter(s.VIEWPORT),jt=new Ue().fromArray(mt),$=new Ue().fromArray(wt);function gt(k,Nt,yt,Ht){const St=new Uint8Array(4),ht=s.createTexture();s.bindTexture(k,ht),s.texParameteri(k,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(k,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let Xt=0;Xt<yt;Xt++)k===s.TEXTURE_3D||k===s.TEXTURE_2D_ARRAY?s.texImage3D(Nt,0,s.RGBA,1,1,Ht,0,s.RGBA,s.UNSIGNED_BYTE,St):s.texImage2D(Nt+Xt,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,St);return ht}const Wt={};Wt[s.TEXTURE_2D]=gt(s.TEXTURE_2D,s.TEXTURE_2D,1),Wt[s.TEXTURE_CUBE_MAP]=gt(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),Wt[s.TEXTURE_2D_ARRAY]=gt(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),Wt[s.TEXTURE_3D]=gt(s.TEXTURE_3D,s.TEXTURE_3D,1,1),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Dt(s.DEPTH_TEST),l.setFunc(rr),_t(!1),bt(Gp),Dt(s.CULL_FACE),I(Ns);function Dt(k){p[k]!==!0&&(s.enable(k),p[k]=!0)}function Vt(k){p[k]!==!1&&(s.disable(k),p[k]=!1)}function fe(k,Nt){return m[k]!==Nt?(s.bindFramebuffer(k,Nt),m[k]=Nt,k===s.DRAW_FRAMEBUFFER&&(m[s.FRAMEBUFFER]=Nt),k===s.FRAMEBUFFER&&(m[s.DRAW_FRAMEBUFFER]=Nt),!0):!1}function Jt(k,Nt){let yt=v,Ht=!1;if(k){yt=g.get(Nt),yt===void 0&&(yt=[],g.set(Nt,yt));const St=k.textures;if(yt.length!==St.length||yt[0]!==s.COLOR_ATTACHMENT0){for(let ht=0,Xt=St.length;ht<Xt;ht++)yt[ht]=s.COLOR_ATTACHMENT0+ht;yt.length=St.length,Ht=!0}}else yt[0]!==s.BACK&&(yt[0]=s.BACK,Ht=!0);Ht&&s.drawBuffers(yt)}function Be(k){return x!==k?(s.useProgram(k),x=k,!0):!1}const xe={[la]:s.FUNC_ADD,[py]:s.FUNC_SUBTRACT,[my]:s.FUNC_REVERSE_SUBTRACT};xe[gy]=s.MIN,xe[vy]=s.MAX;const oe={[_y]:s.ZERO,[yy]:s.ONE,[xy]:s.SRC_COLOR,[Vu]:s.SRC_ALPHA,[Ay]:s.SRC_ALPHA_SATURATE,[Ey]:s.DST_COLOR,[My]:s.DST_ALPHA,[Sy]:s.ONE_MINUS_SRC_COLOR,[Gu]:s.ONE_MINUS_SRC_ALPHA,[Ty]:s.ONE_MINUS_DST_COLOR,[by]:s.ONE_MINUS_DST_ALPHA,[wy]:s.CONSTANT_COLOR,[Cy]:s.ONE_MINUS_CONSTANT_COLOR,[Ry]:s.CONSTANT_ALPHA,[Dy]:s.ONE_MINUS_CONSTANT_ALPHA};function I(k,Nt,yt,Ht,St,ht,Xt,re,ze,we){if(k===Ns){b===!0&&(Vt(s.BLEND),b=!1);return}if(b===!1&&(Dt(s.BLEND),b=!0),k!==dy){if(k!==S||we!==C){if((y!==la||T!==la)&&(s.blendEquation(s.FUNC_ADD),y=la,T=la),we)switch(k){case ir:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case kp:s.blendFunc(s.ONE,s.ONE);break;case Wp:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Xp:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}else switch(k){case ir:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case kp:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case Wp:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Xp:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}E=null,A=null,L=null,D=null,P.set(0,0,0),O=0,S=k,C=we}return}St=St||Nt,ht=ht||yt,Xt=Xt||Ht,(Nt!==y||St!==T)&&(s.blendEquationSeparate(xe[Nt],xe[St]),y=Nt,T=St),(yt!==E||Ht!==A||ht!==L||Xt!==D)&&(s.blendFuncSeparate(oe[yt],oe[Ht],oe[ht],oe[Xt]),E=yt,A=Ht,L=ht,D=Xt),(re.equals(P)===!1||ze!==O)&&(s.blendColor(re.r,re.g,re.b,ze),P.copy(re),O=ze),S=k,C=!1}function Tt(k,Nt){k.side===ss?Vt(s.CULL_FACE):Dt(s.CULL_FACE);let yt=k.side===qn;Nt&&(yt=!yt),_t(yt),k.blending===ir&&k.transparent===!1?I(Ns):I(k.blending,k.blendEquation,k.blendSrc,k.blendDst,k.blendEquationAlpha,k.blendSrcAlpha,k.blendDstAlpha,k.blendColor,k.blendAlpha,k.premultipliedAlpha),l.setFunc(k.depthFunc),l.setTest(k.depthTest),l.setMask(k.depthWrite),o.setMask(k.colorWrite);const Ht=k.stencilWrite;c.setTest(Ht),Ht&&(c.setMask(k.stencilWriteMask),c.setFunc(k.stencilFunc,k.stencilRef,k.stencilFuncMask),c.setOp(k.stencilFail,k.stencilZFail,k.stencilZPass)),Ot(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits),k.alphaToCoverage===!0?Dt(s.SAMPLE_ALPHA_TO_COVERAGE):Vt(s.SAMPLE_ALPHA_TO_COVERAGE)}function _t(k){w!==k&&(k?s.frontFace(s.CW):s.frontFace(s.CCW),w=k)}function bt(k){k!==uy?(Dt(s.CULL_FACE),k!==H&&(k===Gp?s.cullFace(s.BACK):k===hy?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Vt(s.CULL_FACE),H=k}function ut(k){k!==Q&&(F&&s.lineWidth(k),Q=k)}function Ot(k,Nt,yt){k?(Dt(s.POLYGON_OFFSET_FILL),(X!==Nt||J!==yt)&&(s.polygonOffset(Nt,yt),X=Nt,J=yt)):Vt(s.POLYGON_OFFSET_FILL)}function vt(k){k?Dt(s.SCISSOR_TEST):Vt(s.SCISSOR_TEST)}function It(k){k===void 0&&(k=s.TEXTURE0+at-1),st!==k&&(s.activeTexture(k),st=k)}function ue(k,Nt,yt){yt===void 0&&(st===null?yt=s.TEXTURE0+at-1:yt=st);let Ht=lt[yt];Ht===void 0&&(Ht={type:void 0,texture:void 0},lt[yt]=Ht),(Ht.type!==k||Ht.texture!==Nt)&&(st!==yt&&(s.activeTexture(yt),st=yt),s.bindTexture(k,Nt||Wt[k]),Ht.type=k,Ht.texture=Nt)}function z(){const k=lt[st];k!==void 0&&k.type!==void 0&&(s.bindTexture(k.type,null),k.type=void 0,k.texture=void 0)}function R(){try{s.compressedTexImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function K(){try{s.compressedTexImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function rt(){try{s.texSubImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function dt(){try{s.texSubImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ot(){try{s.compressedTexSubImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Zt(){try{s.compressedTexSubImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Ct(){try{s.texStorage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Gt(){try{s.texStorage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Yt(){try{s.texImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ft(){try{s.texImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Lt(k){jt.equals(k)===!1&&(s.scissor(k.x,k.y,k.z,k.w),jt.copy(k))}function $t(k){$.equals(k)===!1&&(s.viewport(k.x,k.y,k.z,k.w),$.copy(k))}function te(k,Nt){let yt=f.get(Nt);yt===void 0&&(yt=new WeakMap,f.set(Nt,yt));let Ht=yt.get(k);Ht===void 0&&(Ht=s.getUniformBlockIndex(Nt,k.name),yt.set(k,Ht))}function At(k,Nt){const Ht=f.get(Nt).get(k);h.get(Nt)!==Ht&&(s.uniformBlockBinding(Nt,Ht,k.__bindingPointIndex),h.set(Nt,Ht))}function ne(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),l.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),p={},st=null,lt={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,y=null,E=null,A=null,T=null,L=null,D=null,P=new zt(0,0,0),O=0,C=!1,w=null,H=null,Q=null,X=null,J=null,jt.set(0,0,s.canvas.width,s.canvas.height),$.set(0,0,s.canvas.width,s.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:Dt,disable:Vt,bindFramebuffer:fe,drawBuffers:Jt,useProgram:Be,setBlending:I,setMaterial:Tt,setFlipSided:_t,setCullFace:bt,setLineWidth:ut,setPolygonOffset:Ot,setScissorTest:vt,activeTexture:It,bindTexture:ue,unbindTexture:z,compressedTexImage2D:R,compressedTexImage3D:K,texImage2D:Yt,texImage3D:ft,updateUBOMapping:te,uniformBlockBinding:At,texStorage2D:Ct,texStorage3D:Gt,texSubImage2D:rt,texSubImage3D:dt,compressedTexSubImage2D:ot,compressedTexSubImage3D:Zt,scissor:Lt,viewport:$t,reset:ne}}function H2(s,t,e,n,i,o,l){const c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new pt,p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(z,R){return v?new OffscreenCanvas(z,R):Hl("canvas")}function b(z,R,K){let rt=1;const dt=ue(z);if((dt.width>K||dt.height>K)&&(rt=K/Math.max(dt.width,dt.height)),rt<1)if(typeof HTMLImageElement<"u"&&z instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&z instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&z instanceof ImageBitmap||typeof VideoFrame<"u"&&z instanceof VideoFrame){const ot=Math.floor(rt*dt.width),Zt=Math.floor(rt*dt.height);m===void 0&&(m=x(ot,Zt));const Ct=R?x(ot,Zt):m;return Ct.width=ot,Ct.height=Zt,Ct.getContext("2d").drawImage(z,0,0,ot,Zt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+dt.width+"x"+dt.height+") to ("+ot+"x"+Zt+")."),Ct}else return"data"in z&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+dt.width+"x"+dt.height+")."),z;return z}function S(z){return z.generateMipmaps}function y(z){s.generateMipmap(z)}function E(z){return z.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:z.isWebGL3DRenderTarget?s.TEXTURE_3D:z.isWebGLArrayRenderTarget||z.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function A(z,R,K,rt,dt=!1){if(z!==null){if(s[z]!==void 0)return s[z];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+z+"'")}let ot=R;if(R===s.RED&&(K===s.FLOAT&&(ot=s.R32F),K===s.HALF_FLOAT&&(ot=s.R16F),K===s.UNSIGNED_BYTE&&(ot=s.R8)),R===s.RED_INTEGER&&(K===s.UNSIGNED_BYTE&&(ot=s.R8UI),K===s.UNSIGNED_SHORT&&(ot=s.R16UI),K===s.UNSIGNED_INT&&(ot=s.R32UI),K===s.BYTE&&(ot=s.R8I),K===s.SHORT&&(ot=s.R16I),K===s.INT&&(ot=s.R32I)),R===s.RG&&(K===s.FLOAT&&(ot=s.RG32F),K===s.HALF_FLOAT&&(ot=s.RG16F),K===s.UNSIGNED_BYTE&&(ot=s.RG8)),R===s.RG_INTEGER&&(K===s.UNSIGNED_BYTE&&(ot=s.RG8UI),K===s.UNSIGNED_SHORT&&(ot=s.RG16UI),K===s.UNSIGNED_INT&&(ot=s.RG32UI),K===s.BYTE&&(ot=s.RG8I),K===s.SHORT&&(ot=s.RG16I),K===s.INT&&(ot=s.RG32I)),R===s.RGB_INTEGER&&(K===s.UNSIGNED_BYTE&&(ot=s.RGB8UI),K===s.UNSIGNED_SHORT&&(ot=s.RGB16UI),K===s.UNSIGNED_INT&&(ot=s.RGB32UI),K===s.BYTE&&(ot=s.RGB8I),K===s.SHORT&&(ot=s.RGB16I),K===s.INT&&(ot=s.RGB32I)),R===s.RGBA_INTEGER&&(K===s.UNSIGNED_BYTE&&(ot=s.RGBA8UI),K===s.UNSIGNED_SHORT&&(ot=s.RGBA16UI),K===s.UNSIGNED_INT&&(ot=s.RGBA32UI),K===s.BYTE&&(ot=s.RGBA8I),K===s.SHORT&&(ot=s.RGBA16I),K===s.INT&&(ot=s.RGBA32I)),R===s.RGB&&K===s.UNSIGNED_INT_5_9_9_9_REV&&(ot=s.RGB9_E5),R===s.RGBA){const Zt=dt?Bl:Ae.getTransfer(rt);K===s.FLOAT&&(ot=s.RGBA32F),K===s.HALF_FLOAT&&(ot=s.RGBA16F),K===s.UNSIGNED_BYTE&&(ot=Zt===He?s.SRGB8_ALPHA8:s.RGBA8),K===s.UNSIGNED_SHORT_4_4_4_4&&(ot=s.RGBA4),K===s.UNSIGNED_SHORT_5_5_5_1&&(ot=s.RGB5_A1)}return(ot===s.R16F||ot===s.R32F||ot===s.RG16F||ot===s.RG32F||ot===s.RGBA16F||ot===s.RGBA32F)&&t.get("EXT_color_buffer_float"),ot}function T(z,R){let K;return z?R===null||R===Os||R===mo?K=s.DEPTH24_STENCIL8:R===ii?K=s.DEPTH32F_STENCIL8:R===po&&(K=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===Os||R===mo?K=s.DEPTH_COMPONENT24:R===ii?K=s.DEPTH_COMPONENT32F:R===po&&(K=s.DEPTH_COMPONENT16),K}function L(z,R){return S(z)===!0||z.isFramebufferTexture&&z.minFilter!==Tn&&z.minFilter!==dn?Math.log2(Math.max(R.width,R.height))+1:z.mipmaps!==void 0&&z.mipmaps.length>0?z.mipmaps.length:z.isCompressedTexture&&Array.isArray(z.image)?R.mipmaps.length:1}function D(z){const R=z.target;R.removeEventListener("dispose",D),O(R),R.isVideoTexture&&p.delete(R)}function P(z){const R=z.target;R.removeEventListener("dispose",P),w(R)}function O(z){const R=n.get(z);if(R.__webglInit===void 0)return;const K=z.source,rt=g.get(K);if(rt){const dt=rt[R.__cacheKey];dt.usedTimes--,dt.usedTimes===0&&C(z),Object.keys(rt).length===0&&g.delete(K)}n.remove(z)}function C(z){const R=n.get(z);s.deleteTexture(R.__webglTexture);const K=z.source,rt=g.get(K);delete rt[R.__cacheKey],l.memory.textures--}function w(z){const R=n.get(z);if(z.depthTexture&&(z.depthTexture.dispose(),n.remove(z.depthTexture)),z.isWebGLCubeRenderTarget)for(let rt=0;rt<6;rt++){if(Array.isArray(R.__webglFramebuffer[rt]))for(let dt=0;dt<R.__webglFramebuffer[rt].length;dt++)s.deleteFramebuffer(R.__webglFramebuffer[rt][dt]);else s.deleteFramebuffer(R.__webglFramebuffer[rt]);R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer[rt])}else{if(Array.isArray(R.__webglFramebuffer))for(let rt=0;rt<R.__webglFramebuffer.length;rt++)s.deleteFramebuffer(R.__webglFramebuffer[rt]);else s.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&s.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let rt=0;rt<R.__webglColorRenderbuffer.length;rt++)R.__webglColorRenderbuffer[rt]&&s.deleteRenderbuffer(R.__webglColorRenderbuffer[rt]);R.__webglDepthRenderbuffer&&s.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const K=z.textures;for(let rt=0,dt=K.length;rt<dt;rt++){const ot=n.get(K[rt]);ot.__webglTexture&&(s.deleteTexture(ot.__webglTexture),l.memory.textures--),n.remove(K[rt])}n.remove(z)}let H=0;function Q(){H=0}function X(){const z=H;return z>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+z+" texture units while this GPU supports only "+i.maxTextures),H+=1,z}function J(z){const R=[];return R.push(z.wrapS),R.push(z.wrapT),R.push(z.wrapR||0),R.push(z.magFilter),R.push(z.minFilter),R.push(z.anisotropy),R.push(z.internalFormat),R.push(z.format),R.push(z.type),R.push(z.generateMipmaps),R.push(z.premultiplyAlpha),R.push(z.flipY),R.push(z.unpackAlignment),R.push(z.colorSpace),R.join()}function at(z,R){const K=n.get(z);if(z.isVideoTexture&&vt(z),z.isRenderTargetTexture===!1&&z.version>0&&K.__version!==z.version){const rt=z.image;if(rt===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(rt.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Wt(K,z,R);return}}e.bindTexture(s.TEXTURE_2D,K.__webglTexture,s.TEXTURE0+R)}function F(z,R){const K=n.get(z);if(z.version>0&&K.__version!==z.version){Wt(K,z,R);return}e.bindTexture(s.TEXTURE_2D_ARRAY,K.__webglTexture,s.TEXTURE0+R)}function q(z,R){const K=n.get(z);if(z.version>0&&K.__version!==z.version){Wt(K,z,R);return}e.bindTexture(s.TEXTURE_3D,K.__webglTexture,s.TEXTURE0+R)}function G(z,R){const K=n.get(z);if(z.version>0&&K.__version!==z.version){Dt(K,z,R);return}e.bindTexture(s.TEXTURE_CUBE_MAP,K.__webglTexture,s.TEXTURE0+R)}const st={[Ll]:s.REPEAT,[Ui]:s.CLAMP_TO_EDGE,[Pl]:s.MIRRORED_REPEAT},lt={[Tn]:s.NEAREST,[fm]:s.NEAREST_MIPMAP_NEAREST,[oo]:s.NEAREST_MIPMAP_LINEAR,[dn]:s.LINEAR,[Sl]:s.LINEAR_MIPMAP_NEAREST,[as]:s.LINEAR_MIPMAP_LINEAR},mt={[qy]:s.NEVER,[Qy]:s.ALWAYS,[Yy]:s.LESS,[Sm]:s.LEQUAL,[Zy]:s.EQUAL,[Jy]:s.GEQUAL,[jy]:s.GREATER,[Ky]:s.NOTEQUAL};function wt(z,R){if(R.type===ii&&t.has("OES_texture_float_linear")===!1&&(R.magFilter===dn||R.magFilter===Sl||R.magFilter===oo||R.magFilter===as||R.minFilter===dn||R.minFilter===Sl||R.minFilter===oo||R.minFilter===as)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(z,s.TEXTURE_WRAP_S,st[R.wrapS]),s.texParameteri(z,s.TEXTURE_WRAP_T,st[R.wrapT]),(z===s.TEXTURE_3D||z===s.TEXTURE_2D_ARRAY)&&s.texParameteri(z,s.TEXTURE_WRAP_R,st[R.wrapR]),s.texParameteri(z,s.TEXTURE_MAG_FILTER,lt[R.magFilter]),s.texParameteri(z,s.TEXTURE_MIN_FILTER,lt[R.minFilter]),R.compareFunction&&(s.texParameteri(z,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(z,s.TEXTURE_COMPARE_FUNC,mt[R.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===Tn||R.minFilter!==oo&&R.minFilter!==as||R.type===ii&&t.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||n.get(R).__currentAnisotropy){const K=t.get("EXT_texture_filter_anisotropic");s.texParameterf(z,K.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy}}}function jt(z,R){let K=!1;z.__webglInit===void 0&&(z.__webglInit=!0,R.addEventListener("dispose",D));const rt=R.source;let dt=g.get(rt);dt===void 0&&(dt={},g.set(rt,dt));const ot=J(R);if(ot!==z.__cacheKey){dt[ot]===void 0&&(dt[ot]={texture:s.createTexture(),usedTimes:0},l.memory.textures++,K=!0),dt[ot].usedTimes++;const Zt=dt[z.__cacheKey];Zt!==void 0&&(dt[z.__cacheKey].usedTimes--,Zt.usedTimes===0&&C(R)),z.__cacheKey=ot,z.__webglTexture=dt[ot].texture}return K}function $(z,R,K){return Math.floor(Math.floor(z/K)/R)}function gt(z,R,K,rt){const ot=z.updateRanges;if(ot.length===0)e.texSubImage2D(s.TEXTURE_2D,0,0,0,R.width,R.height,K,rt,R.data);else{ot.sort((ft,Lt)=>ft.start-Lt.start);let Zt=0;for(let ft=1;ft<ot.length;ft++){const Lt=ot[Zt],$t=ot[ft],te=Lt.start+Lt.count,At=$($t.start,R.width,4),ne=$(Lt.start,R.width,4);$t.start<=te+1&&At===ne&&$($t.start+$t.count-1,R.width,4)===At?Lt.count=Math.max(Lt.count,$t.start+$t.count-Lt.start):(++Zt,ot[Zt]=$t)}ot.length=Zt+1;const Ct=s.getParameter(s.UNPACK_ROW_LENGTH),Gt=s.getParameter(s.UNPACK_SKIP_PIXELS),Yt=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,R.width);for(let ft=0,Lt=ot.length;ft<Lt;ft++){const $t=ot[ft],te=Math.floor($t.start/4),At=Math.ceil($t.count/4),ne=te%R.width,k=Math.floor(te/R.width),Nt=At,yt=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,ne),s.pixelStorei(s.UNPACK_SKIP_ROWS,k),e.texSubImage2D(s.TEXTURE_2D,0,ne,k,Nt,yt,K,rt,R.data)}z.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,Ct),s.pixelStorei(s.UNPACK_SKIP_PIXELS,Gt),s.pixelStorei(s.UNPACK_SKIP_ROWS,Yt)}}function Wt(z,R,K){let rt=s.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(rt=s.TEXTURE_2D_ARRAY),R.isData3DTexture&&(rt=s.TEXTURE_3D);const dt=jt(z,R),ot=R.source;e.bindTexture(rt,z.__webglTexture,s.TEXTURE0+K);const Zt=n.get(ot);if(ot.version!==Zt.__version||dt===!0){e.activeTexture(s.TEXTURE0+K);const Ct=Ae.getPrimaries(Ae.workingColorSpace),Gt=R.colorSpace===Rs?null:Ae.getPrimaries(R.colorSpace),Yt=R.colorSpace===Rs||Ct===Gt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Yt);let ft=b(R.image,!1,i.maxTextureSize);ft=It(R,ft);const Lt=o.convert(R.format,R.colorSpace),$t=o.convert(R.type);let te=A(R.internalFormat,Lt,$t,R.colorSpace,R.isVideoTexture);wt(rt,R);let At;const ne=R.mipmaps,k=R.isVideoTexture!==!0,Nt=Zt.__version===void 0||dt===!0,yt=ot.dataReady,Ht=L(R,ft);if(R.isDepthTexture)te=T(R.format===vo,R.type),Nt&&(k?e.texStorage2D(s.TEXTURE_2D,1,te,ft.width,ft.height):e.texImage2D(s.TEXTURE_2D,0,te,ft.width,ft.height,0,Lt,$t,null));else if(R.isDataTexture)if(ne.length>0){k&&Nt&&e.texStorage2D(s.TEXTURE_2D,Ht,te,ne[0].width,ne[0].height);for(let St=0,ht=ne.length;St<ht;St++)At=ne[St],k?yt&&e.texSubImage2D(s.TEXTURE_2D,St,0,0,At.width,At.height,Lt,$t,At.data):e.texImage2D(s.TEXTURE_2D,St,te,At.width,At.height,0,Lt,$t,At.data);R.generateMipmaps=!1}else k?(Nt&&e.texStorage2D(s.TEXTURE_2D,Ht,te,ft.width,ft.height),yt&&gt(R,ft,Lt,$t)):e.texImage2D(s.TEXTURE_2D,0,te,ft.width,ft.height,0,Lt,$t,ft.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){k&&Nt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Ht,te,ne[0].width,ne[0].height,ft.depth);for(let St=0,ht=ne.length;St<ht;St++)if(At=ne[St],R.format!==On)if(Lt!==null)if(k){if(yt)if(R.layerUpdates.size>0){const Xt=em(At.width,At.height,R.format,R.type);for(const re of R.layerUpdates){const ze=At.data.subarray(re*Xt/At.data.BYTES_PER_ELEMENT,(re+1)*Xt/At.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,St,0,0,re,At.width,At.height,1,Lt,ze)}R.clearLayerUpdates()}else e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,St,0,0,0,At.width,At.height,ft.depth,Lt,At.data)}else e.compressedTexImage3D(s.TEXTURE_2D_ARRAY,St,te,At.width,At.height,ft.depth,0,At.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else k?yt&&e.texSubImage3D(s.TEXTURE_2D_ARRAY,St,0,0,0,At.width,At.height,ft.depth,Lt,$t,At.data):e.texImage3D(s.TEXTURE_2D_ARRAY,St,te,At.width,At.height,ft.depth,0,Lt,$t,At.data)}else{k&&Nt&&e.texStorage2D(s.TEXTURE_2D,Ht,te,ne[0].width,ne[0].height);for(let St=0,ht=ne.length;St<ht;St++)At=ne[St],R.format!==On?Lt!==null?k?yt&&e.compressedTexSubImage2D(s.TEXTURE_2D,St,0,0,At.width,At.height,Lt,At.data):e.compressedTexImage2D(s.TEXTURE_2D,St,te,At.width,At.height,0,At.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):k?yt&&e.texSubImage2D(s.TEXTURE_2D,St,0,0,At.width,At.height,Lt,$t,At.data):e.texImage2D(s.TEXTURE_2D,St,te,At.width,At.height,0,Lt,$t,At.data)}else if(R.isDataArrayTexture)if(k){if(Nt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Ht,te,ft.width,ft.height,ft.depth),yt)if(R.layerUpdates.size>0){const St=em(ft.width,ft.height,R.format,R.type);for(const ht of R.layerUpdates){const Xt=ft.data.subarray(ht*St/ft.data.BYTES_PER_ELEMENT,(ht+1)*St/ft.data.BYTES_PER_ELEMENT);e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,ht,ft.width,ft.height,1,Lt,$t,Xt)}R.clearLayerUpdates()}else e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,ft.width,ft.height,ft.depth,Lt,$t,ft.data)}else e.texImage3D(s.TEXTURE_2D_ARRAY,0,te,ft.width,ft.height,ft.depth,0,Lt,$t,ft.data);else if(R.isData3DTexture)k?(Nt&&e.texStorage3D(s.TEXTURE_3D,Ht,te,ft.width,ft.height,ft.depth),yt&&e.texSubImage3D(s.TEXTURE_3D,0,0,0,0,ft.width,ft.height,ft.depth,Lt,$t,ft.data)):e.texImage3D(s.TEXTURE_3D,0,te,ft.width,ft.height,ft.depth,0,Lt,$t,ft.data);else if(R.isFramebufferTexture){if(Nt)if(k)e.texStorage2D(s.TEXTURE_2D,Ht,te,ft.width,ft.height);else{let St=ft.width,ht=ft.height;for(let Xt=0;Xt<Ht;Xt++)e.texImage2D(s.TEXTURE_2D,Xt,te,St,ht,0,Lt,$t,null),St>>=1,ht>>=1}}else if(ne.length>0){if(k&&Nt){const St=ue(ne[0]);e.texStorage2D(s.TEXTURE_2D,Ht,te,St.width,St.height)}for(let St=0,ht=ne.length;St<ht;St++)At=ne[St],k?yt&&e.texSubImage2D(s.TEXTURE_2D,St,0,0,Lt,$t,At):e.texImage2D(s.TEXTURE_2D,St,te,Lt,$t,At);R.generateMipmaps=!1}else if(k){if(Nt){const St=ue(ft);e.texStorage2D(s.TEXTURE_2D,Ht,te,St.width,St.height)}yt&&e.texSubImage2D(s.TEXTURE_2D,0,0,0,Lt,$t,ft)}else e.texImage2D(s.TEXTURE_2D,0,te,Lt,$t,ft);S(R)&&y(rt),Zt.__version=ot.version,R.onUpdate&&R.onUpdate(R)}z.__version=R.version}function Dt(z,R,K){if(R.image.length!==6)return;const rt=jt(z,R),dt=R.source;e.bindTexture(s.TEXTURE_CUBE_MAP,z.__webglTexture,s.TEXTURE0+K);const ot=n.get(dt);if(dt.version!==ot.__version||rt===!0){e.activeTexture(s.TEXTURE0+K);const Zt=Ae.getPrimaries(Ae.workingColorSpace),Ct=R.colorSpace===Rs?null:Ae.getPrimaries(R.colorSpace),Gt=R.colorSpace===Rs||Zt===Ct?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Gt);const Yt=R.isCompressedTexture||R.image[0].isCompressedTexture,ft=R.image[0]&&R.image[0].isDataTexture,Lt=[];for(let ht=0;ht<6;ht++)!Yt&&!ft?Lt[ht]=b(R.image[ht],!0,i.maxCubemapSize):Lt[ht]=ft?R.image[ht].image:R.image[ht],Lt[ht]=It(R,Lt[ht]);const $t=Lt[0],te=o.convert(R.format,R.colorSpace),At=o.convert(R.type),ne=A(R.internalFormat,te,At,R.colorSpace),k=R.isVideoTexture!==!0,Nt=ot.__version===void 0||rt===!0,yt=dt.dataReady;let Ht=L(R,$t);wt(s.TEXTURE_CUBE_MAP,R);let St;if(Yt){k&&Nt&&e.texStorage2D(s.TEXTURE_CUBE_MAP,Ht,ne,$t.width,$t.height);for(let ht=0;ht<6;ht++){St=Lt[ht].mipmaps;for(let Xt=0;Xt<St.length;Xt++){const re=St[Xt];R.format!==On?te!==null?k?yt&&e.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt,0,0,re.width,re.height,te,re.data):e.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt,ne,re.width,re.height,0,re.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):k?yt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt,0,0,re.width,re.height,te,At,re.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt,ne,re.width,re.height,0,te,At,re.data)}}}else{if(St=R.mipmaps,k&&Nt){St.length>0&&Ht++;const ht=ue(Lt[0]);e.texStorage2D(s.TEXTURE_CUBE_MAP,Ht,ne,ht.width,ht.height)}for(let ht=0;ht<6;ht++)if(ft){k?yt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ht,0,0,0,Lt[ht].width,Lt[ht].height,te,At,Lt[ht].data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ht,0,ne,Lt[ht].width,Lt[ht].height,0,te,At,Lt[ht].data);for(let Xt=0;Xt<St.length;Xt++){const ze=St[Xt].image[ht].image;k?yt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt+1,0,0,ze.width,ze.height,te,At,ze.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt+1,ne,ze.width,ze.height,0,te,At,ze.data)}}else{k?yt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ht,0,0,0,te,At,Lt[ht]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ht,0,ne,te,At,Lt[ht]);for(let Xt=0;Xt<St.length;Xt++){const re=St[Xt];k?yt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt+1,0,0,te,At,re.image[ht]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt+1,ne,te,At,re.image[ht])}}}S(R)&&y(s.TEXTURE_CUBE_MAP),ot.__version=dt.version,R.onUpdate&&R.onUpdate(R)}z.__version=R.version}function Vt(z,R,K,rt,dt,ot){const Zt=o.convert(K.format,K.colorSpace),Ct=o.convert(K.type),Gt=A(K.internalFormat,Zt,Ct,K.colorSpace),Yt=n.get(R),ft=n.get(K);if(ft.__renderTarget=R,!Yt.__hasExternalTextures){const Lt=Math.max(1,R.width>>ot),$t=Math.max(1,R.height>>ot);dt===s.TEXTURE_3D||dt===s.TEXTURE_2D_ARRAY?e.texImage3D(dt,ot,Gt,Lt,$t,R.depth,0,Zt,Ct,null):e.texImage2D(dt,ot,Gt,Lt,$t,0,Zt,Ct,null)}e.bindFramebuffer(s.FRAMEBUFFER,z),Ot(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,rt,dt,ft.__webglTexture,0,ut(R)):(dt===s.TEXTURE_2D||dt>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&dt<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,rt,dt,ft.__webglTexture,ot),e.bindFramebuffer(s.FRAMEBUFFER,null)}function fe(z,R,K){if(s.bindRenderbuffer(s.RENDERBUFFER,z),R.depthBuffer){const rt=R.depthTexture,dt=rt&&rt.isDepthTexture?rt.type:null,ot=T(R.stencilBuffer,dt),Zt=R.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ct=ut(R);Ot(R)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ct,ot,R.width,R.height):K?s.renderbufferStorageMultisample(s.RENDERBUFFER,Ct,ot,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,ot,R.width,R.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Zt,s.RENDERBUFFER,z)}else{const rt=R.textures;for(let dt=0;dt<rt.length;dt++){const ot=rt[dt],Zt=o.convert(ot.format,ot.colorSpace),Ct=o.convert(ot.type),Gt=A(ot.internalFormat,Zt,Ct,ot.colorSpace),Yt=ut(R);K&&Ot(R)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Yt,Gt,R.width,R.height):Ot(R)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Yt,Gt,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,Gt,R.width,R.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Jt(z,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(s.FRAMEBUFFER,z),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const rt=n.get(R.depthTexture);rt.__renderTarget=R,(!rt.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),at(R.depthTexture,0);const dt=rt.__webglTexture,ot=ut(R);if(R.depthTexture.format===go)Ot(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,dt,0,ot):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,dt,0);else if(R.depthTexture.format===vo)Ot(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,dt,0,ot):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,dt,0);else throw new Error("Unknown depthTexture format")}function Be(z){const R=n.get(z),K=z.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==z.depthTexture){const rt=z.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),rt){const dt=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,rt.removeEventListener("dispose",dt)};rt.addEventListener("dispose",dt),R.__depthDisposeCallback=dt}R.__boundDepthTexture=rt}if(z.depthTexture&&!R.__autoAllocateDepthBuffer){if(K)throw new Error("target.depthTexture not supported in Cube render targets");const rt=z.texture.mipmaps;rt&&rt.length>0?Jt(R.__webglFramebuffer[0],z):Jt(R.__webglFramebuffer,z)}else if(K){R.__webglDepthbuffer=[];for(let rt=0;rt<6;rt++)if(e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[rt]),R.__webglDepthbuffer[rt]===void 0)R.__webglDepthbuffer[rt]=s.createRenderbuffer(),fe(R.__webglDepthbuffer[rt],z,!1);else{const dt=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ot=R.__webglDepthbuffer[rt];s.bindRenderbuffer(s.RENDERBUFFER,ot),s.framebufferRenderbuffer(s.FRAMEBUFFER,dt,s.RENDERBUFFER,ot)}}else{const rt=z.texture.mipmaps;if(rt&&rt.length>0?e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[0]):e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=s.createRenderbuffer(),fe(R.__webglDepthbuffer,z,!1);else{const dt=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ot=R.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,ot),s.framebufferRenderbuffer(s.FRAMEBUFFER,dt,s.RENDERBUFFER,ot)}}e.bindFramebuffer(s.FRAMEBUFFER,null)}function xe(z,R,K){const rt=n.get(z);R!==void 0&&Vt(rt.__webglFramebuffer,z,z.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),K!==void 0&&Be(z)}function oe(z){const R=z.texture,K=n.get(z),rt=n.get(R);z.addEventListener("dispose",P);const dt=z.textures,ot=z.isWebGLCubeRenderTarget===!0,Zt=dt.length>1;if(Zt||(rt.__webglTexture===void 0&&(rt.__webglTexture=s.createTexture()),rt.__version=R.version,l.memory.textures++),ot){K.__webglFramebuffer=[];for(let Ct=0;Ct<6;Ct++)if(R.mipmaps&&R.mipmaps.length>0){K.__webglFramebuffer[Ct]=[];for(let Gt=0;Gt<R.mipmaps.length;Gt++)K.__webglFramebuffer[Ct][Gt]=s.createFramebuffer()}else K.__webglFramebuffer[Ct]=s.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){K.__webglFramebuffer=[];for(let Ct=0;Ct<R.mipmaps.length;Ct++)K.__webglFramebuffer[Ct]=s.createFramebuffer()}else K.__webglFramebuffer=s.createFramebuffer();if(Zt)for(let Ct=0,Gt=dt.length;Ct<Gt;Ct++){const Yt=n.get(dt[Ct]);Yt.__webglTexture===void 0&&(Yt.__webglTexture=s.createTexture(),l.memory.textures++)}if(z.samples>0&&Ot(z)===!1){K.__webglMultisampledFramebuffer=s.createFramebuffer(),K.__webglColorRenderbuffer=[],e.bindFramebuffer(s.FRAMEBUFFER,K.__webglMultisampledFramebuffer);for(let Ct=0;Ct<dt.length;Ct++){const Gt=dt[Ct];K.__webglColorRenderbuffer[Ct]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,K.__webglColorRenderbuffer[Ct]);const Yt=o.convert(Gt.format,Gt.colorSpace),ft=o.convert(Gt.type),Lt=A(Gt.internalFormat,Yt,ft,Gt.colorSpace,z.isXRRenderTarget===!0),$t=ut(z);s.renderbufferStorageMultisample(s.RENDERBUFFER,$t,Lt,z.width,z.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ct,s.RENDERBUFFER,K.__webglColorRenderbuffer[Ct])}s.bindRenderbuffer(s.RENDERBUFFER,null),z.depthBuffer&&(K.__webglDepthRenderbuffer=s.createRenderbuffer(),fe(K.__webglDepthRenderbuffer,z,!0)),e.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ot){e.bindTexture(s.TEXTURE_CUBE_MAP,rt.__webglTexture),wt(s.TEXTURE_CUBE_MAP,R);for(let Ct=0;Ct<6;Ct++)if(R.mipmaps&&R.mipmaps.length>0)for(let Gt=0;Gt<R.mipmaps.length;Gt++)Vt(K.__webglFramebuffer[Ct][Gt],z,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ct,Gt);else Vt(K.__webglFramebuffer[Ct],z,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ct,0);S(R)&&y(s.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Zt){for(let Ct=0,Gt=dt.length;Ct<Gt;Ct++){const Yt=dt[Ct],ft=n.get(Yt);e.bindTexture(s.TEXTURE_2D,ft.__webglTexture),wt(s.TEXTURE_2D,Yt),Vt(K.__webglFramebuffer,z,Yt,s.COLOR_ATTACHMENT0+Ct,s.TEXTURE_2D,0),S(Yt)&&y(s.TEXTURE_2D)}e.unbindTexture()}else{let Ct=s.TEXTURE_2D;if((z.isWebGL3DRenderTarget||z.isWebGLArrayRenderTarget)&&(Ct=z.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(Ct,rt.__webglTexture),wt(Ct,R),R.mipmaps&&R.mipmaps.length>0)for(let Gt=0;Gt<R.mipmaps.length;Gt++)Vt(K.__webglFramebuffer[Gt],z,R,s.COLOR_ATTACHMENT0,Ct,Gt);else Vt(K.__webglFramebuffer,z,R,s.COLOR_ATTACHMENT0,Ct,0);S(R)&&y(Ct),e.unbindTexture()}z.depthBuffer&&Be(z)}function I(z){const R=z.textures;for(let K=0,rt=R.length;K<rt;K++){const dt=R[K];if(S(dt)){const ot=E(z),Zt=n.get(dt).__webglTexture;e.bindTexture(ot,Zt),y(ot),e.unbindTexture()}}}const Tt=[],_t=[];function bt(z){if(z.samples>0){if(Ot(z)===!1){const R=z.textures,K=z.width,rt=z.height;let dt=s.COLOR_BUFFER_BIT;const ot=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Zt=n.get(z),Ct=R.length>1;if(Ct)for(let Yt=0;Yt<R.length;Yt++)e.bindFramebuffer(s.FRAMEBUFFER,Zt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Yt,s.RENDERBUFFER,null),e.bindFramebuffer(s.FRAMEBUFFER,Zt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Yt,s.TEXTURE_2D,null,0);e.bindFramebuffer(s.READ_FRAMEBUFFER,Zt.__webglMultisampledFramebuffer);const Gt=z.texture.mipmaps;Gt&&Gt.length>0?e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Zt.__webglFramebuffer[0]):e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Zt.__webglFramebuffer);for(let Yt=0;Yt<R.length;Yt++){if(z.resolveDepthBuffer&&(z.depthBuffer&&(dt|=s.DEPTH_BUFFER_BIT),z.stencilBuffer&&z.resolveStencilBuffer&&(dt|=s.STENCIL_BUFFER_BIT)),Ct){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Zt.__webglColorRenderbuffer[Yt]);const ft=n.get(R[Yt]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,ft,0)}s.blitFramebuffer(0,0,K,rt,0,0,K,rt,dt,s.NEAREST),h===!0&&(Tt.length=0,_t.length=0,Tt.push(s.COLOR_ATTACHMENT0+Yt),z.depthBuffer&&z.resolveDepthBuffer===!1&&(Tt.push(ot),_t.push(ot),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,_t)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Tt))}if(e.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Ct)for(let Yt=0;Yt<R.length;Yt++){e.bindFramebuffer(s.FRAMEBUFFER,Zt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Yt,s.RENDERBUFFER,Zt.__webglColorRenderbuffer[Yt]);const ft=n.get(R[Yt]).__webglTexture;e.bindFramebuffer(s.FRAMEBUFFER,Zt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Yt,s.TEXTURE_2D,ft,0)}e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Zt.__webglMultisampledFramebuffer)}else if(z.depthBuffer&&z.resolveDepthBuffer===!1&&h){const R=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[R])}}}function ut(z){return Math.min(i.maxSamples,z.samples)}function Ot(z){const R=n.get(z);return z.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function vt(z){const R=l.render.frame;p.get(z)!==R&&(p.set(z,R),z.update())}function It(z,R){const K=z.colorSpace,rt=z.format,dt=z.type;return z.isCompressedTexture===!0||z.isVideoTexture===!0||K!==fa&&K!==Rs&&(Ae.getTransfer(K)===He?(rt!==On||dt!==Li)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",K)),R}function ue(z){return typeof HTMLImageElement<"u"&&z instanceof HTMLImageElement?(f.width=z.naturalWidth||z.width,f.height=z.naturalHeight||z.height):typeof VideoFrame<"u"&&z instanceof VideoFrame?(f.width=z.displayWidth,f.height=z.displayHeight):(f.width=z.width,f.height=z.height),f}this.allocateTextureUnit=X,this.resetTextureUnits=Q,this.setTexture2D=at,this.setTexture2DArray=F,this.setTexture3D=q,this.setTextureCube=G,this.rebindTextures=xe,this.setupRenderTarget=oe,this.updateRenderTargetMipmap=I,this.updateMultisampleRenderTarget=bt,this.setupDepthRenderbuffer=Be,this.setupFrameBufferTexture=Vt,this.useMultisampledRTT=Ot}function cS(s,t){function e(n,i=Rs){let o;const l=Ae.getTransfer(i);if(n===Li)return s.UNSIGNED_BYTE;if(n===Ih)return s.UNSIGNED_SHORT_4_4_4_4;if(n===Oh)return s.UNSIGNED_SHORT_5_5_5_1;if(n===mm)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===dm)return s.BYTE;if(n===pm)return s.SHORT;if(n===po)return s.UNSIGNED_SHORT;if(n===Ph)return s.INT;if(n===Os)return s.UNSIGNED_INT;if(n===ii)return s.FLOAT;if(n===To)return s.HALF_FLOAT;if(n===gm)return s.ALPHA;if(n===vm)return s.RGB;if(n===On)return s.RGBA;if(n===go)return s.DEPTH_COMPONENT;if(n===vo)return s.DEPTH_STENCIL;if(n===Bh)return s.RED;if(n===Kl)return s.RED_INTEGER;if(n===_m)return s.RG;if(n===zh)return s.RG_INTEGER;if(n===Fh)return s.RGBA_INTEGER;if(n===Ml||n===bl||n===El||n===Tl)if(l===He)if(o=t.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(n===Ml)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===bl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===El)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Tl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(n===Ml)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===bl)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===El)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Tl)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Ku||n===Ju||n===Qu||n===$u)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(n===Ku)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Ju)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Qu)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===$u)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===th||n===eh||n===nh)if(o=t.get("WEBGL_compressed_texture_etc"),o!==null){if(n===th||n===eh)return l===He?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(n===nh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===ih||n===sh||n===ah||n===rh||n===oh||n===lh||n===ch||n===uh||n===hh||n===fh||n===dh||n===ph||n===mh||n===gh)if(o=t.get("WEBGL_compressed_texture_astc"),o!==null){if(n===ih)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===sh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===ah)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===rh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===oh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===lh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===ch)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===uh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===hh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===fh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===dh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===ph)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===mh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===gh)return l===He?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Al||n===vh||n===_h)if(o=t.get("EXT_texture_compression_bptc"),o!==null){if(n===Al)return l===He?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===vh)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===_h)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===ym||n===yh||n===xh||n===Sh)if(o=t.get("EXT_texture_compression_rgtc"),o!==null){if(n===Al)return o.COMPRESSED_RED_RGTC1_EXT;if(n===yh)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===xh)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Sh)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===mo?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:e}}const V2=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,G2=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class k2{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(this.texture===null){const i=new an,o=t.properties.get(i);o.__webglTexture=e.texture,(e.depthNear!==n.depthNear||e.depthFar!==n.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new Yi({vertexShader:V2,fragmentShader:G2,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new hn(new Co(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class W2 extends cs{constructor(t,e){super();const n=this;let i=null,o=1,l=null,c="local-floor",h=1,f=null,p=null,m=null,g=null,v=null,x=null;const b=new k2,S=e.getContextAttributes();let y=null,E=null;const A=[],T=[],L=new pt;let D=null;const P=new xn;P.viewport=new Ue;const O=new xn;O.viewport=new Ue;const C=[P,O],w=new Qx;let H=null,Q=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function($){let gt=A[$];return gt===void 0&&(gt=new Bu,A[$]=gt),gt.getTargetRaySpace()},this.getControllerGrip=function($){let gt=A[$];return gt===void 0&&(gt=new Bu,A[$]=gt),gt.getGripSpace()},this.getHand=function($){let gt=A[$];return gt===void 0&&(gt=new Bu,A[$]=gt),gt.getHandSpace()};function X($){const gt=T.indexOf($.inputSource);if(gt===-1)return;const Wt=A[gt];Wt!==void 0&&(Wt.update($.inputSource,$.frame,f||l),Wt.dispatchEvent({type:$.type,data:$.inputSource}))}function J(){i.removeEventListener("select",X),i.removeEventListener("selectstart",X),i.removeEventListener("selectend",X),i.removeEventListener("squeeze",X),i.removeEventListener("squeezestart",X),i.removeEventListener("squeezeend",X),i.removeEventListener("end",J),i.removeEventListener("inputsourceschange",at);for(let $=0;$<A.length;$++){const gt=T[$];gt!==null&&(T[$]=null,A[$].disconnect(gt))}H=null,Q=null,b.reset(),t.setRenderTarget(y),v=null,g=null,m=null,i=null,E=null,jt.stop(),n.isPresenting=!1,t.setPixelRatio(D),t.setSize(L.width,L.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function($){o=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function($){c=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||l},this.setReferenceSpace=function($){f=$},this.getBaseLayer=function(){return g!==null?g:v},this.getBinding=function(){return m},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function($){if(i=$,i!==null){if(y=t.getRenderTarget(),i.addEventListener("select",X),i.addEventListener("selectstart",X),i.addEventListener("selectend",X),i.addEventListener("squeeze",X),i.addEventListener("squeezestart",X),i.addEventListener("squeezeend",X),i.addEventListener("end",J),i.addEventListener("inputsourceschange",at),S.xrCompatible!==!0&&await e.makeXRCompatible(),D=t.getPixelRatio(),t.getSize(L),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Wt=null,Dt=null,Vt=null;S.depth&&(Vt=S.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,Wt=S.stencil?vo:go,Dt=S.stencil?mo:Os);const fe={colorFormat:e.RGBA8,depthFormat:Vt,scaleFactor:o};m=new XRWebGLBinding(i,e),g=m.createProjectionLayer(fe),i.updateRenderState({layers:[g]}),t.setPixelRatio(1),t.setSize(g.textureWidth,g.textureHeight,!1),E=new ls(g.textureWidth,g.textureHeight,{format:On,type:Li,depthTexture:new Dm(g.textureWidth,g.textureHeight,Dt,void 0,void 0,void 0,void 0,void 0,void 0,Wt),stencilBuffer:S.stencil,colorSpace:t.outputColorSpace,samples:S.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1,resolveStencilBuffer:g.ignoreDepthValues===!1})}else{const Wt={antialias:S.antialias,alpha:!0,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:o};v=new XRWebGLLayer(i,e,Wt),i.updateRenderState({baseLayer:v}),t.setPixelRatio(1),t.setSize(v.framebufferWidth,v.framebufferHeight,!1),E=new ls(v.framebufferWidth,v.framebufferHeight,{format:On,type:Li,colorSpace:t.outputColorSpace,stencilBuffer:S.stencil,resolveDepthBuffer:v.ignoreDepthValues===!1,resolveStencilBuffer:v.ignoreDepthValues===!1})}E.isXRRenderTarget=!0,this.setFoveation(h),f=null,l=await i.requestReferenceSpace(c),jt.setContext(i),jt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return b.getDepthTexture()};function at($){for(let gt=0;gt<$.removed.length;gt++){const Wt=$.removed[gt],Dt=T.indexOf(Wt);Dt>=0&&(T[Dt]=null,A[Dt].disconnect(Wt))}for(let gt=0;gt<$.added.length;gt++){const Wt=$.added[gt];let Dt=T.indexOf(Wt);if(Dt===-1){for(let fe=0;fe<A.length;fe++)if(fe>=T.length){T.push(Wt),Dt=fe;break}else if(T[fe]===null){T[fe]=Wt,Dt=fe;break}if(Dt===-1)break}const Vt=A[Dt];Vt&&Vt.connect(Wt)}}const F=new B,q=new B;function G($,gt,Wt){F.setFromMatrixPosition(gt.matrixWorld),q.setFromMatrixPosition(Wt.matrixWorld);const Dt=F.distanceTo(q),Vt=gt.projectionMatrix.elements,fe=Wt.projectionMatrix.elements,Jt=Vt[14]/(Vt[10]-1),Be=Vt[14]/(Vt[10]+1),xe=(Vt[9]+1)/Vt[5],oe=(Vt[9]-1)/Vt[5],I=(Vt[8]-1)/Vt[0],Tt=(fe[8]+1)/fe[0],_t=Jt*I,bt=Jt*Tt,ut=Dt/(-I+Tt),Ot=ut*-I;if(gt.matrixWorld.decompose($.position,$.quaternion,$.scale),$.translateX(Ot),$.translateZ(ut),$.matrixWorld.compose($.position,$.quaternion,$.scale),$.matrixWorldInverse.copy($.matrixWorld).invert(),Vt[10]===-1)$.projectionMatrix.copy(gt.projectionMatrix),$.projectionMatrixInverse.copy(gt.projectionMatrixInverse);else{const vt=Jt+ut,It=Be+ut,ue=_t-Ot,z=bt+(Dt-Ot),R=xe*Be/It*vt,K=oe*Be/It*vt;$.projectionMatrix.makePerspective(ue,z,R,K,vt,It),$.projectionMatrixInverse.copy($.projectionMatrix).invert()}}function st($,gt){gt===null?$.matrixWorld.copy($.matrix):$.matrixWorld.multiplyMatrices(gt.matrixWorld,$.matrix),$.matrixWorldInverse.copy($.matrixWorld).invert()}this.updateCamera=function($){if(i===null)return;let gt=$.near,Wt=$.far;b.texture!==null&&(b.depthNear>0&&(gt=b.depthNear),b.depthFar>0&&(Wt=b.depthFar)),w.near=O.near=P.near=gt,w.far=O.far=P.far=Wt,(H!==w.near||Q!==w.far)&&(i.updateRenderState({depthNear:w.near,depthFar:w.far}),H=w.near,Q=w.far),P.layers.mask=$.layers.mask|2,O.layers.mask=$.layers.mask|4,w.layers.mask=P.layers.mask|O.layers.mask;const Dt=$.parent,Vt=w.cameras;st(w,Dt);for(let fe=0;fe<Vt.length;fe++)st(Vt[fe],Dt);Vt.length===2?G(w,P,O):w.projectionMatrix.copy(P.projectionMatrix),lt($,w,Dt)};function lt($,gt,Wt){Wt===null?$.matrix.copy(gt.matrixWorld):($.matrix.copy(Wt.matrixWorld),$.matrix.invert(),$.matrix.multiply(gt.matrixWorld)),$.matrix.decompose($.position,$.quaternion,$.scale),$.updateMatrixWorld(!0),$.projectionMatrix.copy(gt.projectionMatrix),$.projectionMatrixInverse.copy(gt.projectionMatrixInverse),$.isPerspectiveCamera&&($.fov=_o*2*Math.atan(1/$.projectionMatrix.elements[5]),$.zoom=1)}this.getCamera=function(){return w},this.getFoveation=function(){if(!(g===null&&v===null))return h},this.setFoveation=function($){h=$,g!==null&&(g.fixedFoveation=$),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=$)},this.hasDepthSensing=function(){return b.texture!==null},this.getDepthSensingMesh=function(){return b.getMesh(w)};let mt=null;function wt($,gt){if(p=gt.getViewerPose(f||l),x=gt,p!==null){const Wt=p.views;v!==null&&(t.setRenderTargetFramebuffer(E,v.framebuffer),t.setRenderTarget(E));let Dt=!1;Wt.length!==w.cameras.length&&(w.cameras.length=0,Dt=!0);for(let Jt=0;Jt<Wt.length;Jt++){const Be=Wt[Jt];let xe=null;if(v!==null)xe=v.getViewport(Be);else{const I=m.getViewSubImage(g,Be);xe=I.viewport,Jt===0&&(t.setRenderTargetTextures(E,I.colorTexture,I.depthStencilTexture),t.setRenderTarget(E))}let oe=C[Jt];oe===void 0&&(oe=new xn,oe.layers.enable(Jt),oe.viewport=new Ue,C[Jt]=oe),oe.matrix.fromArray(Be.transform.matrix),oe.matrix.decompose(oe.position,oe.quaternion,oe.scale),oe.projectionMatrix.fromArray(Be.projectionMatrix),oe.projectionMatrixInverse.copy(oe.projectionMatrix).invert(),oe.viewport.set(xe.x,xe.y,xe.width,xe.height),Jt===0&&(w.matrix.copy(oe.matrix),w.matrix.decompose(w.position,w.quaternion,w.scale)),Dt===!0&&w.cameras.push(oe)}const Vt=i.enabledFeatures;if(Vt&&Vt.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&m){const Jt=m.getDepthInformation(Wt[0]);Jt&&Jt.isValid&&Jt.texture&&b.init(t,Jt,i.renderState)}}for(let Wt=0;Wt<A.length;Wt++){const Dt=T[Wt],Vt=A[Wt];Dt!==null&&Vt!==void 0&&Vt.update(Dt,gt,f||l)}mt&&mt($,gt),gt.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:gt}),x=null}const jt=new sS;jt.setAnimationLoop(wt),this.setAnimationLoop=function($){mt=$},this.dispose=function(){}}}const Ka=new yi,X2=new ae;function q2(s,t){function e(S,y){S.matrixAutoUpdate===!0&&S.updateMatrix(),y.value.copy(S.matrix)}function n(S,y){y.color.getRGB(S.fogColor.value,ix(s)),y.isFog?(S.fogNear.value=y.near,S.fogFar.value=y.far):y.isFogExp2&&(S.fogDensity.value=y.density)}function i(S,y,E,A,T){y.isMeshBasicMaterial||y.isMeshLambertMaterial?o(S,y):y.isMeshToonMaterial?(o(S,y),m(S,y)):y.isMeshPhongMaterial?(o(S,y),p(S,y)):y.isMeshStandardMaterial?(o(S,y),g(S,y),y.isMeshPhysicalMaterial&&v(S,y,T)):y.isMeshMatcapMaterial?(o(S,y),x(S,y)):y.isMeshDepthMaterial?o(S,y):y.isMeshDistanceMaterial?(o(S,y),b(S,y)):y.isMeshNormalMaterial?o(S,y):y.isLineBasicMaterial?(l(S,y),y.isLineDashedMaterial&&c(S,y)):y.isPointsMaterial?h(S,y,E,A):y.isSpriteMaterial?f(S,y):y.isShadowMaterial?(S.color.value.copy(y.color),S.opacity.value=y.opacity):y.isShaderMaterial&&(y.uniformsNeedUpdate=!1)}function o(S,y){S.opacity.value=y.opacity,y.color&&S.diffuse.value.copy(y.color),y.emissive&&S.emissive.value.copy(y.emissive).multiplyScalar(y.emissiveIntensity),y.map&&(S.map.value=y.map,e(y.map,S.mapTransform)),y.alphaMap&&(S.alphaMap.value=y.alphaMap,e(y.alphaMap,S.alphaMapTransform)),y.bumpMap&&(S.bumpMap.value=y.bumpMap,e(y.bumpMap,S.bumpMapTransform),S.bumpScale.value=y.bumpScale,y.side===qn&&(S.bumpScale.value*=-1)),y.normalMap&&(S.normalMap.value=y.normalMap,e(y.normalMap,S.normalMapTransform),S.normalScale.value.copy(y.normalScale),y.side===qn&&S.normalScale.value.negate()),y.displacementMap&&(S.displacementMap.value=y.displacementMap,e(y.displacementMap,S.displacementMapTransform),S.displacementScale.value=y.displacementScale,S.displacementBias.value=y.displacementBias),y.emissiveMap&&(S.emissiveMap.value=y.emissiveMap,e(y.emissiveMap,S.emissiveMapTransform)),y.specularMap&&(S.specularMap.value=y.specularMap,e(y.specularMap,S.specularMapTransform)),y.alphaTest>0&&(S.alphaTest.value=y.alphaTest);const E=t.get(y),A=E.envMap,T=E.envMapRotation;A&&(S.envMap.value=A,Ka.copy(T),Ka.x*=-1,Ka.y*=-1,Ka.z*=-1,A.isCubeTexture&&A.isRenderTargetTexture===!1&&(Ka.y*=-1,Ka.z*=-1),S.envMapRotation.value.setFromMatrix4(X2.makeRotationFromEuler(Ka)),S.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=y.reflectivity,S.ior.value=y.ior,S.refractionRatio.value=y.refractionRatio),y.lightMap&&(S.lightMap.value=y.lightMap,S.lightMapIntensity.value=y.lightMapIntensity,e(y.lightMap,S.lightMapTransform)),y.aoMap&&(S.aoMap.value=y.aoMap,S.aoMapIntensity.value=y.aoMapIntensity,e(y.aoMap,S.aoMapTransform))}function l(S,y){S.diffuse.value.copy(y.color),S.opacity.value=y.opacity,y.map&&(S.map.value=y.map,e(y.map,S.mapTransform))}function c(S,y){S.dashSize.value=y.dashSize,S.totalSize.value=y.dashSize+y.gapSize,S.scale.value=y.scale}function h(S,y,E,A){S.diffuse.value.copy(y.color),S.opacity.value=y.opacity,S.size.value=y.size*E,S.scale.value=A*.5,y.map&&(S.map.value=y.map,e(y.map,S.uvTransform)),y.alphaMap&&(S.alphaMap.value=y.alphaMap,e(y.alphaMap,S.alphaMapTransform)),y.alphaTest>0&&(S.alphaTest.value=y.alphaTest)}function f(S,y){S.diffuse.value.copy(y.color),S.opacity.value=y.opacity,S.rotation.value=y.rotation,y.map&&(S.map.value=y.map,e(y.map,S.mapTransform)),y.alphaMap&&(S.alphaMap.value=y.alphaMap,e(y.alphaMap,S.alphaMapTransform)),y.alphaTest>0&&(S.alphaTest.value=y.alphaTest)}function p(S,y){S.specular.value.copy(y.specular),S.shininess.value=Math.max(y.shininess,1e-4)}function m(S,y){y.gradientMap&&(S.gradientMap.value=y.gradientMap)}function g(S,y){S.metalness.value=y.metalness,y.metalnessMap&&(S.metalnessMap.value=y.metalnessMap,e(y.metalnessMap,S.metalnessMapTransform)),S.roughness.value=y.roughness,y.roughnessMap&&(S.roughnessMap.value=y.roughnessMap,e(y.roughnessMap,S.roughnessMapTransform)),y.envMap&&(S.envMapIntensity.value=y.envMapIntensity)}function v(S,y,E){S.ior.value=y.ior,y.sheen>0&&(S.sheenColor.value.copy(y.sheenColor).multiplyScalar(y.sheen),S.sheenRoughness.value=y.sheenRoughness,y.sheenColorMap&&(S.sheenColorMap.value=y.sheenColorMap,e(y.sheenColorMap,S.sheenColorMapTransform)),y.sheenRoughnessMap&&(S.sheenRoughnessMap.value=y.sheenRoughnessMap,e(y.sheenRoughnessMap,S.sheenRoughnessMapTransform))),y.clearcoat>0&&(S.clearcoat.value=y.clearcoat,S.clearcoatRoughness.value=y.clearcoatRoughness,y.clearcoatMap&&(S.clearcoatMap.value=y.clearcoatMap,e(y.clearcoatMap,S.clearcoatMapTransform)),y.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=y.clearcoatRoughnessMap,e(y.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),y.clearcoatNormalMap&&(S.clearcoatNormalMap.value=y.clearcoatNormalMap,e(y.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(y.clearcoatNormalScale),y.side===qn&&S.clearcoatNormalScale.value.negate())),y.dispersion>0&&(S.dispersion.value=y.dispersion),y.iridescence>0&&(S.iridescence.value=y.iridescence,S.iridescenceIOR.value=y.iridescenceIOR,S.iridescenceThicknessMinimum.value=y.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=y.iridescenceThicknessRange[1],y.iridescenceMap&&(S.iridescenceMap.value=y.iridescenceMap,e(y.iridescenceMap,S.iridescenceMapTransform)),y.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=y.iridescenceThicknessMap,e(y.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),y.transmission>0&&(S.transmission.value=y.transmission,S.transmissionSamplerMap.value=E.texture,S.transmissionSamplerSize.value.set(E.width,E.height),y.transmissionMap&&(S.transmissionMap.value=y.transmissionMap,e(y.transmissionMap,S.transmissionMapTransform)),S.thickness.value=y.thickness,y.thicknessMap&&(S.thicknessMap.value=y.thicknessMap,e(y.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=y.attenuationDistance,S.attenuationColor.value.copy(y.attenuationColor)),y.anisotropy>0&&(S.anisotropyVector.value.set(y.anisotropy*Math.cos(y.anisotropyRotation),y.anisotropy*Math.sin(y.anisotropyRotation)),y.anisotropyMap&&(S.anisotropyMap.value=y.anisotropyMap,e(y.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=y.specularIntensity,S.specularColor.value.copy(y.specularColor),y.specularColorMap&&(S.specularColorMap.value=y.specularColorMap,e(y.specularColorMap,S.specularColorMapTransform)),y.specularIntensityMap&&(S.specularIntensityMap.value=y.specularIntensityMap,e(y.specularIntensityMap,S.specularIntensityMapTransform))}function x(S,y){y.matcap&&(S.matcap.value=y.matcap)}function b(S,y){const E=t.get(y).light;S.referencePosition.value.setFromMatrixPosition(E.matrixWorld),S.nearDistance.value=E.shadow.camera.near,S.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function Y2(s,t,e,n){let i={},o={},l=[];const c=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function h(E,A){const T=A.program;n.uniformBlockBinding(E,T)}function f(E,A){let T=i[E.id];T===void 0&&(x(E),T=p(E),i[E.id]=T,E.addEventListener("dispose",S));const L=A.program;n.updateUBOMapping(E,L);const D=t.render.frame;o[E.id]!==D&&(g(E),o[E.id]=D)}function p(E){const A=m();E.__bindingPointIndex=A;const T=s.createBuffer(),L=E.__size,D=E.usage;return s.bindBuffer(s.UNIFORM_BUFFER,T),s.bufferData(s.UNIFORM_BUFFER,L,D),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,A,T),T}function m(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(E){const A=i[E.id],T=E.uniforms,L=E.__cache;s.bindBuffer(s.UNIFORM_BUFFER,A);for(let D=0,P=T.length;D<P;D++){const O=Array.isArray(T[D])?T[D]:[T[D]];for(let C=0,w=O.length;C<w;C++){const H=O[C];if(v(H,D,C,L)===!0){const Q=H.__offset,X=Array.isArray(H.value)?H.value:[H.value];let J=0;for(let at=0;at<X.length;at++){const F=X[at],q=b(F);typeof F=="number"||typeof F=="boolean"?(H.__data[0]=F,s.bufferSubData(s.UNIFORM_BUFFER,Q+J,H.__data)):F.isMatrix3?(H.__data[0]=F.elements[0],H.__data[1]=F.elements[1],H.__data[2]=F.elements[2],H.__data[3]=0,H.__data[4]=F.elements[3],H.__data[5]=F.elements[4],H.__data[6]=F.elements[5],H.__data[7]=0,H.__data[8]=F.elements[6],H.__data[9]=F.elements[7],H.__data[10]=F.elements[8],H.__data[11]=0):(F.toArray(H.__data,J),J+=q.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,Q,H.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function v(E,A,T,L){const D=E.value,P=A+"_"+T;if(L[P]===void 0)return typeof D=="number"||typeof D=="boolean"?L[P]=D:L[P]=D.clone(),!0;{const O=L[P];if(typeof D=="number"||typeof D=="boolean"){if(O!==D)return L[P]=D,!0}else if(O.equals(D)===!1)return O.copy(D),!0}return!1}function x(E){const A=E.uniforms;let T=0;const L=16;for(let P=0,O=A.length;P<O;P++){const C=Array.isArray(A[P])?A[P]:[A[P]];for(let w=0,H=C.length;w<H;w++){const Q=C[w],X=Array.isArray(Q.value)?Q.value:[Q.value];for(let J=0,at=X.length;J<at;J++){const F=X[J],q=b(F),G=T%L,st=G%q.boundary,lt=G+st;T+=st,lt!==0&&L-lt<q.storage&&(T+=L-lt),Q.__data=new Float32Array(q.storage/Float32Array.BYTES_PER_ELEMENT),Q.__offset=T,T+=q.storage}}}const D=T%L;return D>0&&(T+=L-D),E.__size=T,E.__cache={},this}function b(E){const A={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(A.boundary=4,A.storage=4):E.isVector2?(A.boundary=8,A.storage=8):E.isVector3||E.isColor?(A.boundary=16,A.storage=12):E.isVector4?(A.boundary=16,A.storage=16):E.isMatrix3?(A.boundary=48,A.storage=48):E.isMatrix4?(A.boundary=64,A.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),A}function S(E){const A=E.target;A.removeEventListener("dispose",S);const T=l.indexOf(A.__bindingPointIndex);l.splice(T,1),s.deleteBuffer(i[A.id]),delete i[A.id],delete o[A.id]}function y(){for(const E in i)s.deleteBuffer(i[E]);l=[],i={},o={}}return{bind:h,update:f,dispose:y}}class uS{constructor(t={}){const{canvas:e=tx(),context:n=null,depth:i=!0,stencil:o=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:f=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:m=!1,reverseDepthBuffer:g=!1}=t;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=l;const x=new Uint32Array(4),b=new Int32Array(4);let S=null,y=null;const E=[],A=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=rs,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const T=this;let L=!1;this._outputColorSpace=In;let D=0,P=0,O=null,C=-1,w=null;const H=new Ue,Q=new Ue;let X=null;const J=new zt(0);let at=0,F=e.width,q=e.height,G=1,st=null,lt=null;const mt=new Ue(0,0,F,q),wt=new Ue(0,0,F,q);let jt=!1;const $=new wo;let gt=!1,Wt=!1;const Dt=new ae,Vt=new ae,fe=new B,Jt=new Ue,Be={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let xe=!1;function oe(){return O===null?G:1}let I=n;function Tt(U,W){return e.getContext(U,W)}try{const U={alpha:!0,depth:i,stencil:o,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:f,powerPreference:p,failIfMajorPerformanceCaveat:m};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Uh}`),e.addEventListener("webglcontextlost",Ht,!1),e.addEventListener("webglcontextrestored",St,!1),e.addEventListener("webglcontextcreationerror",ht,!1),I===null){const W="webgl2";if(I=Tt(W,U),I===null)throw Tt(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(U){throw console.error("THREE.WebGLRenderer: "+U.message),U}let _t,bt,ut,Ot,vt,It,ue,z,R,K,rt,dt,ot,Zt,Ct,Gt,Yt,ft,Lt,$t,te,At,ne,k;function Nt(){_t=new aR(I),_t.init(),At=new cS(I,_t),bt=new QC(I,_t,t,At),ut=new F2(I,_t),bt.reverseDepthBuffer&&g&&ut.buffers.depth.setReversed(!0),Ot=new lR(I),vt=new A2,It=new H2(I,_t,ut,vt,bt,At,Ot),ue=new tR(T),z=new sR(T),R=new pA(I),ne=new KC(I,R),K=new rR(I,R,Ot,ne),rt=new uR(I,K,R,Ot),Lt=new cR(I,bt,It),Gt=new $C(vt),dt=new T2(T,ue,z,_t,bt,ne,Gt),ot=new q2(T,vt),Zt=new C2,Ct=new P2(_t),ft=new jC(T,ue,z,ut,rt,v,h),Yt=new B2(T,rt,bt),k=new Y2(I,Ot,bt,ut),$t=new JC(I,_t,Ot),te=new oR(I,_t,Ot),Ot.programs=dt.programs,T.capabilities=bt,T.extensions=_t,T.properties=vt,T.renderLists=Zt,T.shadowMap=Yt,T.state=ut,T.info=Ot}Nt();const yt=new W2(T,I);this.xr=yt,this.getContext=function(){return I},this.getContextAttributes=function(){return I.getContextAttributes()},this.forceContextLoss=function(){const U=_t.get("WEBGL_lose_context");U&&U.loseContext()},this.forceContextRestore=function(){const U=_t.get("WEBGL_lose_context");U&&U.restoreContext()},this.getPixelRatio=function(){return G},this.setPixelRatio=function(U){U!==void 0&&(G=U,this.setSize(F,q,!1))},this.getSize=function(U){return U.set(F,q)},this.setSize=function(U,W,et=!0){if(yt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}F=U,q=W,e.width=Math.floor(U*G),e.height=Math.floor(W*G),et===!0&&(e.style.width=U+"px",e.style.height=W+"px"),this.setViewport(0,0,U,W)},this.getDrawingBufferSize=function(U){return U.set(F*G,q*G).floor()},this.setDrawingBufferSize=function(U,W,et){F=U,q=W,G=et,e.width=Math.floor(U*et),e.height=Math.floor(W*et),this.setViewport(0,0,U,W)},this.getCurrentViewport=function(U){return U.copy(H)},this.getViewport=function(U){return U.copy(mt)},this.setViewport=function(U,W,et,nt){U.isVector4?mt.set(U.x,U.y,U.z,U.w):mt.set(U,W,et,nt),ut.viewport(H.copy(mt).multiplyScalar(G).round())},this.getScissor=function(U){return U.copy(wt)},this.setScissor=function(U,W,et,nt){U.isVector4?wt.set(U.x,U.y,U.z,U.w):wt.set(U,W,et,nt),ut.scissor(Q.copy(wt).multiplyScalar(G).round())},this.getScissorTest=function(){return jt},this.setScissorTest=function(U){ut.setScissorTest(jt=U)},this.setOpaqueSort=function(U){st=U},this.setTransparentSort=function(U){lt=U},this.getClearColor=function(U){return U.copy(ft.getClearColor())},this.setClearColor=function(){ft.setClearColor(...arguments)},this.getClearAlpha=function(){return ft.getClearAlpha()},this.setClearAlpha=function(){ft.setClearAlpha(...arguments)},this.clear=function(U=!0,W=!0,et=!0){let nt=0;if(U){let Y=!1;if(O!==null){const xt=O.texture.format;Y=xt===Fh||xt===zh||xt===Kl}if(Y){const xt=O.texture.type,Rt=xt===Li||xt===Os||xt===po||xt===mo||xt===Ih||xt===Oh,kt=ft.getClearColor(),Ft=ft.getClearAlpha(),ie=kt.r,se=kt.g,Kt=kt.b;Rt?(x[0]=ie,x[1]=se,x[2]=Kt,x[3]=Ft,I.clearBufferuiv(I.COLOR,0,x)):(b[0]=ie,b[1]=se,b[2]=Kt,b[3]=Ft,I.clearBufferiv(I.COLOR,0,b))}else nt|=I.COLOR_BUFFER_BIT}W&&(nt|=I.DEPTH_BUFFER_BIT),et&&(nt|=I.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),I.clear(nt)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ht,!1),e.removeEventListener("webglcontextrestored",St,!1),e.removeEventListener("webglcontextcreationerror",ht,!1),ft.dispose(),Zt.dispose(),Ct.dispose(),vt.dispose(),ue.dispose(),z.dispose(),rt.dispose(),ne.dispose(),k.dispose(),dt.dispose(),yt.dispose(),yt.removeEventListener("sessionstart",Uo),yt.removeEventListener("sessionend",dr),Ii.stop()};function Ht(U){U.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),L=!0}function St(){console.log("THREE.WebGLRenderer: Context Restored."),L=!1;const U=Ot.autoReset,W=Yt.enabled,et=Yt.autoUpdate,nt=Yt.needsUpdate,Y=Yt.type;Nt(),Ot.autoReset=U,Yt.enabled=W,Yt.autoUpdate=et,Yt.needsUpdate=nt,Yt.type=Y}function ht(U){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",U.statusMessage)}function Xt(U){const W=U.target;W.removeEventListener("dispose",Xt),re(W)}function re(U){ze(U),vt.remove(U)}function ze(U){const W=vt.get(U).programs;W!==void 0&&(W.forEach(function(et){dt.releaseProgram(et)}),U.isShaderMaterial&&dt.releaseShaderCache(U))}this.renderBufferDirect=function(U,W,et,nt,Y,xt){W===null&&(W=Be);const Rt=Y.isMesh&&Y.matrixWorld.determinant()<0,kt=rc(U,W,et,nt,Y);ut.setMaterial(nt,Rt);let Ft=et.index,ie=1;if(nt.wireframe===!0){if(Ft=K.getWireframeAttribute(et),Ft===void 0)return;ie=2}const se=et.drawRange,Kt=et.attributes.position;let Me=se.start*ie,Le=(se.start+se.count)*ie;xt!==null&&(Me=Math.max(Me,xt.start*ie),Le=Math.min(Le,(xt.start+xt.count)*ie)),Ft!==null?(Me=Math.max(Me,0),Le=Math.min(Le,Ft.count)):Kt!=null&&(Me=Math.max(Me,0),Le=Math.min(Le,Kt.count));const qe=Le-Me;if(qe<0||qe===1/0)return;ne.setup(Y,nt,kt,et,Ft);let Ye,Te=$t;if(Ft!==null&&(Ye=R.get(Ft),Te=te,Te.setIndex(Ye)),Y.isMesh)nt.wireframe===!0?(ut.setLineWidth(nt.wireframeLinewidth*oe()),Te.setMode(I.LINES)):Te.setMode(I.TRIANGLES);else if(Y.isLine){let ee=nt.linewidth;ee===void 0&&(ee=1),ut.setLineWidth(ee*oe()),Y.isLineSegments?Te.setMode(I.LINES):Y.isLineLoop?Te.setMode(I.LINE_LOOP):Te.setMode(I.LINE_STRIP)}else Y.isPoints?Te.setMode(I.POINTS):Y.isSprite&&Te.setMode(I.TRIANGLES);if(Y.isBatchedMesh)if(Y._multiDrawInstances!==null)ho("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Te.renderMultiDrawInstances(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount,Y._multiDrawInstances);else if(_t.get("WEBGL_multi_draw"))Te.renderMultiDraw(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount);else{const ee=Y._multiDrawStarts,on=Y._multiDrawCounts,Re=Y._multiDrawCount,Kn=Ft?R.get(Ft).bytesPerElement:1,ji=vt.get(nt).currentProgram.getUniforms();for(let wn=0;wn<Re;wn++)ji.setValue(I,"_gl_DrawID",wn),Te.render(ee[wn]/Kn,on[wn])}else if(Y.isInstancedMesh)Te.renderInstances(Me,qe,Y.count);else if(et.isInstancedBufferGeometry){const ee=et._maxInstanceCount!==void 0?et._maxInstanceCount:1/0,on=Math.min(et.instanceCount,ee);Te.renderInstances(Me,qe,on)}else Te.render(Me,qe)};function we(U,W,et){U.transparent===!0&&U.side===ss&&U.forceSinglePass===!1?(U.side=qn,U.needsUpdate=!0,Xe(U,W,et),U.side=Ps,U.needsUpdate=!0,Xe(U,W,et),U.side=ss):Xe(U,W,et)}this.compile=function(U,W,et=null){et===null&&(et=U),y=Ct.get(et),y.init(W),A.push(y),et.traverseVisible(function(Y){Y.isLight&&Y.layers.test(W.layers)&&(y.pushLight(Y),Y.castShadow&&y.pushShadow(Y))}),U!==et&&U.traverseVisible(function(Y){Y.isLight&&Y.layers.test(W.layers)&&(y.pushLight(Y),Y.castShadow&&y.pushShadow(Y))}),y.setupLights();const nt=new Set;return U.traverse(function(Y){if(!(Y.isMesh||Y.isPoints||Y.isLine||Y.isSprite))return;const xt=Y.material;if(xt)if(Array.isArray(xt))for(let Rt=0;Rt<xt.length;Rt++){const kt=xt[Rt];we(kt,et,Y),nt.add(kt)}else we(xt,et,Y),nt.add(xt)}),y=A.pop(),nt},this.compileAsync=function(U,W,et=null){const nt=this.compile(U,W,et);return new Promise(Y=>{function xt(){if(nt.forEach(function(Rt){vt.get(Rt).currentProgram.isReady()&&nt.delete(Rt)}),nt.size===0){Y(U);return}setTimeout(xt,10)}_t.get("KHR_parallel_shader_compile")!==null?xt():setTimeout(xt,10)})};let Zn=null;function xi(U){Zn&&Zn(U)}function Uo(){Ii.stop()}function dr(){Ii.start()}const Ii=new sS;Ii.setAnimationLoop(xi),typeof self<"u"&&Ii.setContext(self),this.setAnimationLoop=function(U){Zn=U,yt.setAnimationLoop(U),U===null?Ii.stop():Ii.start()},yt.addEventListener("sessionstart",Uo),yt.addEventListener("sessionend",dr),this.render=function(U,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(L===!0)return;if(U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),yt.enabled===!0&&yt.isPresenting===!0&&(yt.cameraAutoUpdate===!0&&yt.updateCamera(W),W=yt.getCamera()),U.isScene===!0&&U.onBeforeRender(T,U,W,O),y=Ct.get(U,A.length),y.init(W),A.push(y),Vt.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),$.setFromProjectionMatrix(Vt),Wt=this.localClippingEnabled,gt=Gt.init(this.clippingPlanes,Wt),S=Zt.get(U,E.length),S.init(),E.push(S),yt.enabled===!0&&yt.isPresenting===!0){const xt=T.xr.getDepthSensingMesh();xt!==null&&Si(xt,W,-1/0,T.sortObjects)}Si(U,W,0,T.sortObjects),S.finish(),T.sortObjects===!0&&S.sort(st,lt),xe=yt.enabled===!1||yt.isPresenting===!1||yt.hasDepthSensing()===!1,xe&&ft.addToRenderList(S,U),this.info.render.frame++,gt===!0&&Gt.beginShadows();const et=y.state.shadowsArray;Yt.render(et,U,W),gt===!0&&Gt.endShadows(),this.info.autoReset===!0&&this.info.reset();const nt=S.opaque,Y=S.transmissive;if(y.setupLights(),W.isArrayCamera){const xt=W.cameras;if(Y.length>0)for(let Rt=0,kt=xt.length;Rt<kt;Rt++){const Ft=xt[Rt];Oi(nt,Y,U,Ft)}xe&&ft.render(U);for(let Rt=0,kt=xt.length;Rt<kt;Rt++){const Ft=xt[Rt];No(S,U,Ft,Ft.viewport)}}else Y.length>0&&Oi(nt,Y,U,W),xe&&ft.render(U),No(S,U,W);O!==null&&P===0&&(It.updateMultisampleRenderTarget(O),It.updateRenderTargetMipmap(O)),U.isScene===!0&&U.onAfterRender(T,U,W),ne.resetDefaultState(),C=-1,w=null,A.pop(),A.length>0?(y=A[A.length-1],gt===!0&&Gt.setGlobalState(T.clippingPlanes,y.state.camera)):y=null,E.pop(),E.length>0?S=E[E.length-1]:S=null};function Si(U,W,et,nt){if(U.visible===!1)return;if(U.layers.test(W.layers)){if(U.isGroup)et=U.renderOrder;else if(U.isLOD)U.autoUpdate===!0&&U.update(W);else if(U.isLight)y.pushLight(U),U.castShadow&&y.pushShadow(U);else if(U.isSprite){if(!U.frustumCulled||$.intersectsSprite(U)){nt&&Jt.setFromMatrixPosition(U.matrixWorld).applyMatrix4(Vt);const Rt=rt.update(U),kt=U.material;kt.visible&&S.push(U,Rt,kt,et,Jt.z,null)}}else if((U.isMesh||U.isLine||U.isPoints)&&(!U.frustumCulled||$.intersectsObject(U))){const Rt=rt.update(U),kt=U.material;if(nt&&(U.boundingSphere!==void 0?(U.boundingSphere===null&&U.computeBoundingSphere(),Jt.copy(U.boundingSphere.center)):(Rt.boundingSphere===null&&Rt.computeBoundingSphere(),Jt.copy(Rt.boundingSphere.center)),Jt.applyMatrix4(U.matrixWorld).applyMatrix4(Vt)),Array.isArray(kt)){const Ft=Rt.groups;for(let ie=0,se=Ft.length;ie<se;ie++){const Kt=Ft[ie],Me=kt[Kt.materialIndex];Me&&Me.visible&&S.push(U,Rt,Me,et,Jt.z,Kt)}}else kt.visible&&S.push(U,Rt,kt,et,Jt.z,null)}}const xt=U.children;for(let Rt=0,kt=xt.length;Rt<kt;Rt++)Si(xt[Rt],W,et,nt)}function No(U,W,et,nt){const Y=U.opaque,xt=U.transmissive,Rt=U.transparent;y.setupLightsView(et),gt===!0&&Gt.setGlobalState(T.clippingPlanes,et),nt&&ut.viewport(H.copy(nt)),Y.length>0&&jn(Y,W,et),xt.length>0&&jn(xt,W,et),Rt.length>0&&jn(Rt,W,et),ut.buffers.depth.setTest(!0),ut.buffers.depth.setMask(!0),ut.buffers.color.setMask(!0),ut.setPolygonOffset(!1)}function Oi(U,W,et,nt){if((et.isScene===!0?et.overrideMaterial:null)!==null)return;y.state.transmissionRenderTarget[nt.id]===void 0&&(y.state.transmissionRenderTarget[nt.id]=new ls(1,1,{generateMipmaps:!0,type:_t.has("EXT_color_buffer_half_float")||_t.has("EXT_color_buffer_float")?To:Li,minFilter:as,samples:4,stencilBuffer:o,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Ae.workingColorSpace}));const xt=y.state.transmissionRenderTarget[nt.id],Rt=nt.viewport||H;xt.setSize(Rt.z*T.transmissionResolutionScale,Rt.w*T.transmissionResolutionScale);const kt=T.getRenderTarget();T.setRenderTarget(xt),T.getClearColor(J),at=T.getClearAlpha(),at<1&&T.setClearColor(16777215,.5),T.clear(),xe&&ft.render(et);const Ft=T.toneMapping;T.toneMapping=rs;const ie=nt.viewport;if(nt.viewport!==void 0&&(nt.viewport=void 0),y.setupLightsView(nt),gt===!0&&Gt.setGlobalState(T.clippingPlanes,nt),jn(U,et,nt),It.updateMultisampleRenderTarget(xt),It.updateRenderTargetMipmap(xt),_t.has("WEBGL_multisampled_render_to_texture")===!1){let se=!1;for(let Kt=0,Me=W.length;Kt<Me;Kt++){const Le=W[Kt],qe=Le.object,Ye=Le.geometry,Te=Le.material,ee=Le.group;if(Te.side===ss&&qe.layers.test(nt.layers)){const on=Te.side;Te.side=qn,Te.needsUpdate=!0,_a(qe,et,nt,Ye,Te,ee),Te.side=on,Te.needsUpdate=!0,se=!0}}se===!0&&(It.updateMultisampleRenderTarget(xt),It.updateRenderTargetMipmap(xt))}T.setRenderTarget(kt),T.setClearColor(J,at),ie!==void 0&&(nt.viewport=ie),T.toneMapping=Ft}function jn(U,W,et){const nt=W.isScene===!0?W.overrideMaterial:null;for(let Y=0,xt=U.length;Y<xt;Y++){const Rt=U[Y],kt=Rt.object,Ft=Rt.geometry,ie=Rt.group;let se=Rt.material;se.allowOverride===!0&&nt!==null&&(se=nt),kt.layers.test(et.layers)&&_a(kt,W,et,Ft,se,ie)}}function _a(U,W,et,nt,Y,xt){U.onBeforeRender(T,W,et,nt,Y,xt),U.modelViewMatrix.multiplyMatrices(et.matrixWorldInverse,U.matrixWorld),U.normalMatrix.getNormalMatrix(U.modelViewMatrix),Y.onBeforeRender(T,W,et,nt,U,xt),Y.transparent===!0&&Y.side===ss&&Y.forceSinglePass===!1?(Y.side=qn,Y.needsUpdate=!0,T.renderBufferDirect(et,W,nt,Y,U,xt),Y.side=Ps,Y.needsUpdate=!0,T.renderBufferDirect(et,W,nt,Y,U,xt),Y.side=ss):T.renderBufferDirect(et,W,nt,Y,U,xt),U.onAfterRender(T,W,et,nt,Y,xt)}function Xe(U,W,et){W.isScene!==!0&&(W=Be);const nt=vt.get(U),Y=y.state.lights,xt=y.state.shadowsArray,Rt=Y.state.version,kt=dt.getParameters(U,Y.state,xt,W,et),Ft=dt.getProgramCacheKey(kt);let ie=nt.programs;nt.environment=U.isMeshStandardMaterial?W.environment:null,nt.fog=W.fog,nt.envMap=(U.isMeshStandardMaterial?z:ue).get(U.envMap||nt.environment),nt.envMapRotation=nt.environment!==null&&U.envMap===null?W.environmentRotation:U.envMapRotation,ie===void 0&&(U.addEventListener("dispose",Xt),ie=new Map,nt.programs=ie);let se=ie.get(Ft);if(se!==void 0){if(nt.currentProgram===se&&nt.lightsStateVersion===Rt)return mr(U,kt),se}else kt.uniforms=dt.getUniforms(U),U.onBeforeCompile(kt,T),se=dt.acquireProgram(kt,Ft),ie.set(Ft,se),nt.uniforms=kt.uniforms;const Kt=nt.uniforms;return(!U.isShaderMaterial&&!U.isRawShaderMaterial||U.clipping===!0)&&(Kt.clippingPlanes=Gt.uniform),mr(U,kt),nt.needsLights=df(U),nt.lightsStateVersion=Rt,nt.needsLights&&(Kt.ambientLightColor.value=Y.state.ambient,Kt.lightProbe.value=Y.state.probe,Kt.directionalLights.value=Y.state.directional,Kt.directionalLightShadows.value=Y.state.directionalShadow,Kt.spotLights.value=Y.state.spot,Kt.spotLightShadows.value=Y.state.spotShadow,Kt.rectAreaLights.value=Y.state.rectArea,Kt.ltc_1.value=Y.state.rectAreaLTC1,Kt.ltc_2.value=Y.state.rectAreaLTC2,Kt.pointLights.value=Y.state.point,Kt.pointLightShadows.value=Y.state.pointShadow,Kt.hemisphereLights.value=Y.state.hemi,Kt.directionalShadowMap.value=Y.state.directionalShadowMap,Kt.directionalShadowMatrix.value=Y.state.directionalShadowMatrix,Kt.spotShadowMap.value=Y.state.spotShadowMap,Kt.spotLightMatrix.value=Y.state.spotLightMatrix,Kt.spotLightMap.value=Y.state.spotLightMap,Kt.pointShadowMap.value=Y.state.pointShadowMap,Kt.pointShadowMatrix.value=Y.state.pointShadowMatrix),nt.currentProgram=se,nt.uniformsList=null,se}function pr(U){if(U.uniformsList===null){const W=U.currentProgram.getUniforms();U.uniformsList=zu.seqWithValue(W.seq,U.uniforms)}return U.uniformsList}function mr(U,W){const et=vt.get(U);et.outputColorSpace=W.outputColorSpace,et.batching=W.batching,et.batchingColor=W.batchingColor,et.instancing=W.instancing,et.instancingColor=W.instancingColor,et.instancingMorph=W.instancingMorph,et.skinning=W.skinning,et.morphTargets=W.morphTargets,et.morphNormals=W.morphNormals,et.morphColors=W.morphColors,et.morphTargetsCount=W.morphTargetsCount,et.numClippingPlanes=W.numClippingPlanes,et.numIntersection=W.numClipIntersection,et.vertexAlphas=W.vertexAlphas,et.vertexTangents=W.vertexTangents,et.toneMapping=W.toneMapping}function rc(U,W,et,nt,Y){W.isScene!==!0&&(W=Be),It.resetTextureUnits();const xt=W.fog,Rt=nt.isMeshStandardMaterial?W.environment:null,kt=O===null?T.outputColorSpace:O.isXRRenderTarget===!0?O.texture.colorSpace:fa,Ft=(nt.isMeshStandardMaterial?z:ue).get(nt.envMap||Rt),ie=nt.vertexColors===!0&&!!et.attributes.color&&et.attributes.color.itemSize===4,se=!!et.attributes.tangent&&(!!nt.normalMap||nt.anisotropy>0),Kt=!!et.morphAttributes.position,Me=!!et.morphAttributes.normal,Le=!!et.morphAttributes.color;let qe=rs;nt.toneMapped&&(O===null||O.isXRRenderTarget===!0)&&(qe=T.toneMapping);const Ye=et.morphAttributes.position||et.morphAttributes.normal||et.morphAttributes.color,Te=Ye!==void 0?Ye.length:0,ee=vt.get(nt),on=y.state.lights;if(gt===!0&&(Wt===!0||U!==w)){const Sn=U===w&&nt.id===C;Gt.setState(nt,U,Sn)}let Re=!1;nt.version===ee.__version?(ee.needsLights&&ee.lightsStateVersion!==on.state.version||ee.outputColorSpace!==kt||Y.isBatchedMesh&&ee.batching===!1||!Y.isBatchedMesh&&ee.batching===!0||Y.isBatchedMesh&&ee.batchingColor===!0&&Y.colorTexture===null||Y.isBatchedMesh&&ee.batchingColor===!1&&Y.colorTexture!==null||Y.isInstancedMesh&&ee.instancing===!1||!Y.isInstancedMesh&&ee.instancing===!0||Y.isSkinnedMesh&&ee.skinning===!1||!Y.isSkinnedMesh&&ee.skinning===!0||Y.isInstancedMesh&&ee.instancingColor===!0&&Y.instanceColor===null||Y.isInstancedMesh&&ee.instancingColor===!1&&Y.instanceColor!==null||Y.isInstancedMesh&&ee.instancingMorph===!0&&Y.morphTexture===null||Y.isInstancedMesh&&ee.instancingMorph===!1&&Y.morphTexture!==null||ee.envMap!==Ft||nt.fog===!0&&ee.fog!==xt||ee.numClippingPlanes!==void 0&&(ee.numClippingPlanes!==Gt.numPlanes||ee.numIntersection!==Gt.numIntersection)||ee.vertexAlphas!==ie||ee.vertexTangents!==se||ee.morphTargets!==Kt||ee.morphNormals!==Me||ee.morphColors!==Le||ee.toneMapping!==qe||ee.morphTargetsCount!==Te)&&(Re=!0):(Re=!0,ee.__version=nt.version);let Kn=ee.currentProgram;Re===!0&&(Kn=Xe(nt,W,Y));let ji=!1,wn=!1,zs=!1;const We=Kn.getUniforms(),Fn=ee.uniforms;if(ut.useProgram(Kn.program)&&(ji=!0,wn=!0,zs=!0),nt.id!==C&&(C=nt.id,wn=!0),ji||w!==U){ut.buffers.depth.getReversed()?(Dt.copy(U.projectionMatrix),IE(Dt),OE(Dt),We.setValue(I,"projectionMatrix",Dt)):We.setValue(I,"projectionMatrix",U.projectionMatrix),We.setValue(I,"viewMatrix",U.matrixWorldInverse);const Mn=We.map.cameraPosition;Mn!==void 0&&Mn.setValue(I,fe.setFromMatrixPosition(U.matrixWorld)),bt.logarithmicDepthBuffer&&We.setValue(I,"logDepthBufFC",2/(Math.log(U.far+1)/Math.LN2)),(nt.isMeshPhongMaterial||nt.isMeshToonMaterial||nt.isMeshLambertMaterial||nt.isMeshBasicMaterial||nt.isMeshStandardMaterial||nt.isShaderMaterial)&&We.setValue(I,"isOrthographic",U.isOrthographicCamera===!0),w!==U&&(w=U,wn=!0,zs=!0)}if(Y.isSkinnedMesh){We.setOptional(I,Y,"bindMatrix"),We.setOptional(I,Y,"bindMatrixInverse");const Sn=Y.skeleton;Sn&&(Sn.boneTexture===null&&Sn.computeBoneTexture(),We.setValue(I,"boneTexture",Sn.boneTexture,It))}Y.isBatchedMesh&&(We.setOptional(I,Y,"batchingTexture"),We.setValue(I,"batchingTexture",Y._matricesTexture,It),We.setOptional(I,Y,"batchingIdTexture"),We.setValue(I,"batchingIdTexture",Y._indirectTexture,It),We.setOptional(I,Y,"batchingColorTexture"),Y._colorsTexture!==null&&We.setValue(I,"batchingColorTexture",Y._colorsTexture,It));const Hn=et.morphAttributes;if((Hn.position!==void 0||Hn.normal!==void 0||Hn.color!==void 0)&&Lt.update(Y,et,Kn),(wn||ee.receiveShadow!==Y.receiveShadow)&&(ee.receiveShadow=Y.receiveShadow,We.setValue(I,"receiveShadow",Y.receiveShadow)),nt.isMeshGouraudMaterial&&nt.envMap!==null&&(Fn.envMap.value=Ft,Fn.flipEnvMap.value=Ft.isCubeTexture&&Ft.isRenderTargetTexture===!1?-1:1),nt.isMeshStandardMaterial&&nt.envMap===null&&W.environment!==null&&(Fn.envMapIntensity.value=W.environmentIntensity),wn&&(We.setValue(I,"toneMappingExposure",T.toneMappingExposure),ee.needsLights&&oc(Fn,zs),xt&&nt.fog===!0&&ot.refreshFogUniforms(Fn,xt),ot.refreshMaterialUniforms(Fn,nt,G,q,y.state.transmissionRenderTarget[U.id]),zu.upload(I,pr(ee),Fn,It)),nt.isShaderMaterial&&nt.uniformsNeedUpdate===!0&&(zu.upload(I,pr(ee),Fn,It),nt.uniformsNeedUpdate=!1),nt.isSpriteMaterial&&We.setValue(I,"center",Y.center),We.setValue(I,"modelViewMatrix",Y.modelViewMatrix),We.setValue(I,"normalMatrix",Y.normalMatrix),We.setValue(I,"modelMatrix",Y.matrixWorld),nt.isShaderMaterial||nt.isRawShaderMaterial){const Sn=nt.uniformsGroups;for(let Mn=0,Ki=Sn.length;Mn<Ki;Mn++){const Ji=Sn[Mn];k.update(Ji,Kn),k.bind(Ji,Kn)}}return Kn}function oc(U,W){U.ambientLightColor.needsUpdate=W,U.lightProbe.needsUpdate=W,U.directionalLights.needsUpdate=W,U.directionalLightShadows.needsUpdate=W,U.pointLights.needsUpdate=W,U.pointLightShadows.needsUpdate=W,U.spotLights.needsUpdate=W,U.spotLightShadows.needsUpdate=W,U.rectAreaLights.needsUpdate=W,U.hemisphereLights.needsUpdate=W}function df(U){return U.isMeshLambertMaterial||U.isMeshToonMaterial||U.isMeshPhongMaterial||U.isMeshStandardMaterial||U.isShadowMaterial||U.isShaderMaterial&&U.lights===!0}this.getActiveCubeFace=function(){return D},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return O},this.setRenderTargetTextures=function(U,W,et){const nt=vt.get(U);nt.__autoAllocateDepthBuffer=U.resolveDepthBuffer===!1,nt.__autoAllocateDepthBuffer===!1&&(nt.__useRenderToTexture=!1),vt.get(U.texture).__webglTexture=W,vt.get(U.depthTexture).__webglTexture=nt.__autoAllocateDepthBuffer?void 0:et,nt.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(U,W){const et=vt.get(U);et.__webglFramebuffer=W,et.__useDefaultFramebuffer=W===void 0};const Lo=I.createFramebuffer();this.setRenderTarget=function(U,W=0,et=0){O=U,D=W,P=et;let nt=!0,Y=null,xt=!1,Rt=!1;if(U){const Ft=vt.get(U);if(Ft.__useDefaultFramebuffer!==void 0)ut.bindFramebuffer(I.FRAMEBUFFER,null),nt=!1;else if(Ft.__webglFramebuffer===void 0)It.setupRenderTarget(U);else if(Ft.__hasExternalTextures)It.rebindTextures(U,vt.get(U.texture).__webglTexture,vt.get(U.depthTexture).__webglTexture);else if(U.depthBuffer){const Kt=U.depthTexture;if(Ft.__boundDepthTexture!==Kt){if(Kt!==null&&vt.has(Kt)&&(U.width!==Kt.image.width||U.height!==Kt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");It.setupDepthRenderbuffer(U)}}const ie=U.texture;(ie.isData3DTexture||ie.isDataArrayTexture||ie.isCompressedArrayTexture)&&(Rt=!0);const se=vt.get(U).__webglFramebuffer;U.isWebGLCubeRenderTarget?(Array.isArray(se[W])?Y=se[W][et]:Y=se[W],xt=!0):U.samples>0&&It.useMultisampledRTT(U)===!1?Y=vt.get(U).__webglMultisampledFramebuffer:Array.isArray(se)?Y=se[et]:Y=se,H.copy(U.viewport),Q.copy(U.scissor),X=U.scissorTest}else H.copy(mt).multiplyScalar(G).floor(),Q.copy(wt).multiplyScalar(G).floor(),X=jt;if(et!==0&&(Y=Lo),ut.bindFramebuffer(I.FRAMEBUFFER,Y)&&nt&&ut.drawBuffers(U,Y),ut.viewport(H),ut.scissor(Q),ut.setScissorTest(X),xt){const Ft=vt.get(U.texture);I.framebufferTexture2D(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,I.TEXTURE_CUBE_MAP_POSITIVE_X+W,Ft.__webglTexture,et)}else if(Rt){const Ft=vt.get(U.texture),ie=W;I.framebufferTextureLayer(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,Ft.__webglTexture,et,ie)}else if(U!==null&&et!==0){const Ft=vt.get(U.texture);I.framebufferTexture2D(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,I.TEXTURE_2D,Ft.__webglTexture,et)}C=-1},this.readRenderTargetPixels=function(U,W,et,nt,Y,xt,Rt,kt=0){if(!(U&&U.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ft=vt.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&Rt!==void 0&&(Ft=Ft[Rt]),Ft){ut.bindFramebuffer(I.FRAMEBUFFER,Ft);try{const ie=U.textures[kt],se=ie.format,Kt=ie.type;if(!bt.textureFormatReadable(se)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!bt.textureTypeReadable(Kt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=U.width-nt&&et>=0&&et<=U.height-Y&&(U.textures.length>1&&I.readBuffer(I.COLOR_ATTACHMENT0+kt),I.readPixels(W,et,nt,Y,At.convert(se),At.convert(Kt),xt))}finally{const ie=O!==null?vt.get(O).__webglFramebuffer:null;ut.bindFramebuffer(I.FRAMEBUFFER,ie)}}},this.readRenderTargetPixelsAsync=async function(U,W,et,nt,Y,xt,Rt,kt=0){if(!(U&&U.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ft=vt.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&Rt!==void 0&&(Ft=Ft[Rt]),Ft)if(W>=0&&W<=U.width-nt&&et>=0&&et<=U.height-Y){ut.bindFramebuffer(I.FRAMEBUFFER,Ft);const ie=U.textures[kt],se=ie.format,Kt=ie.type;if(!bt.textureFormatReadable(se))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!bt.textureTypeReadable(Kt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Me=I.createBuffer();I.bindBuffer(I.PIXEL_PACK_BUFFER,Me),I.bufferData(I.PIXEL_PACK_BUFFER,xt.byteLength,I.STREAM_READ),U.textures.length>1&&I.readBuffer(I.COLOR_ATTACHMENT0+kt),I.readPixels(W,et,nt,Y,At.convert(se),At.convert(Kt),0);const Le=O!==null?vt.get(O).__webglFramebuffer:null;ut.bindFramebuffer(I.FRAMEBUFFER,Le);const qe=I.fenceSync(I.SYNC_GPU_COMMANDS_COMPLETE,0);return I.flush(),await PE(I,qe,4),I.bindBuffer(I.PIXEL_PACK_BUFFER,Me),I.getBufferSubData(I.PIXEL_PACK_BUFFER,0,xt),I.deleteBuffer(Me),I.deleteSync(qe),xt}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(U,W=null,et=0){const nt=Math.pow(2,-et),Y=Math.floor(U.image.width*nt),xt=Math.floor(U.image.height*nt),Rt=W!==null?W.x:0,kt=W!==null?W.y:0;It.setTexture2D(U,0),I.copyTexSubImage2D(I.TEXTURE_2D,et,0,0,Rt,kt,Y,xt),ut.unbindTexture()};const Po=I.createFramebuffer(),Io=I.createFramebuffer();this.copyTextureToTexture=function(U,W,et=null,nt=null,Y=0,xt=null){xt===null&&(Y!==0?(ho("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),xt=Y,Y=0):xt=0);let Rt,kt,Ft,ie,se,Kt,Me,Le,qe;const Ye=U.isCompressedTexture?U.mipmaps[xt]:U.image;if(et!==null)Rt=et.max.x-et.min.x,kt=et.max.y-et.min.y,Ft=et.isBox3?et.max.z-et.min.z:1,ie=et.min.x,se=et.min.y,Kt=et.isBox3?et.min.z:0;else{const Hn=Math.pow(2,-Y);Rt=Math.floor(Ye.width*Hn),kt=Math.floor(Ye.height*Hn),U.isDataArrayTexture?Ft=Ye.depth:U.isData3DTexture?Ft=Math.floor(Ye.depth*Hn):Ft=1,ie=0,se=0,Kt=0}nt!==null?(Me=nt.x,Le=nt.y,qe=nt.z):(Me=0,Le=0,qe=0);const Te=At.convert(W.format),ee=At.convert(W.type);let on;W.isData3DTexture?(It.setTexture3D(W,0),on=I.TEXTURE_3D):W.isDataArrayTexture||W.isCompressedArrayTexture?(It.setTexture2DArray(W,0),on=I.TEXTURE_2D_ARRAY):(It.setTexture2D(W,0),on=I.TEXTURE_2D),I.pixelStorei(I.UNPACK_FLIP_Y_WEBGL,W.flipY),I.pixelStorei(I.UNPACK_PREMULTIPLY_ALPHA_WEBGL,W.premultiplyAlpha),I.pixelStorei(I.UNPACK_ALIGNMENT,W.unpackAlignment);const Re=I.getParameter(I.UNPACK_ROW_LENGTH),Kn=I.getParameter(I.UNPACK_IMAGE_HEIGHT),ji=I.getParameter(I.UNPACK_SKIP_PIXELS),wn=I.getParameter(I.UNPACK_SKIP_ROWS),zs=I.getParameter(I.UNPACK_SKIP_IMAGES);I.pixelStorei(I.UNPACK_ROW_LENGTH,Ye.width),I.pixelStorei(I.UNPACK_IMAGE_HEIGHT,Ye.height),I.pixelStorei(I.UNPACK_SKIP_PIXELS,ie),I.pixelStorei(I.UNPACK_SKIP_ROWS,se),I.pixelStorei(I.UNPACK_SKIP_IMAGES,Kt);const We=U.isDataArrayTexture||U.isData3DTexture,Fn=W.isDataArrayTexture||W.isData3DTexture;if(U.isDepthTexture){const Hn=vt.get(U),Sn=vt.get(W),Mn=vt.get(Hn.__renderTarget),Ki=vt.get(Sn.__renderTarget);ut.bindFramebuffer(I.READ_FRAMEBUFFER,Mn.__webglFramebuffer),ut.bindFramebuffer(I.DRAW_FRAMEBUFFER,Ki.__webglFramebuffer);for(let Ji=0;Ji<Ft;Ji++)We&&(I.framebufferTextureLayer(I.READ_FRAMEBUFFER,I.COLOR_ATTACHMENT0,vt.get(U).__webglTexture,Y,Kt+Ji),I.framebufferTextureLayer(I.DRAW_FRAMEBUFFER,I.COLOR_ATTACHMENT0,vt.get(W).__webglTexture,xt,qe+Ji)),I.blitFramebuffer(ie,se,Rt,kt,Me,Le,Rt,kt,I.DEPTH_BUFFER_BIT,I.NEAREST);ut.bindFramebuffer(I.READ_FRAMEBUFFER,null),ut.bindFramebuffer(I.DRAW_FRAMEBUFFER,null)}else if(Y!==0||U.isRenderTargetTexture||vt.has(U)){const Hn=vt.get(U),Sn=vt.get(W);ut.bindFramebuffer(I.READ_FRAMEBUFFER,Po),ut.bindFramebuffer(I.DRAW_FRAMEBUFFER,Io);for(let Mn=0;Mn<Ft;Mn++)We?I.framebufferTextureLayer(I.READ_FRAMEBUFFER,I.COLOR_ATTACHMENT0,Hn.__webglTexture,Y,Kt+Mn):I.framebufferTexture2D(I.READ_FRAMEBUFFER,I.COLOR_ATTACHMENT0,I.TEXTURE_2D,Hn.__webglTexture,Y),Fn?I.framebufferTextureLayer(I.DRAW_FRAMEBUFFER,I.COLOR_ATTACHMENT0,Sn.__webglTexture,xt,qe+Mn):I.framebufferTexture2D(I.DRAW_FRAMEBUFFER,I.COLOR_ATTACHMENT0,I.TEXTURE_2D,Sn.__webglTexture,xt),Y!==0?I.blitFramebuffer(ie,se,Rt,kt,Me,Le,Rt,kt,I.COLOR_BUFFER_BIT,I.NEAREST):Fn?I.copyTexSubImage3D(on,xt,Me,Le,qe+Mn,ie,se,Rt,kt):I.copyTexSubImage2D(on,xt,Me,Le,ie,se,Rt,kt);ut.bindFramebuffer(I.READ_FRAMEBUFFER,null),ut.bindFramebuffer(I.DRAW_FRAMEBUFFER,null)}else Fn?U.isDataTexture||U.isData3DTexture?I.texSubImage3D(on,xt,Me,Le,qe,Rt,kt,Ft,Te,ee,Ye.data):W.isCompressedArrayTexture?I.compressedTexSubImage3D(on,xt,Me,Le,qe,Rt,kt,Ft,Te,Ye.data):I.texSubImage3D(on,xt,Me,Le,qe,Rt,kt,Ft,Te,ee,Ye):U.isDataTexture?I.texSubImage2D(I.TEXTURE_2D,xt,Me,Le,Rt,kt,Te,ee,Ye.data):U.isCompressedTexture?I.compressedTexSubImage2D(I.TEXTURE_2D,xt,Me,Le,Ye.width,Ye.height,Te,Ye.data):I.texSubImage2D(I.TEXTURE_2D,xt,Me,Le,Rt,kt,Te,ee,Ye);I.pixelStorei(I.UNPACK_ROW_LENGTH,Re),I.pixelStorei(I.UNPACK_IMAGE_HEIGHT,Kn),I.pixelStorei(I.UNPACK_SKIP_PIXELS,ji),I.pixelStorei(I.UNPACK_SKIP_ROWS,wn),I.pixelStorei(I.UNPACK_SKIP_IMAGES,zs),xt===0&&W.generateMipmaps&&I.generateMipmap(on),ut.unbindTexture()},this.copyTextureToTexture3D=function(U,W,et=null,nt=null,Y=0){return ho('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(U,W,et,nt,Y)},this.initRenderTarget=function(U){vt.get(U).__webglFramebuffer===void 0&&It.setupRenderTarget(U)},this.initTexture=function(U){U.isCubeTexture?It.setTextureCube(U,0):U.isData3DTexture?It.setTexture3D(U,0):U.isDataArrayTexture||U.isCompressedArrayTexture?It.setTexture2DArray(U,0):It.setTexture2D(U,0),ut.unbindTexture()},this.resetState=function(){D=0,P=0,O=null,ut.reset(),ne.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ni}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=Ae._getDrawingBufferColorSpace(t),e.unpackColorSpace=Ae._getUnpackColorSpace()}}const Z2=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:hm,AddEquation:la,AddOperation:Ny,AdditiveAnimationBlendMode:xm,AdditiveBlending:kp,AgXToneMapping:By,AlphaFormat:gm,AlwaysCompare:Qy,AlwaysDepth:Wu,AlwaysStencilFunc:Yp,AmbientLight:qx,AnimationAction:eS,AnimationClip:ql,AnimationLoader:lT,AnimationMixer:BT,AnimationObjectGroup:IT,AnimationUtils:sT,ArcCurve:vx,ArrayCamera:Qx,ArrowHelper:aA,AttachedBindMode:qp,Audio:$x,AudioAnalyser:TT,AudioContext:Xm,AudioListener:MT,AudioLoader:yT,AxesHelper:rA,BackSide:qn,BasicDepthPacking:ky,BasicShadowMap:fy,BatchedMesh:fx,Bone:Cm,BooleanKeyframeTrack:hr,Box2:XT,Box3:Bn,Box3Helper:iA,BoxGeometry:ur,BoxHelper:nA,BufferAttribute:ke,BufferGeometry:_e,BufferGeometryLoader:Jx,ByteType:dm,Cache:Us,Camera:kh,CameraHelper:eA,CanvasTexture:w1,CapsuleGeometry:Kh,CatmullRomCurve3:_x,CineonToneMapping:Iy,CircleGeometry:Jh,ClampToEdgeWrapping:Ui,Clock:qm,Color:zt,ColorKeyframeTrack:Gm,ColorManagement:Ae,CompressedArrayTexture:T1,CompressedCubeTexture:A1,CompressedTexture:jh,CompressedTextureLoader:cT,ConeGeometry:$l,ConstantAlphaFactor:Ry,ConstantColorFactor:wy,Controls:lA,CubeCamera:ax,CubeReflectionMapping:Is,CubeRefractionMapping:ha,CubeTexture:Jl,CubeTextureLoader:uT,CubeUVReflectionMapping:Eo,CubicBezierCurve:Nm,CubicBezierCurve3:yx,CubicInterpolant:zx,CullFaceBack:Gp,CullFaceFront:hy,CullFaceFrontBack:Lb,CullFaceNone:uy,Curve:Zi,CurvePath:Sx,CustomBlending:dy,CustomToneMapping:Oy,CylinderGeometry:Ql,Cylindrical:WT,Data3DTexture:Gh,DataArrayTexture:Vh,DataTexture:os,DataTextureLoader:hT,DataUtils:JE,DecrementStencilOp:Yb,DecrementWrapStencilOp:jb,DefaultLoadingManager:Vx,DepthFormat:go,DepthStencilFormat:vo,DepthTexture:Dm,DetachedBindMode:Fy,DirectionalLight:Xx,DirectionalLightHelper:tA,DiscreteInterpolant:Fx,DodecahedronGeometry:Qh,DoubleSide:ss,DstAlphaFactor:My,DstColorFactor:Ey,DynamicCopyUsage:uE,DynamicDrawUsage:sE,DynamicReadUsage:oE,EdgesGeometry:gx,EllipseCurve:$h,EqualCompare:Zy,EqualDepth:qu,EqualStencilFunc:$b,EquirectangularReflectionMapping:Ul,EquirectangularRefractionMapping:Nl,Euler:yi,EventDispatcher:cs,ExtrudeGeometry:tf,FileLoader:Bs,Float16BufferAttribute:s1,Float32BufferAttribute:qt,FloatType:ii,Fog:Xh,FogExp2:Wh,FramebufferTexture:E1,FrontSide:Ps,Frustum:wo,FrustumArray:Zh,GLBufferAttribute:GT,GLSL1:fE,GLSL3:Zp,GreaterCompare:jy,GreaterDepth:Zu,GreaterEqualCompare:Jy,GreaterEqualDepth:Yu,GreaterEqualStencilFunc:iE,GreaterStencilFunc:eE,GridHelper:QT,Group:co,HalfFloatType:To,HemisphereLight:Gx,HemisphereLightHelper:JT,IcosahedronGeometry:ef,ImageBitmapLoader:_T,ImageLoader:Yl,ImageUtils:ex,IncrementStencilOp:qb,IncrementWrapStencilOp:Zb,InstancedBufferAttribute:So,InstancedBufferGeometry:Kx,InstancedInterleavedBuffer:VT,InstancedMesh:hx,Int16BufferAttribute:n1,Int32BufferAttribute:i1,Int8BufferAttribute:$E,IntType:Ph,InterleavedBuffer:qh,InterleavedBufferAttribute:or,Interpolant:nc,InterpolateDiscrete:Il,InterpolateLinear:Mh,InterpolateSmooth:Ou,InterpolationSamplingMode:mE,InterpolationSamplingType:pE,InvertStencilOp:Kb,KeepStencilOp:Ja,KeyframeTrack:Pi,LOD:cx,LatheGeometry:nf,Layers:yo,LessCompare:Yy,LessDepth:Xu,LessEqualCompare:Sm,LessEqualDepth:rr,LessEqualStencilFunc:tE,LessStencilFunc:Qb,Light:va,LightProbe:jx,Line:da,Line3:qT,LineBasicMaterial:Yn,LineCurve:Lm,LineCurve3:xx,LineDashedMaterial:Ix,LineLoop:dx,LineSegments:us,LinearFilter:dn,LinearInterpolant:Vm,LinearMipMapLinearFilter:Bb,LinearMipMapNearestFilter:Ob,LinearMipmapLinearFilter:as,LinearMipmapNearestFilter:Sl,LinearSRGBColorSpace:fa,LinearToneMapping:Ly,LinearTransfer:Bl,Loader:ai,LoaderUtils:$p,LoadingManager:km,LoopOnce:Hy,LoopPingPong:Gy,LoopRepeat:Vy,MOUSE:Ub,Material:zn,MaterialLoader:uf,MathUtils:NE,Matrix2:Km,Matrix3:pe,Matrix4:ae,MaxEquation:vy,Mesh:hn,MeshBasicMaterial:ma,MeshDepthMaterial:zm,MeshDistanceMaterial:Fm,MeshLambertMaterial:Lx,MeshMatcapMaterial:Px,MeshNormalMaterial:Nx,MeshPhongMaterial:Dx,MeshPhysicalMaterial:Rx,MeshStandardMaterial:Bm,MeshToonMaterial:Ux,MinEquation:gy,MirroredRepeatWrapping:Pl,MixOperation:Uy,MultiplyBlending:Xp,MultiplyOperation:jl,NearestFilter:Tn,NearestMipMapLinearFilter:Ib,NearestMipMapNearestFilter:Pb,NearestMipmapLinearFilter:oo,NearestMipmapNearestFilter:fm,NeutralToneMapping:zy,NeverCompare:qy,NeverDepth:ku,NeverStencilFunc:Jb,NoBlending:Ns,NoColorSpace:Rs,NoToneMapping:rs,NormalAnimationBlendMode:Hh,NormalBlending:ir,NotEqualCompare:Ky,NotEqualDepth:ju,NotEqualStencilFunc:nE,NumberKeyframeTrack:Wl,Object3D:Ne,ObjectLoader:gT,ObjectSpaceNormalMap:Xy,OctahedronGeometry:tc,OneFactor:yy,OneMinusConstantAlphaFactor:Dy,OneMinusConstantColorFactor:Cy,OneMinusDstAlphaFactor:by,OneMinusDstColorFactor:Ty,OneMinusSrcAlphaFactor:Gu,OneMinusSrcColorFactor:Sy,OrthographicCamera:sc,PCFShadowMap:Nh,PCFSoftShadowMap:xl,PMREMGenerator:nm,Path:Ah,PerspectiveCamera:xn,Plane:oa,PlaneGeometry:Co,PlaneHelper:sA,PointLight:Wx,PointLightHelper:jT,Points:px,PointsMaterial:Rm,PolarGridHelper:$T,PolyhedronGeometry:ga,PositionalAudio:ET,PropertyBinding:De,PropertyMixer:tS,QuadraticBezierCurve:Pm,QuadraticBezierCurve3:Im,Quaternion:si,QuaternionKeyframeTrack:ic,QuaternionLinearInterpolant:Hx,RED_GREEN_RGTC2_Format:xh,RED_RGTC1_Format:ym,REVISION:Uh,RGBADepthPacking:Wy,RGBAFormat:On,RGBAIntegerFormat:Fh,RGBA_ASTC_10x10_Format:ph,RGBA_ASTC_10x5_Format:hh,RGBA_ASTC_10x6_Format:fh,RGBA_ASTC_10x8_Format:dh,RGBA_ASTC_12x10_Format:mh,RGBA_ASTC_12x12_Format:gh,RGBA_ASTC_4x4_Format:ih,RGBA_ASTC_5x4_Format:sh,RGBA_ASTC_5x5_Format:ah,RGBA_ASTC_6x5_Format:rh,RGBA_ASTC_6x6_Format:oh,RGBA_ASTC_8x5_Format:lh,RGBA_ASTC_8x6_Format:ch,RGBA_ASTC_8x8_Format:uh,RGBA_BPTC_Format:Al,RGBA_ETC2_EAC_Format:nh,RGBA_PVRTC_2BPPV1_Format:$u,RGBA_PVRTC_4BPPV1_Format:Qu,RGBA_S3TC_DXT1_Format:bl,RGBA_S3TC_DXT3_Format:El,RGBA_S3TC_DXT5_Format:Tl,RGBDepthPacking:Gb,RGBFormat:vm,RGBIntegerFormat:zb,RGB_BPTC_SIGNED_Format:vh,RGB_BPTC_UNSIGNED_Format:_h,RGB_ETC1_Format:th,RGB_ETC2_Format:eh,RGB_PVRTC_2BPPV1_Format:Ju,RGB_PVRTC_4BPPV1_Format:Ku,RGB_S3TC_DXT1_Format:Ml,RGDepthPacking:kb,RGFormat:_m,RGIntegerFormat:zh,RawShaderMaterial:Cx,Ray:Ao,Raycaster:nS,RectAreaLight:Yx,RedFormat:Bh,RedIntegerFormat:Kl,ReinhardToneMapping:Py,RenderTarget:bm,RenderTarget3D:zT,RepeatWrapping:Ll,ReplaceStencilOp:Xb,ReverseSubtractEquation:my,RingGeometry:sf,SIGNED_RED_GREEN_RGTC2_Format:Sh,SIGNED_RED_RGTC1_Format:yh,SRGBColorSpace:In,SRGBTransfer:He,Scene:Am,ShaderChunk:ye,ShaderLib:Xi,ShaderMaterial:Yi,ShadowMaterial:wx,Shape:ar,ShapeGeometry:af,ShapePath:oA,ShapeUtils:qi,ShortType:pm,Skeleton:Yh,SkeletonHelper:ZT,SkinnedMesh:ux,Source:ua,Sphere:An,SphereGeometry:ec,Spherical:kT,SphericalHarmonics3:Zx,SplineCurve:Om,SpotLight:kx,SpotLightHelper:YT,Sprite:lx,SpriteMaterial:wm,SrcAlphaFactor:Vu,SrcAlphaSaturateFactor:Ay,SrcColorFactor:xy,StaticCopyUsage:cE,StaticDrawUsage:zl,StaticReadUsage:rE,StereoCamera:xT,StreamCopyUsage:hE,StreamDrawUsage:aE,StreamReadUsage:lE,StringKeyframeTrack:fr,SubtractEquation:py,SubtractiveBlending:Wp,TOUCH:Nb,TangentSpaceNormalMap:pa,TetrahedronGeometry:rf,Texture:an,TextureLoader:fT,TextureUtils:dA,TimestampQuery:dE,TorusGeometry:of,TorusKnotGeometry:lf,Triangle:ni,TriangleFanDrawMode:Vb,TriangleStripDrawMode:Hb,TrianglesDrawMode:Fb,TubeGeometry:cf,UVMapping:Lh,Uint16BufferAttribute:Em,Uint32BufferAttribute:Tm,Uint8BufferAttribute:t1,Uint8ClampedBufferAttribute:e1,Uniform:jm,UniformsGroup:HT,UniformsLib:Ut,UniformsUtils:sx,UnsignedByteType:Li,UnsignedInt248Type:mo,UnsignedInt5999Type:mm,UnsignedIntType:Os,UnsignedShort4444Type:Ih,UnsignedShort5551Type:Oh,UnsignedShortType:po,VSMShadowMap:Wi,Vector2:pt,Vector3:B,Vector4:Ue,VectorKeyframeTrack:Xl,VideoFrameTexture:b1,VideoTexture:mx,WebGL3DRenderTarget:VE,WebGLArrayRenderTarget:HE,WebGLCoordinateSystem:Ni,WebGLCubeRenderTarget:rx,WebGLRenderTarget:ls,WebGLRenderer:uS,WebGLUtils:cS,WebGPUCoordinateSystem:Fl,WebXRController:Bu,WireframeGeometry:Ax,WrapAroundEnding:Ol,ZeroCurvatureEnding:tr,ZeroFactor:_y,ZeroSlopeEnding:er,ZeroStencilOp:Wb,createCanvasElement:tx},Symbol.toStringTag,{value:"Module"}));var Ep={exports:{}},Cs={};/**
 * @license React
 * react-reconciler-constants.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var F_;function j2(){return F_||(F_=1,Cs.ConcurrentRoot=1,Cs.ContinuousEventPriority=8,Cs.DefaultEventPriority=32,Cs.DiscreteEventPriority=2,Cs.IdleEventPriority=268435456,Cs.LegacyRoot=0,Cs.NoEventPriority=0),Cs}var H_;function K2(){return H_||(H_=1,Ep.exports=j2()),Ep.exports}var Fu=K2(),Tp={exports:{}},Ap={},wp={exports:{}},Cp={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var V_;function J2(){if(V_)return Cp;V_=1;var s=um();function t(m,g){return m===g&&(m!==0||1/m===1/g)||m!==m&&g!==g}var e=typeof Object.is=="function"?Object.is:t,n=s.useState,i=s.useEffect,o=s.useLayoutEffect,l=s.useDebugValue;function c(m,g){var v=g(),x=n({inst:{value:v,getSnapshot:g}}),b=x[0].inst,S=x[1];return o(function(){b.value=v,b.getSnapshot=g,h(b)&&S({inst:b})},[m,v,g]),i(function(){return h(b)&&S({inst:b}),m(function(){h(b)&&S({inst:b})})},[m]),l(v),v}function h(m){var g=m.getSnapshot;m=m.value;try{var v=g();return!e(m,v)}catch{return!0}}function f(m,g){return g()}var p=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?f:c;return Cp.useSyncExternalStore=s.useSyncExternalStore!==void 0?s.useSyncExternalStore:p,Cp}var G_;function Q2(){return G_||(G_=1,wp.exports=J2()),wp.exports}/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var k_;function $2(){if(k_)return Ap;k_=1;var s=um(),t=Q2();function e(f,p){return f===p&&(f!==0||1/f===1/p)||f!==f&&p!==p}var n=typeof Object.is=="function"?Object.is:e,i=t.useSyncExternalStore,o=s.useRef,l=s.useEffect,c=s.useMemo,h=s.useDebugValue;return Ap.useSyncExternalStoreWithSelector=function(f,p,m,g,v){var x=o(null);if(x.current===null){var b={hasValue:!1,value:null};x.current=b}else b=x.current;x=c(function(){function y(D){if(!E){if(E=!0,A=D,D=g(D),v!==void 0&&b.hasValue){var P=b.value;if(v(P,D))return T=P}return T=D}if(P=T,n(A,D))return P;var O=g(D);return v!==void 0&&v(P,O)?(A=D,P):(A=D,T=O)}var E=!1,A,T,L=m===void 0?null:m;return[function(){return y(p())},L===null?void 0:function(){return y(L())}]},[p,m,g,v]);var S=i(f,x[0],x[1]);return l(function(){b.hasValue=!0,b.value=S},[S]),h(S),S},Ap}var W_;function t3(){return W_||(W_=1,Tp.exports=$2()),Tp.exports}var e3=t3();const n3=ly(e3),X_=s=>{let t;const e=new Set,n=(f,p)=>{const m=typeof f=="function"?f(t):f;if(!Object.is(m,t)){const g=t;t=p??(typeof m!="object"||m===null)?m:Object.assign({},t,m),e.forEach(v=>v(t,g))}},i=()=>t,c={setState:n,getState:i,getInitialState:()=>h,subscribe:f=>(e.add(f),()=>e.delete(f))},h=t=s(n,i,c);return c},i3=s=>s?X_(s):X_,{useSyncExternalStoreWithSelector:s3}=n3,a3=s=>s;function r3(s,t=a3,e){const n=s3(s.subscribe,s.getState,s.getInitialState,t,e);return cy.useDebugValue(n),n}const q_=(s,t)=>{const e=i3(s),n=(i,o=t)=>r3(e,i,o);return Object.assign(n,e),n},o3=(s,t)=>s?q_(s,t):q_;var Rp={exports:{}},Dp={exports:{}},Up={exports:{}},Np={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Y_;function l3(){return Y_||(Y_=1,function(s){function t(F,q){var G=F.length;F.push(q);t:for(;0<G;){var st=G-1>>>1,lt=F[st];if(0<i(lt,q))F[st]=q,F[G]=lt,G=st;else break t}}function e(F){return F.length===0?null:F[0]}function n(F){if(F.length===0)return null;var q=F[0],G=F.pop();if(G!==q){F[0]=G;t:for(var st=0,lt=F.length,mt=lt>>>1;st<mt;){var wt=2*(st+1)-1,jt=F[wt],$=wt+1,gt=F[$];if(0>i(jt,G))$<lt&&0>i(gt,jt)?(F[st]=gt,F[$]=G,st=$):(F[st]=jt,F[wt]=G,st=wt);else if($<lt&&0>i(gt,G))F[st]=gt,F[$]=G,st=$;else break t}}return q}function i(F,q){var G=F.sortIndex-q.sortIndex;return G!==0?G:F.id-q.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var o=performance;s.unstable_now=function(){return o.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,b=!1,S=typeof setTimeout=="function"?setTimeout:null,y=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function A(F){for(var q=e(f);q!==null;){if(q.callback===null)n(f);else if(q.startTime<=F)n(f),q.sortIndex=q.expirationTime,t(h,q);else break;q=e(f)}}function T(F){if(b=!1,A(F),!x)if(e(h)!==null)x=!0,J();else{var q=e(f);q!==null&&at(T,q.startTime-F)}}var L=!1,D=-1,P=5,O=-1;function C(){return!(s.unstable_now()-O<P)}function w(){if(L){var F=s.unstable_now();O=F;var q=!0;try{t:{x=!1,b&&(b=!1,y(D),D=-1),v=!0;var G=g;try{e:{for(A(F),m=e(h);m!==null&&!(m.expirationTime>F&&C());){var st=m.callback;if(typeof st=="function"){m.callback=null,g=m.priorityLevel;var lt=st(m.expirationTime<=F);if(F=s.unstable_now(),typeof lt=="function"){m.callback=lt,A(F),q=!0;break e}m===e(h)&&n(h),A(F)}else n(h);m=e(h)}if(m!==null)q=!0;else{var mt=e(f);mt!==null&&at(T,mt.startTime-F),q=!1}}break t}finally{m=null,g=G,v=!1}q=void 0}}finally{q?H():L=!1}}}var H;if(typeof E=="function")H=function(){E(w)};else if(typeof MessageChannel<"u"){var Q=new MessageChannel,X=Q.port2;Q.port1.onmessage=w,H=function(){X.postMessage(null)}}else H=function(){S(w,0)};function J(){L||(L=!0,H())}function at(F,q){D=S(function(){F(s.unstable_now())},q)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(F){F.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,J())},s.unstable_forceFrameRate=function(F){0>F||125<F?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<F?Math.floor(1e3/F):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return e(h)},s.unstable_next=function(F){switch(g){case 1:case 2:case 3:var q=3;break;default:q=g}var G=g;g=q;try{return F()}finally{g=G}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(F,q){switch(F){case 1:case 2:case 3:case 4:case 5:break;default:F=3}var G=g;g=F;try{return q()}finally{g=G}},s.unstable_scheduleCallback=function(F,q,G){var st=s.unstable_now();switch(typeof G=="object"&&G!==null?(G=G.delay,G=typeof G=="number"&&0<G?st+G:st):G=st,F){case 1:var lt=-1;break;case 2:lt=250;break;case 5:lt=1073741823;break;case 4:lt=1e4;break;default:lt=5e3}return lt=G+lt,F={id:p++,callback:q,priorityLevel:F,startTime:G,expirationTime:lt,sortIndex:-1},G>st?(F.sortIndex=G,t(f,F),e(h)===null&&F===e(f)&&(b?(y(D),D=-1):b=!0,at(T,G-st))):(F.sortIndex=lt,t(h,F),x||v||(x=!0,J())),F},s.unstable_shouldYield=C,s.unstable_wrapCallback=function(F){var q=g;return function(){var G=g;g=q;try{return F.apply(this,arguments)}finally{g=G}}}}(Np)),Np}var Z_;function c3(){return Z_||(Z_=1,Up.exports=l3()),Up.exports}/**
 * @license React
 * react-reconciler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var j_;function u3(){return j_||(j_=1,function(s){s.exports=function(t){function e(a,r,u,d){return new qS(a,r,u,d)}function n(){}function i(a){var r="https://react.dev/errors/"+a;if(1<arguments.length){r+="?args[]="+encodeURIComponent(arguments[1]);for(var u=2;u<arguments.length;u++)r+="&args[]="+encodeURIComponent(arguments[u])}return"Minified React error #"+a+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function o(a){return a===null||typeof a!="object"?null:(a=C0&&a[C0]||a["@@iterator"],typeof a=="function"?a:null)}function l(a){if(a==null)return null;if(typeof a=="function")return a.$$typeof===QS?null:a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case Sr:return"Fragment";case xr:return"Portal";case nd:return"Profiler";case T0:return"StrictMode";case sd:return"Suspense";case ad:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case Ws:return(a.displayName||"Context")+".Provider";case A0:return(a._context.displayName||"Context")+".Consumer";case id:var r=a.render;return a=a.displayName,a||(a=r.displayName||r.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case rd:return r=a.displayName||null,r!==null?r:l(a.type)||"Memo";case Xs:r=a._payload,a=a._init;try{return l(a(r))}catch{}}return null}function c(a){if(od===void 0)try{throw Error()}catch(u){var r=u.stack.trim().match(/\n( *(at )?)/);od=r&&r[1]||"",R0=-1<u.stack.indexOf(`
    at`)?" (<anonymous>)":-1<u.stack.indexOf("@")?"@unknown:0:0":""}return`
`+od+a+R0}function h(a,r){if(!a||ld)return"";ld=!0;var u=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var d={DetermineComponentFrameRoot:function(){try{if(r){var Pt=function(){throw Error()};if(Object.defineProperty(Pt.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Pt,[])}catch(me){var Bt=me}Reflect.construct(a,[],Pt)}else{try{Pt.call()}catch(me){Bt=me}a.call(Pt.prototype)}}else{try{throw Error()}catch(me){Bt=me}(Pt=a())&&typeof Pt.catch=="function"&&Pt.catch(function(){})}}catch(me){if(me&&Bt&&typeof me.stack=="string")return[me.stack,Bt.stack]}return[null,null]}};d.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var _=Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot,"name");_&&_.configurable&&Object.defineProperty(d.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var M=d.DetermineComponentFrameRoot(),N=M[0],V=M[1];if(N&&V){var j=N.split(`
`),ct=V.split(`
`);for(_=d=0;d<j.length&&!j[d].includes("DetermineComponentFrameRoot");)d++;for(;_<ct.length&&!ct[_].includes("DetermineComponentFrameRoot");)_++;if(d===j.length||_===ct.length)for(d=j.length-1,_=ct.length-1;1<=d&&0<=_&&j[d]!==ct[_];)_--;for(;1<=d&&0<=_;d--,_--)if(j[d]!==ct[_]){if(d!==1||_!==1)do if(d--,_--,0>_||j[d]!==ct[_]){var Et=`
`+j[d].replace(" at new "," at ");return a.displayName&&Et.includes("<anonymous>")&&(Et=Et.replace("<anonymous>",a.displayName)),Et}while(1<=d&&0<=_);break}}}finally{ld=!1,Error.prepareStackTrace=u}return(u=a?a.displayName||a.name:"")?c(u):""}function f(a){switch(a.tag){case 26:case 27:case 5:return c(a.type);case 16:return c("Lazy");case 13:return c("Suspense");case 19:return c("SuspenseList");case 0:case 15:return a=h(a.type,!1),a;case 11:return a=h(a.type.render,!1),a;case 1:return a=h(a.type,!0),a;default:return""}}function p(a){try{var r="";do r+=f(a),a=a.return;while(a);return r}catch(u){return`
Error generating stack: `+u.message+`
`+u.stack}}function m(a){var r=a,u=a;if(a.alternate)for(;r.return;)r=r.return;else{a=r;do r=a,(r.flags&4098)!==0&&(u=r.return),a=r.return;while(a)}return r.tag===3?u:null}function g(a){if(m(a)!==a)throw Error(i(188))}function v(a){var r=a.alternate;if(!r){if(r=m(a),r===null)throw Error(i(188));return r!==a?null:a}for(var u=a,d=r;;){var _=u.return;if(_===null)break;var M=_.alternate;if(M===null){if(d=_.return,d!==null){u=d;continue}break}if(_.child===M.child){for(M=_.child;M;){if(M===u)return g(_),a;if(M===d)return g(_),r;M=M.sibling}throw Error(i(188))}if(u.return!==d.return)u=_,d=M;else{for(var N=!1,V=_.child;V;){if(V===u){N=!0,u=_,d=M;break}if(V===d){N=!0,d=_,u=M;break}V=V.sibling}if(!N){for(V=M.child;V;){if(V===u){N=!0,u=M,d=_;break}if(V===d){N=!0,d=M,u=_;break}V=V.sibling}if(!N)throw Error(i(189))}}if(u.alternate!==d)throw Error(i(190))}if(u.tag!==3)throw Error(i(188));return u.stateNode.current===u?a:r}function x(a){var r=a.tag;if(r===5||r===26||r===27||r===6)return a;for(a=a.child;a!==null;){if(r=x(a),r!==null)return r;a=a.sibling}return null}function b(a){var r=a.tag;if(r===5||r===26||r===27||r===6)return a;for(a=a.child;a!==null;){if(a.tag!==4&&(r=b(a),r!==null))return r;a=a.sibling}return null}function S(a){return{current:a}}function y(a){0>br||(a.current=pd[br],pd[br]=null,br--)}function E(a,r){br++,pd[br]=a.current,a.current=r}function A(a){return a>>>=0,a===0?32:31-(db(a)/pb|0)|0}function T(a){var r=a&42;if(r!==0)return r;switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return a&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return a}}function L(a,r){var u=a.pendingLanes;if(u===0)return 0;var d=0,_=a.suspendedLanes,M=a.pingedLanes,N=a.warmLanes;a=a.finishedLanes!==0;var V=u&134217727;return V!==0?(u=V&~_,u!==0?d=T(u):(M&=V,M!==0?d=T(M):a||(N=V&~N,N!==0&&(d=T(N))))):(V=u&~_,V!==0?d=T(V):M!==0?d=T(M):a||(N=u&~N,N!==0&&(d=T(N)))),d===0?0:r!==0&&r!==d&&(r&_)===0&&(_=d&-d,N=r&-r,_>=N||_===32&&(N&4194176)!==0)?r:d}function D(a,r){return(a.pendingLanes&~(a.suspendedLanes&~a.pingedLanes)&r)===0}function P(a,r){switch(a){case 1:case 2:case 4:case 8:return r+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function O(){var a=bc;return bc<<=1,(bc&4194176)===0&&(bc=128),a}function C(){var a=Ec;return Ec<<=1,(Ec&62914560)===0&&(Ec=4194304),a}function w(a){for(var r=[],u=0;31>u;u++)r.push(a);return r}function H(a,r){a.pendingLanes|=r,r!==268435456&&(a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0)}function Q(a,r,u,d,_,M){var N=a.pendingLanes;a.pendingLanes=u,a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0,a.expiredLanes&=u,a.entangledLanes&=u,a.errorRecoveryDisabledLanes&=u,a.shellSuspendCounter=0;var V=a.entanglements,j=a.expirationTimes,ct=a.hiddenUpdates;for(u=N&~u;0<u;){var Et=31-hi(u),Pt=1<<Et;V[Et]=0,j[Et]=-1;var Bt=ct[Et];if(Bt!==null)for(ct[Et]=null,Et=0;Et<Bt.length;Et++){var me=Bt[Et];me!==null&&(me.lane&=-536870913)}u&=~Pt}d!==0&&X(a,d,0),M!==0&&_===0&&a.tag!==0&&(a.suspendedLanes|=M&~(N&~r))}function X(a,r,u){a.pendingLanes|=r,a.suspendedLanes&=~r;var d=31-hi(r);a.entangledLanes|=r,a.entanglements[d]=a.entanglements[d]|1073741824|u&4194218}function J(a,r){var u=a.entangledLanes|=r;for(a=a.entanglements;u;){var d=31-hi(u),_=1<<d;_&r|a[d]&r&&(a[d]|=r),u&=~_}}function at(a){return a&=-a,2<a?8<a?(a&134217727)!==0?32:268435456:8:2}function F(a){if(fi&&typeof fi.onCommitFiberRoot=="function")try{fi.onCommitFiberRoot(Yo,a,void 0,(a.current.flags&128)===128)}catch{}}function q(a){if(typeof yb=="function"&&xb(a),fi&&typeof fi.setStrictMode=="function")try{fi.setStrictMode(Yo,a)}catch{}}function G(a,r){return a===r&&(a!==0||1/a===1/r)||a!==a&&r!==r}function st(a,r){if(typeof a=="object"&&a!==null){var u=ev.get(a);return u!==void 0?u:(r={value:a,source:r,stack:p(r)},ev.set(a,r),r)}return{value:a,source:r,stack:p(r)}}function lt(a,r){Tr[Ar++]=wc,Tr[Ar++]=Ac,Ac=a,wc=r}function mt(a,r,u){Ei[Ti++]=gs,Ei[Ti++]=vs,Ei[Ti++]=wa,wa=a;var d=gs;a=vs;var _=32-hi(d)-1;d&=~(1<<_),u+=1;var M=32-hi(r)+_;if(30<M){var N=_-_%5;M=(d&(1<<N)-1).toString(32),d>>=N,_-=N,gs=1<<32-hi(r)+_|u<<_|d,vs=M+a}else gs=1<<M|u<<_|d,vs=a}function wt(a){a.return!==null&&(lt(a,1),mt(a,1,0))}function jt(a){for(;a===Ac;)Ac=Tr[--Ar],Tr[Ar]=null,wc=Tr[--Ar],Tr[Ar]=null;for(;a===wa;)wa=Ei[--Ti],Ei[Ti]=null,vs=Ei[--Ti],Ei[Ti]=null,gs=Ei[--Ti],Ei[Ti]=null}function $(a,r){E(Ys,r),E(Zo,a),E(En,null),a=eM(r),y(En),E(En,a)}function gt(){y(En),y(Zo),y(Ys)}function Wt(a){a.memoizedState!==null&&E(Cc,a);var r=En.current,u=nM(r,a.type);r!==u&&(E(Zo,a),E(En,u))}function Dt(a){Zo.current===a&&(y(En),y(Zo)),Cc.current===a&&(y(Cc),ms?Aa._currentValue=Mr:Aa._currentValue2=Mr)}function Vt(a){var r=Error(i(418,""));throw oe(st(r,a)),vd}function fe(a,r){if(!Mi)throw Error(i(175));jM(a.stateNode,a.type,a.memoizedProps,r,a)||Vt(a)}function Jt(a){for(Gn=a.return;Gn;)switch(Gn.tag){case 3:case 27:Qi=!0;return;case 5:case 13:Qi=!1;return;default:Gn=Gn.return}}function Be(a){if(!Mi||a!==Gn)return!1;if(!Pe)return Jt(a),Pe=!0,!1;var r=!1;if(Dn?a.tag!==3&&a.tag!==27&&(a.tag!==5||W0(a.type)&&!Mc(a.type,a.memoizedProps))&&(r=!0):a.tag!==3&&(a.tag!==5||W0(a.type)&&!Mc(a.type,a.memoizedProps))&&(r=!0),r&&Un&&Vt(a),Jt(a),a.tag===13){if(!Mi)throw Error(i(316));if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(i(317));Un=QM(a)}else Un=Gn?G0(a.stateNode):null;return!0}function xe(){Mi&&(Un=Gn=null,Pe=!1)}function oe(a){Fi===null?Fi=[a]:Fi.push(a)}function I(){for(var a=wr,r=_d=wr=0;r<a;){var u=Ai[r];Ai[r++]=null;var d=Ai[r];Ai[r++]=null;var _=Ai[r];Ai[r++]=null;var M=Ai[r];if(Ai[r++]=null,d!==null&&_!==null){var N=d.pending;N===null?_.next=_:(_.next=N.next,N.next=_),d.pending=_}M!==0&&ut(u,_,M)}}function Tt(a,r,u,d){Ai[wr++]=a,Ai[wr++]=r,Ai[wr++]=u,Ai[wr++]=d,_d|=d,a.lanes|=d,a=a.alternate,a!==null&&(a.lanes|=d)}function _t(a,r,u,d){return Tt(a,r,u,d),Ot(a)}function bt(a,r){return Tt(a,null,null,r),Ot(a)}function ut(a,r,u){a.lanes|=u;var d=a.alternate;d!==null&&(d.lanes|=u);for(var _=!1,M=a.return;M!==null;)M.childLanes|=u,d=M.alternate,d!==null&&(d.childLanes|=u),M.tag===22&&(a=M.stateNode,a===null||a._visibility&1||(_=!0)),a=M,M=M.return;_&&r!==null&&a.tag===3&&(M=a.stateNode,_=31-hi(u),M=M.hiddenUpdates,a=M[_],a===null?M[_]=[r]:a.push(r),r.lane=u|536870912)}function Ot(a){if(50<il)throw il=0,Pd=null,Error(i(185));for(var r=a.return;r!==null;)a=r,r=a.return;return a.tag===3?a.stateNode:null}function vt(a){a!==Cr&&a.next===null&&(Cr===null?Rc=Cr=a:Cr=Cr.next=a),Dc=!0,yd||(yd=!0,rt(ue))}function It(a,r){if(!xd&&Dc){xd=!0;do for(var u=!1,d=Rc;d!==null;){if(a!==0){var _=d.pendingLanes;if(_===0)var M=0;else{var N=d.suspendedLanes,V=d.pingedLanes;M=(1<<31-hi(42|a)+1)-1,M&=_&~(N&~V),M=M&201326677?M&201326677|1:M?M|2:0}M!==0&&(u=!0,K(d,M))}else M=Ce,M=L(d,d===Ze?M:0),(M&3)===0||D(d,M)||(u=!0,K(d,M));d=d.next}while(u);xd=!1}}function ue(){Dc=yd=!1;var a=0;Rr!==0&&(uM()&&(a=Rr),Rr=0);for(var r=zi(),u=null,d=Rc;d!==null;){var _=d.next,M=z(d,r);M===0?(d.next=null,u===null?Rc=_:u.next=_,_===null&&(Cr=u)):(u=d,(a!==0||(M&3)!==0)&&(Dc=!0)),d=_}It(a)}function z(a,r){for(var u=a.suspendedLanes,d=a.pingedLanes,_=a.expirationTimes,M=a.pendingLanes&-62914561;0<M;){var N=31-hi(M),V=1<<N,j=_[N];j===-1?((V&u)===0||(V&d)!==0)&&(_[N]=P(V,r)):j<=r&&(a.expiredLanes|=V),M&=~V}if(r=Ze,u=Ce,u=L(a,a===r?u:0),d=a.callbackNode,u===0||a===r&&je===2||a.cancelPendingCommit!==null)return d!==null&&d!==null&&md(d),a.callbackNode=null,a.callbackPriority=0;if((u&3)===0||D(a,u)){if(r=u&-u,r===a.callbackPriority)return r;switch(d!==null&&md(d),at(u)){case 2:case 8:u=vb;break;case 32:u=gd;break;case 268435456:u=_b;break;default:u=gd}return d=R.bind(null,a),u=Tc(u,d),a.callbackPriority=r,a.callbackNode=u,r}return d!==null&&d!==null&&md(d),a.callbackPriority=2,a.callbackNode=null,2}function R(a,r){var u=a.callbackNode;if(ba()&&a.callbackNode!==u)return null;var d=Ce;return d=L(a,a===Ze?d:0),d===0?null:(s0(a,d,r),z(a,zi()),a.callbackNode!=null&&a.callbackNode===u?R.bind(null,a):null)}function K(a,r){if(ba())return null;s0(a,r,!0)}function rt(a){gM?vM(function(){(Ge&6)!==0?Tc(tv,a):a()}):Tc(tv,a)}function dt(){return Rr===0&&(Rr=O()),Rr}function ot(a,r){if(jo===null){var u=jo=[];Sd=0,Dr=dt(),Ur={status:"pending",value:void 0,then:function(d){u.push(d)}}}return Sd++,r.then(Zt,Zt),r}function Zt(){if(--Sd===0&&jo!==null){Ur!==null&&(Ur.status="fulfilled");var a=jo;jo=null,Dr=0,Ur=null;for(var r=0;r<a.length;r++)(0,a[r])()}}function Ct(a,r){var u=[],d={status:"pending",value:null,reason:null,then:function(_){u.push(_)}};return a.then(function(){d.status="fulfilled",d.value=r;for(var _=0;_<u.length;_++)(0,u[_])(r)},function(_){for(d.status="rejected",d.reason=_,_=0;_<u.length;_++)(0,u[_])(void 0)}),d}function Gt(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function Yt(a,r){a=a.updateQueue,r.updateQueue===a&&(r.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,callbacks:null})}function ft(a){return{lane:a,tag:0,payload:null,callback:null,next:null}}function Lt(a,r,u){var d=a.updateQueue;if(d===null)return null;if(d=d.shared,(Ge&2)!==0){var _=d.pending;return _===null?r.next=r:(r.next=_.next,_.next=r),d.pending=r,r=Ot(a),ut(a,null,u),r}return Tt(a,d,r,u),Ot(a)}function $t(a,r,u){if(r=r.updateQueue,r!==null&&(r=r.shared,(u&4194176)!==0)){var d=r.lanes;d&=a.pendingLanes,u|=d,r.lanes=u,J(a,u)}}function te(a,r){var u=a.updateQueue,d=a.alternate;if(d!==null&&(d=d.updateQueue,u===d)){var _=null,M=null;if(u=u.firstBaseUpdate,u!==null){do{var N={lane:u.lane,tag:u.tag,payload:u.payload,callback:null,next:null};M===null?_=M=N:M=M.next=N,u=u.next}while(u!==null);M===null?_=M=r:M=M.next=r}else _=M=r;u={baseState:d.baseState,firstBaseUpdate:_,lastBaseUpdate:M,shared:d.shared,callbacks:d.callbacks},a.updateQueue=u;return}a=u.lastBaseUpdate,a===null?u.firstBaseUpdate=r:a.next=r,u.lastBaseUpdate=r}function At(){if(Md){var a=Ur;if(a!==null)throw a}}function ne(a,r,u,d){Md=!1;var _=a.updateQueue;Zs=!1;var M=_.firstBaseUpdate,N=_.lastBaseUpdate,V=_.shared.pending;if(V!==null){_.shared.pending=null;var j=V,ct=j.next;j.next=null,N===null?M=ct:N.next=ct,N=j;var Et=a.alternate;Et!==null&&(Et=Et.updateQueue,V=Et.lastBaseUpdate,V!==N&&(V===null?Et.firstBaseUpdate=ct:V.next=ct,Et.lastBaseUpdate=j))}if(M!==null){var Pt=_.baseState;N=0,Et=ct=j=null,V=M;do{var Bt=V.lane&-536870913,me=Bt!==V.lane;if(me?(Ce&Bt)===Bt:(d&Bt)===Bt){Bt!==0&&Bt===Dr&&(Md=!0),Et!==null&&(Et=Et.next={lane:0,tag:V.tag,payload:V.payload,callback:null,next:null});t:{var Ri=a,sl=V;Bt=r;var Oa=u;switch(sl.tag){case 1:if(Ri=sl.payload,typeof Ri=="function"){Pt=Ri.call(Oa,Pt,Bt);break t}Pt=Ri;break t;case 3:Ri.flags=Ri.flags&-65537|128;case 0:if(Ri=sl.payload,Bt=typeof Ri=="function"?Ri.call(Oa,Pt,Bt):Ri,Bt==null)break t;Pt=ed({},Pt,Bt);break t;case 2:Zs=!0}}Bt=V.callback,Bt!==null&&(a.flags|=64,me&&(a.flags|=8192),me=_.callbacks,me===null?_.callbacks=[Bt]:me.push(Bt))}else me={lane:Bt,tag:V.tag,payload:V.payload,callback:V.callback,next:null},Et===null?(ct=Et=me,j=Pt):Et=Et.next=me,N|=Bt;if(V=V.next,V===null){if(V=_.shared.pending,V===null)break;me=V,V=me.next,me.next=null,_.lastBaseUpdate=me,_.shared.pending=null}}while(!0);Et===null&&(j=Pt),_.baseState=j,_.firstBaseUpdate=ct,_.lastBaseUpdate=Et,M===null&&(_.shared.lanes=0),Js|=N,a.lanes=N,a.memoizedState=Pt}}function k(a,r){if(typeof a!="function")throw Error(i(191,a));a.call(r)}function Nt(a,r){var u=a.callbacks;if(u!==null)for(a.callbacks=null,a=0;a<u.length;a++)k(u[a],r)}function yt(a,r){if(di(a,r))return!0;if(typeof a!="object"||a===null||typeof r!="object"||r===null)return!1;var u=Object.keys(a),d=Object.keys(r);if(u.length!==d.length)return!1;for(d=0;d<u.length;d++){var _=u[d];if(!Sb.call(r,_)||!di(a[_],r[_]))return!1}return!0}function Ht(a){return a=a.status,a==="fulfilled"||a==="rejected"}function St(){}function ht(a,r,u){switch(u=a[u],u===void 0?a.push(r):u!==r&&(r.then(St,St),r=u),r.status){case"fulfilled":return r.value;case"rejected":throw a=r.reason,a===Ko?Error(i(483)):a;default:if(typeof r.status=="string")r.then(St,St);else{if(a=Ze,a!==null&&100<a.shellSuspendCounter)throw Error(i(482));a=r,a.status="pending",a.then(function(d){if(r.status==="pending"){var _=r;_.status="fulfilled",_.value=d}},function(d){if(r.status==="pending"){var _=r;_.status="rejected",_.reason=d}})}switch(r.status){case"fulfilled":return r.value;case"rejected":throw a=r.reason,a===Ko?Error(i(483)):a}throw Nr=r,Ko}}function Xt(){if(Nr===null)throw Error(i(459));var a=Nr;return Nr=null,a}function re(a){var r=Jo;return Jo+=1,Lr===null&&(Lr=[]),ht(Lr,a,r)}function ze(a,r){r=r.props.ref,a.ref=r!==void 0?r:null}function we(a,r){throw r.$$typeof===jS?Error(i(525)):(a=Object.prototype.toString.call(r),Error(i(31,a==="[object Object]"?"object with keys {"+Object.keys(r).join(", ")+"}":a)))}function Zn(a){var r=a._init;return r(a._payload)}function xi(a){function r(tt,Z){if(a){var it=tt.deletions;it===null?(tt.deletions=[Z],tt.flags|=16):it.push(Z)}}function u(tt,Z){if(!a)return null;for(;Z!==null;)r(tt,Z),Z=Z.sibling;return null}function d(tt){for(var Z=new Map;tt!==null;)tt.key!==null?Z.set(tt.key,tt):Z.set(tt.index,tt),tt=tt.sibling;return Z}function _(tt,Z){return tt=ks(tt,Z),tt.index=0,tt.sibling=null,tt}function M(tt,Z,it){return tt.index=it,a?(it=tt.alternate,it!==null?(it=it.index,it<Z?(tt.flags|=33554434,Z):it):(tt.flags|=33554434,Z)):(tt.flags|=1048576,Z)}function N(tt){return a&&tt.alternate===null&&(tt.flags|=33554434),tt}function V(tt,Z,it,Mt){return Z===null||Z.tag!==6?(Z=Qf(it,tt.mode,Mt),Z.return=tt,Z):(Z=_(Z,it),Z.return=tt,Z)}function j(tt,Z,it,Mt){var Qt=it.type;return Qt===Sr?Et(tt,Z,it.props.children,Mt,it.key):Z!==null&&(Z.elementType===Qt||typeof Qt=="object"&&Qt!==null&&Qt.$$typeof===Xs&&Zn(Qt)===Z.type)?(Z=_(Z,it.props),ze(Z,it),Z.return=tt,Z):(Z=yc(it.type,it.key,it.props,null,tt.mode,Mt),ze(Z,it),Z.return=tt,Z)}function ct(tt,Z,it,Mt){return Z===null||Z.tag!==4||Z.stateNode.containerInfo!==it.containerInfo||Z.stateNode.implementation!==it.implementation?(Z=$f(it,tt.mode,Mt),Z.return=tt,Z):(Z=_(Z,it.children||[]),Z.return=tt,Z)}function Et(tt,Z,it,Mt,Qt){return Z===null||Z.tag!==7?(Z=Ea(it,tt.mode,Mt,Qt),Z.return=tt,Z):(Z=_(Z,it),Z.return=tt,Z)}function Pt(tt,Z,it){if(typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint")return Z=Qf(""+Z,tt.mode,it),Z.return=tt,Z;if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case xc:return it=yc(Z.type,Z.key,Z.props,null,tt.mode,it),ze(it,Z),it.return=tt,it;case xr:return Z=$f(Z,tt.mode,it),Z.return=tt,Z;case Xs:var Mt=Z._init;return Z=Mt(Z._payload),Pt(tt,Z,it)}if(Sc(Z)||o(Z))return Z=Ea(Z,tt.mode,it,null),Z.return=tt,Z;if(typeof Z.then=="function")return Pt(tt,re(Z),it);if(Z.$$typeof===Ws)return Pt(tt,dc(tt,Z),it);we(tt,Z)}return null}function Bt(tt,Z,it,Mt){var Qt=Z!==null?Z.key:null;if(typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint")return Qt!==null?null:V(tt,Z,""+it,Mt);if(typeof it=="object"&&it!==null){switch(it.$$typeof){case xc:return it.key===Qt?j(tt,Z,it,Mt):null;case xr:return it.key===Qt?ct(tt,Z,it,Mt):null;case Xs:return Qt=it._init,it=Qt(it._payload),Bt(tt,Z,it,Mt)}if(Sc(it)||o(it))return Qt!==null?null:Et(tt,Z,it,Mt,null);if(typeof it.then=="function")return Bt(tt,Z,re(it),Mt);if(it.$$typeof===Ws)return Bt(tt,Z,dc(tt,it),Mt);we(tt,it)}return null}function me(tt,Z,it,Mt,Qt){if(typeof Mt=="string"&&Mt!==""||typeof Mt=="number"||typeof Mt=="bigint")return tt=tt.get(it)||null,V(Z,tt,""+Mt,Qt);if(typeof Mt=="object"&&Mt!==null){switch(Mt.$$typeof){case xc:return tt=tt.get(Mt.key===null?it:Mt.key)||null,j(Z,tt,Mt,Qt);case xr:return tt=tt.get(Mt.key===null?it:Mt.key)||null,ct(Z,tt,Mt,Qt);case Xs:var Ke=Mt._init;return Mt=Ke(Mt._payload),me(tt,Z,it,Mt,Qt)}if(Sc(Mt)||o(Mt))return tt=tt.get(it)||null,Et(Z,tt,Mt,Qt,null);if(typeof Mt.then=="function")return me(tt,Z,it,re(Mt),Qt);if(Mt.$$typeof===Ws)return me(tt,Z,it,dc(Z,Mt),Qt);we(Z,Mt)}return null}function Ri(tt,Z,it,Mt){for(var Qt=null,Ke=null,le=Z,Ie=Z=0,_n=null;le!==null&&Ie<it.length;Ie++){le.index>Ie?(_n=le,le=null):_n=le.sibling;var Oe=Bt(tt,le,it[Ie],Mt);if(Oe===null){le===null&&(le=_n);break}a&&le&&Oe.alternate===null&&r(tt,le),Z=M(Oe,Z,Ie),Ke===null?Qt=Oe:Ke.sibling=Oe,Ke=Oe,le=_n}if(Ie===it.length)return u(tt,le),Pe&&lt(tt,Ie),Qt;if(le===null){for(;Ie<it.length;Ie++)le=Pt(tt,it[Ie],Mt),le!==null&&(Z=M(le,Z,Ie),Ke===null?Qt=le:Ke.sibling=le,Ke=le);return Pe&&lt(tt,Ie),Qt}for(le=d(le);Ie<it.length;Ie++)_n=me(le,tt,Ie,it[Ie],Mt),_n!==null&&(a&&_n.alternate!==null&&le.delete(_n.key===null?Ie:_n.key),Z=M(_n,Z,Ie),Ke===null?Qt=_n:Ke.sibling=_n,Ke=_n);return a&&le.forEach(function($s){return r(tt,$s)}),Pe&&lt(tt,Ie),Qt}function sl(tt,Z,it,Mt){if(it==null)throw Error(i(151));for(var Qt=null,Ke=null,le=Z,Ie=Z=0,_n=null,Oe=it.next();le!==null&&!Oe.done;Ie++,Oe=it.next()){le.index>Ie?(_n=le,le=null):_n=le.sibling;var $s=Bt(tt,le,Oe.value,Mt);if($s===null){le===null&&(le=_n);break}a&&le&&$s.alternate===null&&r(tt,le),Z=M($s,Z,Ie),Ke===null?Qt=$s:Ke.sibling=$s,Ke=$s,le=_n}if(Oe.done)return u(tt,le),Pe&&lt(tt,Ie),Qt;if(le===null){for(;!Oe.done;Ie++,Oe=it.next())Oe=Pt(tt,Oe.value,Mt),Oe!==null&&(Z=M(Oe,Z,Ie),Ke===null?Qt=Oe:Ke.sibling=Oe,Ke=Oe);return Pe&&lt(tt,Ie),Qt}for(le=d(le);!Oe.done;Ie++,Oe=it.next())Oe=me(le,tt,Ie,Oe.value,Mt),Oe!==null&&(a&&Oe.alternate!==null&&le.delete(Oe.key===null?Ie:Oe.key),Z=M(Oe,Z,Ie),Ke===null?Qt=Oe:Ke.sibling=Oe,Ke=Oe);return a&&le.forEach(function(Cb){return r(tt,Cb)}),Pe&&lt(tt,Ie),Qt}function Oa(tt,Z,it,Mt){if(typeof it=="object"&&it!==null&&it.type===Sr&&it.key===null&&(it=it.props.children),typeof it=="object"&&it!==null){switch(it.$$typeof){case xc:t:{for(var Qt=it.key;Z!==null;){if(Z.key===Qt){if(Qt=it.type,Qt===Sr){if(Z.tag===7){u(tt,Z.sibling),Mt=_(Z,it.props.children),Mt.return=tt,tt=Mt;break t}}else if(Z.elementType===Qt||typeof Qt=="object"&&Qt!==null&&Qt.$$typeof===Xs&&Zn(Qt)===Z.type){u(tt,Z.sibling),Mt=_(Z,it.props),ze(Mt,it),Mt.return=tt,tt=Mt;break t}u(tt,Z);break}else r(tt,Z);Z=Z.sibling}it.type===Sr?(Mt=Ea(it.props.children,tt.mode,Mt,it.key),Mt.return=tt,tt=Mt):(Mt=yc(it.type,it.key,it.props,null,tt.mode,Mt),ze(Mt,it),Mt.return=tt,tt=Mt)}return N(tt);case xr:t:{for(Qt=it.key;Z!==null;){if(Z.key===Qt)if(Z.tag===4&&Z.stateNode.containerInfo===it.containerInfo&&Z.stateNode.implementation===it.implementation){u(tt,Z.sibling),Mt=_(Z,it.children||[]),Mt.return=tt,tt=Mt;break t}else{u(tt,Z);break}else r(tt,Z);Z=Z.sibling}Mt=$f(it,tt.mode,Mt),Mt.return=tt,tt=Mt}return N(tt);case Xs:return Qt=it._init,it=Qt(it._payload),Oa(tt,Z,it,Mt)}if(Sc(it))return Ri(tt,Z,it,Mt);if(o(it)){if(Qt=o(it),typeof Qt!="function")throw Error(i(150));return it=Qt.call(it),sl(tt,Z,it,Mt)}if(typeof it.then=="function")return Oa(tt,Z,re(it),Mt);if(it.$$typeof===Ws)return Oa(tt,Z,dc(tt,it),Mt);we(tt,it)}return typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint"?(it=""+it,Z!==null&&Z.tag===6?(u(tt,Z.sibling),Mt=_(Z,it),Mt.return=tt,tt=Mt):(u(tt,Z),Mt=Qf(it,tt.mode,Mt),Mt.return=tt,tt=Mt),N(tt)):u(tt,Z)}return function(tt,Z,it,Mt){try{Jo=0;var Qt=Oa(tt,Z,it,Mt);return Lr=null,Qt}catch(le){if(le===Ko)throw le;var Ke=e(29,le,null,tt.mode);return Ke.lanes=Mt,Ke.return=tt,Ke}finally{}}}function Uo(a,r){a=Ss,E(Nc,a),E(Pr,r),Ss=a|r.baseLanes}function dr(){E(Nc,Ss),E(Pr,Pr.current)}function Ii(){Ss=Nc.current,y(Pr),y(Nc)}function Si(a){var r=a.alternate;E(fn,fn.current&1),E(wi,a),$i===null&&(r===null||Pr.current!==null||r.memoizedState!==null)&&($i=a)}function No(a){if(a.tag===22){if(E(fn,fn.current),E(wi,a),$i===null){var r=a.alternate;r!==null&&r.memoizedState!==null&&($i=a)}}else Oi()}function Oi(){E(fn,fn.current),E(wi,wi.current)}function jn(a){y(wi),$i===a&&($i=null),y(fn)}function _a(a){for(var r=a;r!==null;){if(r.tag===13){var u=r.memoizedState;if(u!==null&&(u=u.dehydrated,u===null||hd(u)||fd(u)))return r}else if(r.tag===19&&r.memoizedProps.revealOrder!==void 0){if((r.flags&128)!==0)return r}else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===a)break;for(;r.sibling===null;){if(r.return===null||r.return===a)return null;r=r.return}r.sibling.return=r.return,r=r.sibling}return null}function Xe(){throw Error(i(321))}function pr(a,r){if(r===null)return!1;for(var u=0;u<r.length&&u<a.length;u++)if(!di(a[u],r[u]))return!1;return!0}function mr(a,r,u,d,_,M){return js=M,Se=r,r.memoizedState=null,r.updateQueue=null,r.lanes=0,he.H=a===null||a.memoizedState===null?Da:Ks,Ra=!1,M=u(d,_),Ra=!1,Ir&&(M=oc(r,u,d,_)),rc(a),M}function rc(a){he.H=ts;var r=Ve!==null&&Ve.next!==null;if(js=0,ln=Ve=Se=null,Lc=!1,Qo=0,Or=null,r)throw Error(i(300));a===null||gn||(a=a.dependencies,a!==null&&fc(a)&&(gn=!0))}function oc(a,r,u,d){Se=a;var _=0;do{if(Ir&&(Or=null),Qo=0,Ir=!1,25<=_)throw Error(i(301));if(_+=1,ln=Ve=null,a.updateQueue!=null){var M=a.updateQueue;M.lastEffect=null,M.events=null,M.stores=null,M.memoCache!=null&&(M.memoCache.index=0)}he.H=Ua,M=r(u,d)}while(Ir);return M}function df(){var a=he.H,r=a.useState()[0];return r=typeof r.then=="function"?et(r):r,a=a.useState()[0],(Ve!==null?Ve.memoizedState:null)!==a&&(Se.flags|=1024),r}function Lo(){var a=Pc!==0;return Pc=0,a}function Po(a,r,u){r.updateQueue=a.updateQueue,r.flags&=-2053,a.lanes&=~u}function Io(a){if(Lc){for(a=a.memoizedState;a!==null;){var r=a.queue;r!==null&&(r.pending=null),a=a.next}Lc=!1}js=0,ln=Ve=Se=null,Ir=!1,Qo=Pc=0,Or=null}function U(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return ln===null?Se.memoizedState=ln=a:ln=ln.next=a,ln}function W(){if(Ve===null){var a=Se.alternate;a=a!==null?a.memoizedState:null}else a=Ve.next;var r=ln===null?Se.memoizedState:ln.next;if(r!==null)ln=r,Ve=a;else{if(a===null)throw Se.alternate===null?Error(i(467)):Error(i(310));Ve=a,a={memoizedState:Ve.memoizedState,baseState:Ve.baseState,baseQueue:Ve.baseQueue,queue:Ve.queue,next:null},ln===null?Se.memoizedState=ln=a:ln=ln.next=a}return ln}function et(a){var r=Qo;return Qo+=1,Or===null&&(Or=[]),a=ht(Or,a,r),r=Se,(ln===null?r.memoizedState:ln.next)===null&&(r=r.alternate,he.H=r===null||r.memoizedState===null?Da:Ks),a}function nt(a){if(a!==null&&typeof a=="object"){if(typeof a.then=="function")return et(a);if(a.$$typeof===Ws)return Cn(a)}throw Error(i(438,String(a)))}function Y(a){var r=null,u=Se.updateQueue;if(u!==null&&(r=u.memoCache),r==null){var d=Se.alternate;d!==null&&(d=d.updateQueue,d!==null&&(d=d.memoCache,d!=null&&(r={data:d.data.map(function(_){return _.slice()}),index:0})))}if(r==null&&(r={data:[],index:0}),u===null&&(u=Ed(),Se.updateQueue=u),u.memoCache=r,u=r.data[r.index],u===void 0)for(u=r.data[r.index]=Array(a),d=0;d<a;d++)u[d]=JS;return r.index++,u}function xt(a,r){return typeof r=="function"?r(a):r}function Rt(a){var r=W();return kt(r,Ve,a)}function kt(a,r,u){var d=a.queue;if(d===null)throw Error(i(311));d.lastRenderedReducer=u;var _=a.baseQueue,M=d.pending;if(M!==null){if(_!==null){var N=_.next;_.next=M.next,M.next=N}r.baseQueue=_=M,d.pending=null}if(M=a.baseState,_===null)a.memoizedState=M;else{r=_.next;var V=N=null,j=null,ct=r,Et=!1;do{var Pt=ct.lane&-536870913;if(Pt!==ct.lane?(Ce&Pt)===Pt:(js&Pt)===Pt){var Bt=ct.revertLane;if(Bt===0)j!==null&&(j=j.next={lane:0,revertLane:0,action:ct.action,hasEagerState:ct.hasEagerState,eagerState:ct.eagerState,next:null}),Pt===Dr&&(Et=!0);else if((js&Bt)===Bt){ct=ct.next,Bt===Dr&&(Et=!0);continue}else Pt={lane:0,revertLane:ct.revertLane,action:ct.action,hasEagerState:ct.hasEagerState,eagerState:ct.eagerState,next:null},j===null?(V=j=Pt,N=M):j=j.next=Pt,Se.lanes|=Bt,Js|=Bt;Pt=ct.action,Ra&&u(M,Pt),M=ct.hasEagerState?ct.eagerState:u(M,Pt)}else Bt={lane:Pt,revertLane:ct.revertLane,action:ct.action,hasEagerState:ct.hasEagerState,eagerState:ct.eagerState,next:null},j===null?(V=j=Bt,N=M):j=j.next=Bt,Se.lanes|=Pt,Js|=Pt;ct=ct.next}while(ct!==null&&ct!==r);if(j===null?N=M:j.next=V,!di(M,a.memoizedState)&&(gn=!0,Et&&(u=Ur,u!==null)))throw u;a.memoizedState=M,a.baseState=N,a.baseQueue=j,d.lastRenderedState=M}return _===null&&(d.lanes=0),[a.memoizedState,d.dispatch]}function Ft(a){var r=W(),u=r.queue;if(u===null)throw Error(i(311));u.lastRenderedReducer=a;var d=u.dispatch,_=u.pending,M=r.memoizedState;if(_!==null){u.pending=null;var N=_=_.next;do M=a(M,N.action),N=N.next;while(N!==_);di(M,r.memoizedState)||(gn=!0),r.memoizedState=M,r.baseQueue===null&&(r.baseState=M),u.lastRenderedState=M}return[M,d]}function ie(a,r,u){var d=Se,_=W(),M=Pe;if(M){if(u===void 0)throw Error(i(407));u=u()}else u=r();var N=!di((Ve||_).memoizedState,u);if(N&&(_.memoizedState=u,gn=!0),_=_.queue,pf(Me.bind(null,d,_,a),[a]),_.getSnapshot!==r||N||ln!==null&&ln.memoizedState.tag&1){if(d.flags|=2048,Ki(9,Kt.bind(null,d,_,u,r),{destroy:void 0},null),Ze===null)throw Error(i(349));M||(js&60)!==0||se(d,r,u)}return u}function se(a,r,u){a.flags|=16384,a={getSnapshot:r,value:u},r=Se.updateQueue,r===null?(r=Ed(),Se.updateQueue=r,r.stores=[a]):(u=r.stores,u===null?r.stores=[a]:u.push(a))}function Kt(a,r,u,d){r.value=u,r.getSnapshot=d,Le(r)&&qe(a)}function Me(a,r,u){return u(function(){Le(r)&&qe(a)})}function Le(a){var r=a.getSnapshot;a=a.value;try{var u=r();return!di(a,u)}catch{return!0}}function qe(a){var r=bt(a,2);r!==null&&Vn(r,a,2)}function Ye(a){var r=U();if(typeof a=="function"){var u=a;if(a=u(),Ra){q(!0);try{u()}finally{q(!1)}}}return r.memoizedState=r.baseState=a,r.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:xt,lastRenderedState:a},r}function Te(a,r,u,d){return a.baseState=u,kt(a,Ve,typeof d=="function"?d:xt)}function ee(a,r,u,d,_){if(uc(a))throw Error(i(485));if(a=r.action,a!==null){var M={payload:_,action:a,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(N){M.listeners.push(N)}};he.T!==null?u(!0):M.isTransition=!1,d(M),u=r.pending,u===null?(M.next=r.pending=M,on(r,M)):(M.next=u.next,r.pending=u.next=M)}}function on(a,r){var u=r.action,d=r.payload,_=a.state;if(r.isTransition){var M=he.T,N={};he.T=N;try{var V=u(_,d),j=he.S;j!==null&&j(N,V),Re(a,r,V)}catch(ct){ji(a,r,ct)}finally{he.T=M}}else try{M=u(_,d),Re(a,r,M)}catch(ct){ji(a,r,ct)}}function Re(a,r,u){u!==null&&typeof u=="object"&&typeof u.then=="function"?u.then(function(d){Kn(a,r,d)},function(d){return ji(a,r,d)}):Kn(a,r,u)}function Kn(a,r,u){r.status="fulfilled",r.value=u,wn(r),a.state=u,r=a.pending,r!==null&&(u=r.next,u===r?a.pending=null:(u=u.next,r.next=u,on(a,u)))}function ji(a,r,u){var d=a.pending;if(a.pending=null,d!==null){d=d.next;do r.status="rejected",r.reason=u,wn(r),r=r.next;while(r!==d)}a.action=null}function wn(a){a=a.listeners;for(var r=0;r<a.length;r++)(0,a[r])()}function zs(a,r){return r}function We(a,r){if(Pe){var u=Ze.formState;if(u!==null){t:{var d=Se;if(Pe){if(Un){var _=GM(Un,Qi);if(_){Un=G0(_),d=kM(_);break t}}Vt(d)}d=!1}d&&(r=u[0])}}u=U(),u.memoizedState=u.baseState=r,d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:zs,lastRenderedState:r},u.queue=d,u=dg.bind(null,Se,d),d.dispatch=u,d=Ye(!1);var M=_f.bind(null,Se,!1,d.queue);return d=U(),_={state:r,dispatch:null,action:a,pending:null},d.queue=_,u=ee.bind(null,Se,_,M,u),_.dispatch=u,d.memoizedState=a,[r,u,!1]}function Fn(a){var r=W();return Hn(r,Ve,a)}function Hn(a,r,u){r=kt(a,r,zs)[0],a=Rt(xt)[0],r=typeof r=="object"&&r!==null&&typeof r.then=="function"?et(r):r;var d=W(),_=d.queue,M=_.dispatch;return u!==d.memoizedState&&(Se.flags|=2048,Ki(9,Sn.bind(null,_,u),{destroy:void 0},null)),[r,M,a]}function Sn(a,r){a.action=r}function Mn(a){var r=W(),u=Ve;if(u!==null)return Hn(r,u,a);W(),r=r.memoizedState,u=W();var d=u.queue.dispatch;return u.memoizedState=a,[r,d,!1]}function Ki(a,r,u,d){return a={tag:a,create:r,inst:u,deps:d,next:null},r=Se.updateQueue,r===null&&(r=Ed(),Se.updateQueue=r),u=r.lastEffect,u===null?r.lastEffect=a.next=a:(d=u.next,u.next=a,a.next=d,r.lastEffect=a),a}function Ji(){return W().memoizedState}function lc(a,r,u,d){var _=U();Se.flags|=a,_.memoizedState=Ki(1|r,u,{destroy:void 0},d===void 0?null:d)}function cc(a,r,u,d){var _=W();d=d===void 0?null:d;var M=_.memoizedState.inst;Ve!==null&&d!==null&&pr(d,Ve.memoizedState.deps)?_.memoizedState=Ki(r,u,M,d):(Se.flags|=a,_.memoizedState=Ki(1|r,u,M,d))}function eg(a,r){lc(8390656,8,a,r)}function pf(a,r){cc(2048,8,a,r)}function ng(a,r){return cc(4,2,a,r)}function ig(a,r){return cc(4,4,a,r)}function sg(a,r){if(typeof r=="function"){a=a();var u=r(a);return function(){typeof u=="function"?u():r(null)}}if(r!=null)return a=a(),r.current=a,function(){r.current=null}}function ag(a,r,u){u=u!=null?u.concat([a]):null,cc(4,4,sg.bind(null,r,a),u)}function mf(){}function rg(a,r){var u=W();r=r===void 0?null:r;var d=u.memoizedState;return r!==null&&pr(r,d[1])?d[0]:(u.memoizedState=[a,r],a)}function og(a,r){var u=W();r=r===void 0?null:r;var d=u.memoizedState;if(r!==null&&pr(r,d[1]))return d[0];if(d=a(),Ra){q(!0);try{a()}finally{q(!1)}}return u.memoizedState=[d,r],d}function gf(a,r,u){return u===void 0||(js&1073741824)!==0?a.memoizedState=r:(a.memoizedState=u,a=i0(),Se.lanes|=a,Js|=a,u)}function lg(a,r,u,d){return di(u,r)?u:Pr.current!==null?(a=gf(a,u,d),di(a,r)||(gn=!0),a):(js&42)===0?(gn=!0,a.memoizedState=u):(a=i0(),Se.lanes|=a,Js|=a,r)}function cg(a,r,u,d,_){var M=Ta();Qn(M!==0&&8>M?M:8);var N=he.T,V={};he.T=V,_f(a,!1,r,u);try{var j=_(),ct=he.S;if(ct!==null&&ct(V,j),j!==null&&typeof j=="object"&&typeof j.then=="function"){var Et=Ct(j,d);Oo(a,r,Et,ci(a))}else Oo(a,r,d,ci(a))}catch(Pt){Oo(a,r,{then:function(){},status:"rejected",reason:Pt},ci())}finally{Qn(M),he.T=N}}function ug(a){var r=a.memoizedState;if(r!==null)return r;r={memoizedState:Mr,baseState:Mr,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:xt,lastRenderedState:Mr},next:null};var u={};return r.next={memoizedState:u,baseState:u,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:xt,lastRenderedState:u},next:null},a.memoizedState=r,a=a.alternate,a!==null&&(a.memoizedState=r),r}function vf(){return Cn(Aa)}function hg(){return W().memoizedState}function fg(){return W().memoizedState}function RS(a){for(var r=a.return;r!==null;){switch(r.tag){case 24:case 3:var u=ci();a=ft(u);var d=Lt(r,a,u);d!==null&&(Vn(d,r,u),$t(d,r,u)),r={cache:Uf()},a.payload=r;return}r=r.return}}function DS(a,r,u){var d=ci();u={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null},uc(a)?pg(r,u):(u=_t(a,r,u,d),u!==null&&(Vn(u,a,d),mg(u,r,d)))}function dg(a,r,u){var d=ci();Oo(a,r,u,d)}function Oo(a,r,u,d){var _={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null};if(uc(a))pg(r,_);else{var M=a.alternate;if(a.lanes===0&&(M===null||M.lanes===0)&&(M=r.lastRenderedReducer,M!==null))try{var N=r.lastRenderedState,V=M(N,u);if(_.hasEagerState=!0,_.eagerState=V,di(V,N))return Tt(a,r,_,0),Ze===null&&I(),!1}catch{}finally{}if(u=_t(a,r,_,d),u!==null)return Vn(u,a,d),mg(u,r,d),!0}return!1}function _f(a,r,u,d){if(d={lane:2,revertLane:dt(),action:d,hasEagerState:!1,eagerState:null,next:null},uc(a)){if(r)throw Error(i(479))}else r=_t(a,u,d,2),r!==null&&Vn(r,a,2)}function uc(a){var r=a.alternate;return a===Se||r!==null&&r===Se}function pg(a,r){Ir=Lc=!0;var u=a.pending;u===null?r.next=r:(r.next=u.next,u.next=r),a.pending=r}function mg(a,r,u){if((u&4194176)!==0){var d=r.lanes;d&=a.pendingLanes,u|=d,r.lanes=u,J(a,u)}}function yf(a,r,u,d){r=a.memoizedState,u=u(d,r),u=u==null?r:ed({},r,u),a.memoizedState=u,a.lanes===0&&(a.updateQueue.baseState=u)}function gg(a,r,u,d,_,M,N){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(d,M,N):r.prototype&&r.prototype.isPureReactComponent?!yt(u,d)||!yt(_,M):!0}function vg(a,r,u,d){a=r.state,typeof r.componentWillReceiveProps=="function"&&r.componentWillReceiveProps(u,d),typeof r.UNSAFE_componentWillReceiveProps=="function"&&r.UNSAFE_componentWillReceiveProps(u,d),r.state!==a&&Td.enqueueReplaceState(r,r.state,null)}function ya(a,r){var u=r;if("ref"in r){u={};for(var d in r)d!=="ref"&&(u[d]=r[d])}if(a=a.defaultProps){u===r&&(u=ed({},u));for(var _ in a)u[_]===void 0&&(u[_]=a[_])}return u}function hc(a,r){try{var u=a.onUncaughtError;u(r.value,{componentStack:r.stack})}catch(d){setTimeout(function(){throw d})}}function _g(a,r,u){try{var d=a.onCaughtError;d(u.value,{componentStack:u.stack,errorBoundary:r.tag===1?r.stateNode:null})}catch(_){setTimeout(function(){throw _})}}function xf(a,r,u){return u=ft(u),u.tag=3,u.payload={element:null},u.callback=function(){hc(a,r)},u}function yg(a){return a=ft(a),a.tag=3,a}function xg(a,r,u,d){var _=u.type.getDerivedStateFromError;if(typeof _=="function"){var M=d.value;a.payload=function(){return _(M)},a.callback=function(){_g(r,u,d)}}var N=u.stateNode;N!==null&&typeof N.componentDidCatch=="function"&&(a.callback=function(){_g(r,u,d),typeof _!="function"&&(Qs===null?Qs=new Set([this]):Qs.add(this));var V=d.stack;this.componentDidCatch(d.value,{componentStack:V!==null?V:""})})}function US(a,r,u,d,_){if(u.flags|=32768,d!==null&&typeof d=="object"&&typeof d.then=="function"){if(r=u.alternate,r!==null&&zo(r,u,_,!0),u=wi.current,u!==null){switch(u.tag){case 13:return $i===null?Zf():u.alternate===null&&nn===0&&(nn=3),u.flags&=-257,u.flags|=65536,u.lanes=_,d===Uc?u.flags|=16384:(r=u.updateQueue,r===null?u.updateQueue=new Set([d]):r.add(d),Kf(a,d,_)),!1;case 22:return u.flags|=65536,d===Uc?u.flags|=16384:(r=u.updateQueue,r===null?(r={transitions:null,markerInstances:null,retryQueue:new Set([d])},u.updateQueue=r):(u=r.retryQueue,u===null?r.retryQueue=new Set([d]):u.add(d)),Kf(a,d,_)),!1}throw Error(i(435,u.tag))}return Kf(a,d,_),Zf(),!1}if(Pe)return r=wi.current,r!==null?((r.flags&65536)===0&&(r.flags|=256),r.flags|=65536,r.lanes=_,d!==vd&&(a=Error(i(422),{cause:d}),oe(st(a,u)))):(d!==vd&&(r=Error(i(423),{cause:d}),oe(st(r,u))),a=a.current.alternate,a.flags|=65536,_&=-_,a.lanes|=_,d=st(d,u),_=xf(a.stateNode,d,_),te(a,_),nn!==4&&(nn=2)),!1;var M=Error(i(520),{cause:d});if(M=st(M,u),tl===null?tl=[M]:tl.push(M),nn!==4&&(nn=2),r===null)return!0;d=st(d,u),u=r;do{switch(u.tag){case 3:return u.flags|=65536,a=_&-_,u.lanes|=a,a=xf(u.stateNode,d,a),te(u,a),!1;case 1:if(r=u.type,M=u.stateNode,(u.flags&128)===0&&(typeof r.getDerivedStateFromError=="function"||M!==null&&typeof M.componentDidCatch=="function"&&(Qs===null||!Qs.has(M))))return u.flags|=65536,_&=-_,u.lanes|=_,_=yg(_),xg(_,a,u,d),te(u,_),!1}u=u.return}while(u!==null);return!1}function bn(a,r,u,d){r.child=a===null?nv(r,null,u,d):Ca(r,a.child,u,d)}function Sg(a,r,u,d,_){u=u.render;var M=r.ref;if("ref"in d){var N={};for(var V in d)V!=="ref"&&(N[V]=d[V])}else N=d;return xa(r),d=mr(a,r,u,N,M,_),V=Lo(),a!==null&&!gn?(Po(a,r,_),hs(a,r,_)):(Pe&&V&&wt(r),r.flags|=1,bn(a,r,d,_),r.child)}function Mg(a,r,u,d,_){if(a===null){var M=u.type;return typeof M=="function"&&!Jf(M)&&M.defaultProps===void 0&&u.compare===null?(r.tag=15,r.type=M,bg(a,r,M,d,_)):(a=yc(u.type,null,d,r,r.mode,_),a.ref=r.ref,a.return=r,r.child=a)}if(M=a.child,!Cf(a,_)){var N=M.memoizedProps;if(u=u.compare,u=u!==null?u:yt,u(N,d)&&a.ref===r.ref)return hs(a,r,_)}return r.flags|=1,a=ks(M,d),a.ref=r.ref,a.return=r,r.child=a}function bg(a,r,u,d,_){if(a!==null){var M=a.memoizedProps;if(yt(M,d)&&a.ref===r.ref)if(gn=!1,r.pendingProps=d=M,Cf(a,_))(a.flags&131072)!==0&&(gn=!0);else return r.lanes=a.lanes,hs(a,r,_)}return Sf(a,r,u,d,_)}function Eg(a,r,u){var d=r.pendingProps,_=d.children,M=(r.stateNode._pendingVisibility&2)!==0,N=a!==null?a.memoizedState:null;if(Bo(a,r),d.mode==="hidden"||M){if((r.flags&128)!==0){if(d=N!==null?N.baseLanes|u:u,a!==null){for(_=r.child=a.child,M=0;_!==null;)M=M|_.lanes|_.childLanes,_=_.sibling;r.childLanes=M&~d}else r.childLanes=0,r.child=null;return Tg(a,r,d,u)}if((u&536870912)!==0)r.memoizedState={baseLanes:0,cachePool:null},a!==null&&pc(r,N!==null?N.cachePool:null),N!==null?Uo(r,N):dr(),No(r);else return r.lanes=r.childLanes=536870912,Tg(a,r,N!==null?N.baseLanes|u:u,u)}else N!==null?(pc(r,N.cachePool),Uo(r,N),Oi(),r.memoizedState=null):(a!==null&&pc(r,null),dr(),Oi());return bn(a,r,_,u),r.child}function Tg(a,r,u,d){var _=Nf();return _=_===null?null:{parent:ms?tn._currentValue:tn._currentValue2,pool:_},r.memoizedState={baseLanes:u,cachePool:_},a!==null&&pc(r,null),dr(),No(r),a!==null&&zo(a,r,d,!0),null}function Bo(a,r){var u=r.ref;if(u===null)a!==null&&a.ref!==null&&(r.flags|=2097664);else{if(typeof u!="function"&&typeof u!="object")throw Error(i(284));(a===null||a.ref!==u)&&(r.flags|=2097664)}}function Sf(a,r,u,d,_){return xa(r),u=mr(a,r,u,d,void 0,_),d=Lo(),a!==null&&!gn?(Po(a,r,_),hs(a,r,_)):(Pe&&d&&wt(r),r.flags|=1,bn(a,r,u,_),r.child)}function Ag(a,r,u,d,_,M){return xa(r),r.updateQueue=null,u=oc(r,d,u,_),rc(a),d=Lo(),a!==null&&!gn?(Po(a,r,M),hs(a,r,M)):(Pe&&d&&wt(r),r.flags|=1,bn(a,r,u,M),r.child)}function wg(a,r,u,d,_){if(xa(r),r.stateNode===null){var M=Er,N=u.contextType;typeof N=="object"&&N!==null&&(M=Cn(N)),M=new u(d,M),r.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,M.updater=Td,r.stateNode=M,M._reactInternals=r,M=r.stateNode,M.props=d,M.state=r.memoizedState,M.refs={},Gt(r),N=u.contextType,M.context=typeof N=="object"&&N!==null?Cn(N):Er,M.state=r.memoizedState,N=u.getDerivedStateFromProps,typeof N=="function"&&(yf(r,u,N,d),M.state=r.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(N=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),N!==M.state&&Td.enqueueReplaceState(M,M.state,null),ne(r,d,M,_),At(),M.state=r.memoizedState),typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!0}else if(a===null){M=r.stateNode;var V=r.memoizedProps,j=ya(u,V);M.props=j;var ct=M.context,Et=u.contextType;N=Er,typeof Et=="object"&&Et!==null&&(N=Cn(Et));var Pt=u.getDerivedStateFromProps;Et=typeof Pt=="function"||typeof M.getSnapshotBeforeUpdate=="function",V=r.pendingProps!==V,Et||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(V||ct!==N)&&vg(r,M,d,N),Zs=!1;var Bt=r.memoizedState;M.state=Bt,ne(r,d,M,_),At(),ct=r.memoizedState,V||Bt!==ct||Zs?(typeof Pt=="function"&&(yf(r,u,Pt,d),ct=r.memoizedState),(j=Zs||gg(r,u,j,d,Bt,ct,N))?(Et||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount()),typeof M.componentDidMount=="function"&&(r.flags|=4194308)):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),r.memoizedProps=d,r.memoizedState=ct),M.props=d,M.state=ct,M.context=N,d=j):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!1)}else{M=r.stateNode,Yt(a,r),N=r.memoizedProps,Et=ya(u,N),M.props=Et,Pt=r.pendingProps,Bt=M.context,ct=u.contextType,j=Er,typeof ct=="object"&&ct!==null&&(j=Cn(ct)),V=u.getDerivedStateFromProps,(ct=typeof V=="function"||typeof M.getSnapshotBeforeUpdate=="function")||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(N!==Pt||Bt!==j)&&vg(r,M,d,j),Zs=!1,Bt=r.memoizedState,M.state=Bt,ne(r,d,M,_),At();var me=r.memoizedState;N!==Pt||Bt!==me||Zs||a!==null&&a.dependencies!==null&&fc(a.dependencies)?(typeof V=="function"&&(yf(r,u,V,d),me=r.memoizedState),(Et=Zs||gg(r,u,Et,d,Bt,me,j)||a!==null&&a.dependencies!==null&&fc(a.dependencies))?(ct||typeof M.UNSAFE_componentWillUpdate!="function"&&typeof M.componentWillUpdate!="function"||(typeof M.componentWillUpdate=="function"&&M.componentWillUpdate(d,me,j),typeof M.UNSAFE_componentWillUpdate=="function"&&M.UNSAFE_componentWillUpdate(d,me,j)),typeof M.componentDidUpdate=="function"&&(r.flags|=4),typeof M.getSnapshotBeforeUpdate=="function"&&(r.flags|=1024)):(typeof M.componentDidUpdate!="function"||N===a.memoizedProps&&Bt===a.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||N===a.memoizedProps&&Bt===a.memoizedState||(r.flags|=1024),r.memoizedProps=d,r.memoizedState=me),M.props=d,M.state=me,M.context=j,d=Et):(typeof M.componentDidUpdate!="function"||N===a.memoizedProps&&Bt===a.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||N===a.memoizedProps&&Bt===a.memoizedState||(r.flags|=1024),d=!1)}return M=d,Bo(a,r),d=(r.flags&128)!==0,M||d?(M=r.stateNode,u=d&&typeof u.getDerivedStateFromError!="function"?null:M.render(),r.flags|=1,a!==null&&d?(r.child=Ca(r,a.child,null,_),r.child=Ca(r,null,u,_)):bn(a,r,u,_),r.memoizedState=M.state,a=r.child):a=hs(a,r,_),a}function Cg(a,r,u,d){return xe(),r.flags|=256,bn(a,r,u,d),r.child}function Mf(a){return{baseLanes:a,cachePool:Pg()}}function bf(a,r,u){return a=a!==null?a.childLanes&~u:0,r&&(a|=Ci),a}function Rg(a,r,u){var d=r.pendingProps,_=!1,M=(r.flags&128)!==0,N;if((N=M)||(N=a!==null&&a.memoizedState===null?!1:(fn.current&2)!==0),N&&(_=!0,r.flags&=-129),N=(r.flags&32)!==0,r.flags&=-33,a===null){if(Pe){if(_?Si(r):Oi(),Pe){var V=Un,j;(j=V)&&(V=ZM(V,Qi),V!==null?(r.memoizedState={dehydrated:V,treeContext:wa!==null?{id:gs,overflow:vs}:null,retryLane:536870912},j=e(18,null,null,0),j.stateNode=V,j.return=r,r.child=j,Gn=r,Un=null,j=!0):j=!1),j||Vt(r)}if(V=r.memoizedState,V!==null&&(V=V.dehydrated,V!==null))return fd(V)?r.lanes=16:r.lanes=536870912,null;jn(r)}return V=d.children,d=d.fallback,_?(Oi(),_=r.mode,V=Tf({mode:"hidden",children:V},_),d=Ea(d,_,u,null),V.return=r,d.return=r,V.sibling=d,r.child=V,_=r.child,_.memoizedState=Mf(u),_.childLanes=bf(a,N,u),r.memoizedState=Ad,d):(Si(r),Ef(r,V))}if(j=a.memoizedState,j!==null&&(V=j.dehydrated,V!==null)){if(M)r.flags&256?(Si(r),r.flags&=-257,r=Af(a,r,u)):r.memoizedState!==null?(Oi(),r.child=a.child,r.flags|=128,r=null):(Oi(),_=d.fallback,V=r.mode,d=Tf({mode:"visible",children:d.children},V),_=Ea(_,V,u,null),_.flags|=2,d.return=r,_.return=r,d.sibling=_,r.child=d,Ca(r,a.child,null,u),d=r.child,d.memoizedState=Mf(u),d.childLanes=bf(a,N,u),r.memoizedState=Ad,r=_);else if(Si(r),fd(V))N=HM(V).digest,d=Error(i(419)),d.stack="",d.digest=N,oe({value:d,source:null,stack:null}),r=Af(a,r,u);else if(gn||zo(a,r,u,!1),N=(u&a.childLanes)!==0,gn||N){if(N=Ze,N!==null){if(d=u&-u,(d&42)!==0)d=1;else switch(d){case 2:d=1;break;case 8:d=4;break;case 32:d=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:d=64;break;case 268435456:d=134217728;break;default:d=0}if(d=(d&(N.suspendedLanes|u))!==0?0:d,d!==0&&d!==j.retryLane)throw j.retryLane=d,bt(a,d),Vn(N,a,d),sv}hd(V)||Zf(),r=Af(a,r,u)}else hd(V)?(r.flags|=128,r.child=a.child,r=kS.bind(null,a),VM(V,r),r=null):(a=j.treeContext,Mi&&(Un=XM(V),Gn=r,Pe=!0,Fi=null,Qi=!1,a!==null&&(Ei[Ti++]=gs,Ei[Ti++]=vs,Ei[Ti++]=wa,gs=a.id,vs=a.overflow,wa=r)),r=Ef(r,d.children),r.flags|=4096);return r}return _?(Oi(),_=d.fallback,V=r.mode,j=a.child,M=j.sibling,d=ks(j,{mode:"hidden",children:d.children}),d.subtreeFlags=j.subtreeFlags&31457280,M!==null?_=ks(M,_):(_=Ea(_,V,u,null),_.flags|=2),_.return=r,d.return=r,d.sibling=_,r.child=d,d=_,_=r.child,V=a.child.memoizedState,V===null?V=Mf(u):(j=V.cachePool,j!==null?(M=ms?tn._currentValue:tn._currentValue2,j=j.parent!==M?{parent:M,pool:M}:j):j=Pg(),V={baseLanes:V.baseLanes|u,cachePool:j}),_.memoizedState=V,_.childLanes=bf(a,N,u),r.memoizedState=Ad,d):(Si(r),u=a.child,a=u.sibling,u=ks(u,{mode:"visible",children:d.children}),u.return=r,u.sibling=null,a!==null&&(N=r.deletions,N===null?(r.deletions=[a],r.flags|=16):N.push(a)),r.child=u,r.memoizedState=null,u)}function Ef(a,r){return r=Tf({mode:"visible",children:r},a.mode),r.return=a,a.child=r}function Tf(a,r){return y0(a,r,0,null)}function Af(a,r,u){return Ca(r,a.child,null,u),a=Ef(r,r.pendingProps.children),a.flags|=2,r.memoizedState=null,a}function Dg(a,r,u){a.lanes|=r;var d=a.alternate;d!==null&&(d.lanes|=r),Rf(a.return,r,u)}function wf(a,r,u,d,_){var M=a.memoizedState;M===null?a.memoizedState={isBackwards:r,rendering:null,renderingStartTime:0,last:d,tail:u,tailMode:_}:(M.isBackwards=r,M.rendering=null,M.renderingStartTime=0,M.last=d,M.tail=u,M.tailMode=_)}function Ug(a,r,u){var d=r.pendingProps,_=d.revealOrder,M=d.tail;if(bn(a,r,d.children,u),d=fn.current,(d&2)!==0)d=d&1|2,r.flags|=128;else{if(a!==null&&(a.flags&128)!==0)t:for(a=r.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&Dg(a,u,r);else if(a.tag===19)Dg(a,u,r);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===r)break t;for(;a.sibling===null;){if(a.return===null||a.return===r)break t;a=a.return}a.sibling.return=a.return,a=a.sibling}d&=1}switch(E(fn,d),_){case"forwards":for(u=r.child,_=null;u!==null;)a=u.alternate,a!==null&&_a(a)===null&&(_=u),u=u.sibling;u=_,u===null?(_=r.child,r.child=null):(_=u.sibling,u.sibling=null),wf(r,!1,_,u,M);break;case"backwards":for(u=null,_=r.child,r.child=null;_!==null;){if(a=_.alternate,a!==null&&_a(a)===null){r.child=_;break}a=_.sibling,_.sibling=u,u=_,_=a}wf(r,!0,u,null,M);break;case"together":wf(r,!1,null,null,void 0);break;default:r.memoizedState=null}return r.child}function hs(a,r,u){if(a!==null&&(r.dependencies=a.dependencies),Js|=r.lanes,(u&r.childLanes)===0)if(a!==null){if(zo(a,r,u,!1),(u&r.childLanes)===0)return null}else return null;if(a!==null&&r.child!==a.child)throw Error(i(153));if(r.child!==null){for(a=r.child,u=ks(a,a.pendingProps),r.child=u,u.return=r;a.sibling!==null;)a=a.sibling,u=u.sibling=ks(a,a.pendingProps),u.return=r;u.sibling=null}return r.child}function Cf(a,r){return(a.lanes&r)!==0?!0:(a=a.dependencies,!!(a!==null&&fc(a)))}function NS(a,r,u){switch(r.tag){case 3:$(r,r.stateNode.containerInfo),Fs(r,tn,a.memoizedState.cache),xe();break;case 27:case 5:Wt(r);break;case 4:$(r,r.stateNode.containerInfo);break;case 10:Fs(r,r.type,r.memoizedProps.value);break;case 13:var d=r.memoizedState;if(d!==null)return d.dehydrated!==null?(Si(r),r.flags|=128,null):(u&r.child.childLanes)!==0?Rg(a,r,u):(Si(r),a=hs(a,r,u),a!==null?a.sibling:null);Si(r);break;case 19:var _=(a.flags&128)!==0;if(d=(u&r.childLanes)!==0,d||(zo(a,r,u,!1),d=(u&r.childLanes)!==0),_){if(d)return Ug(a,r,u);r.flags|=128}if(_=r.memoizedState,_!==null&&(_.rendering=null,_.tail=null,_.lastEffect=null),E(fn,fn.current),d)break;return null;case 22:case 23:return r.lanes=0,Eg(a,r,u);case 24:Fs(r,tn,a.memoizedState.cache)}return hs(a,r,u)}function Ng(a,r,u){if(a!==null)if(a.memoizedProps!==r.pendingProps)gn=!0;else{if(!Cf(a,u)&&(r.flags&128)===0)return gn=!1,NS(a,r,u);gn=(a.flags&131072)!==0}else gn=!1,Pe&&(r.flags&1048576)!==0&&mt(r,wc,r.index);switch(r.lanes=0,r.tag){case 16:t:{a=r.pendingProps;var d=r.elementType,_=d._init;if(d=_(d._payload),r.type=d,typeof d=="function")Jf(d)?(a=ya(d,a),r.tag=1,r=wg(null,r,d,a,u)):(r.tag=0,r=Sf(null,r,d,a,u));else{if(d!=null){if(_=d.$$typeof,_===id){r.tag=11,r=Sg(null,r,d,a,u);break t}else if(_===rd){r.tag=14,r=Mg(null,r,d,a,u);break t}}throw r=l(d)||d,Error(i(306,r,""))}}return r;case 0:return Sf(a,r,r.type,r.pendingProps,u);case 1:return d=r.type,_=ya(d,r.pendingProps),wg(a,r,d,_,u);case 3:t:{if($(r,r.stateNode.containerInfo),a===null)throw Error(i(387));var M=r.pendingProps;_=r.memoizedState,d=_.element,Yt(a,r),ne(r,M,null,u);var N=r.memoizedState;if(M=N.cache,Fs(r,tn,M),M!==_.cache&&Df(r,[tn],u,!0),At(),M=N.element,Mi&&_.isDehydrated)if(_={element:M,isDehydrated:!1,cache:N.cache},r.updateQueue.baseState=_,r.memoizedState=_,r.flags&256){r=Cg(a,r,M,u);break t}else if(M!==d){d=st(Error(i(424)),r),oe(d),r=Cg(a,r,M,u);break t}else for(Mi&&(Un=WM(r.stateNode.containerInfo),Gn=r,Pe=!0,Fi=null,Qi=!0),u=nv(r,null,M,u),r.child=u;u;)u.flags=u.flags&-3|4096,u=u.sibling;else{if(xe(),M===d){r=hs(a,r,u);break t}bn(a,r,M,u)}r=r.child}return r;case 26:if(bi)return Bo(a,r),a===null?(u=q0(r.type,null,r.pendingProps,null))?r.memoizedState=u:Pe||(r.stateNode=rb(r.type,r.pendingProps,Ys.current,r)):r.memoizedState=q0(r.type,a.memoizedProps,r.pendingProps,a.memoizedState),null;case 27:if(Dn)return Wt(r),a===null&&Dn&&Pe&&(d=r.stateNode=Q0(r.type,r.pendingProps,Ys.current,En.current,!1),Gn=r,Qi=!0,Un=k0(d)),d=r.pendingProps.children,a!==null||Pe?bn(a,r,d,u):r.child=Ca(r,null,d,u),Bo(a,r),r.child;case 5:return a===null&&Pe&&(ib(r.type,r.pendingProps,En.current),(_=d=Un)&&(d=qM(d,r.type,r.pendingProps,Qi),d!==null?(r.stateNode=d,Gn=r,Un=k0(d),Qi=!1,_=!0):_=!1),_||Vt(r)),Wt(r),_=r.type,M=r.pendingProps,N=a!==null?a.memoizedProps:null,d=M.children,Mc(_,M)?d=null:N!==null&&Mc(_,N)&&(r.flags|=32),r.memoizedState!==null&&(_=mr(a,r,df,null,null,u),ms?Aa._currentValue=_:Aa._currentValue2=_),Bo(a,r),bn(a,r,d,u),r.child;case 6:return a===null&&Pe&&(sb(r.pendingProps,En.current),(a=u=Un)&&(u=YM(u,r.pendingProps,Qi),u!==null?(r.stateNode=u,Gn=r,Un=null,a=!0):a=!1),a||Vt(r)),null;case 13:return Rg(a,r,u);case 4:return $(r,r.stateNode.containerInfo),d=r.pendingProps,a===null?r.child=Ca(r,null,d,u):bn(a,r,d,u),r.child;case 11:return Sg(a,r,r.type,r.pendingProps,u);case 7:return bn(a,r,r.pendingProps,u),r.child;case 8:return bn(a,r,r.pendingProps.children,u),r.child;case 12:return bn(a,r,r.pendingProps.children,u),r.child;case 10:return d=r.pendingProps,Fs(r,r.type,d.value),bn(a,r,d.children,u),r.child;case 9:return _=r.type._context,d=r.pendingProps.children,xa(r),_=Cn(_),d=d(_),r.flags|=1,bn(a,r,d,u),r.child;case 14:return Mg(a,r,r.type,r.pendingProps,u);case 15:return bg(a,r,r.type,r.pendingProps,u);case 19:return Ug(a,r,u);case 22:return Eg(a,r,u);case 24:return xa(r),d=Cn(tn),a===null?(_=Nf(),_===null&&(_=Ze,M=Uf(),_.pooledCache=M,M.refCount++,M!==null&&(_.pooledCacheLanes|=u),_=M),r.memoizedState={parent:d,cache:_},Gt(r),Fs(r,tn,_)):((a.lanes&u)!==0&&(Yt(a,r),ne(r,null,null,u),At()),_=a.memoizedState,M=r.memoizedState,_.parent!==d?(_={parent:d,cache:d},r.memoizedState=_,r.lanes===0&&(r.memoizedState=r.updateQueue.baseState=_),Fs(r,tn,d)):(d=M.cache,Fs(r,tn,d),d!==_.cache&&Df(r,[tn],u,!0))),bn(a,r,r.pendingProps.children,u),r.child;case 29:throw r.pendingProps}throw Error(i(156,r.tag))}function Fs(a,r,u){ms?(E(Ic,r._currentValue),r._currentValue=u):(E(Ic,r._currentValue2),r._currentValue2=u)}function fs(a){var r=Ic.current;ms?a._currentValue=r:a._currentValue2=r,y(Ic)}function Rf(a,r,u){for(;a!==null;){var d=a.alternate;if((a.childLanes&r)!==r?(a.childLanes|=r,d!==null&&(d.childLanes|=r)):d!==null&&(d.childLanes&r)!==r&&(d.childLanes|=r),a===u)break;a=a.return}}function Df(a,r,u,d){var _=a.child;for(_!==null&&(_.return=a);_!==null;){var M=_.dependencies;if(M!==null){var N=_.child;M=M.firstContext;t:for(;M!==null;){var V=M;M=_;for(var j=0;j<r.length;j++)if(V.context===r[j]){M.lanes|=u,V=M.alternate,V!==null&&(V.lanes|=u),Rf(M.return,u,a),d||(N=null);break t}M=V.next}}else if(_.tag===18){if(N=_.return,N===null)throw Error(i(341));N.lanes|=u,M=N.alternate,M!==null&&(M.lanes|=u),Rf(N,u,a),N=null}else N=_.child;if(N!==null)N.return=_;else for(N=_;N!==null;){if(N===a){N=null;break}if(_=N.sibling,_!==null){_.return=N.return,N=_;break}N=N.return}_=N}}function zo(a,r,u,d){a=null;for(var _=r,M=!1;_!==null;){if(!M){if((_.flags&524288)!==0)M=!0;else if((_.flags&262144)!==0)break}if(_.tag===10){var N=_.alternate;if(N===null)throw Error(i(387));if(N=N.memoizedProps,N!==null){var V=_.type;di(_.pendingProps.value,N.value)||(a!==null?a.push(V):a=[V])}}else if(_===Cc.current){if(N=_.alternate,N===null)throw Error(i(387));N.memoizedState.memoizedState!==_.memoizedState.memoizedState&&(a!==null?a.push(Aa):a=[Aa])}_=_.return}a!==null&&Df(r,a,u,d),r.flags|=262144}function fc(a){for(a=a.firstContext;a!==null;){var r=a.context;if(!di(ms?r._currentValue:r._currentValue2,a.memoizedValue))return!0;a=a.next}return!1}function xa(a){Na=a,_s=null,a=a.dependencies,a!==null&&(a.firstContext=null)}function Cn(a){return Lg(Na,a)}function dc(a,r){return Na===null&&xa(a),Lg(a,r)}function Lg(a,r){var u=ms?r._currentValue:r._currentValue2;if(r={context:r,memoizedValue:u,next:null},_s===null){if(a===null)throw Error(i(308));_s=r,a.dependencies={lanes:0,firstContext:r},a.flags|=524288}else _s=_s.next=r;return u}function Uf(){return{controller:new bb,data:new Map,refCount:0}}function Fo(a){a.refCount--,a.refCount===0&&Eb(Tb,function(){a.controller.abort()})}function Nf(){var a=La.current;return a!==null?a:Ze.pooledCache}function pc(a,r){r===null?E(La,La.current):E(La,r.pool)}function Pg(){var a=Nf();return a===null?null:{parent:ms?tn._currentValue:tn._currentValue2,pool:a}}function ri(a){a.flags|=4}function Ig(a,r){if(a!==null&&a.child===r.child)return!1;if((r.flags&16)!==0)return!0;for(a=r.child;a!==null;){if((a.flags&13878)!==0||(a.subtreeFlags&13878)!==0)return!0;a=a.sibling}return!1}function Lf(a,r,u,d){if(Rn)for(u=r.child;u!==null;){if(u.tag===5||u.tag===6)cd(a,u.stateNode);else if(!(u.tag===4||Dn&&u.tag===27)&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===r)break;for(;u.sibling===null;){if(u.return===null||u.return===r)return;u=u.return}u.sibling.return=u.return,u=u.sibling}else if(qs)for(var _=r.child;_!==null;){if(_.tag===5){var M=_.stateNode;u&&d&&(M=H0(M,_.type,_.memoizedProps)),cd(a,M)}else if(_.tag===6)M=_.stateNode,u&&d&&(M=V0(M,_.memoizedProps)),cd(a,M);else if(_.tag!==4){if(_.tag===22&&_.memoizedState!==null)M=_.child,M!==null&&(M.return=_),Lf(a,_,!0,!0);else if(_.child!==null){_.child.return=_,_=_.child;continue}}if(_===r)break;for(;_.sibling===null;){if(_.return===null||_.return===r)return;_=_.return}_.sibling.return=_.return,_=_.sibling}}function Og(a,r,u,d){if(qs)for(var _=r.child;_!==null;){if(_.tag===5){var M=_.stateNode;u&&d&&(M=H0(M,_.type,_.memoizedProps)),z0(a,M)}else if(_.tag===6)M=_.stateNode,u&&d&&(M=V0(M,_.memoizedProps)),z0(a,M);else if(_.tag!==4){if(_.tag===22&&_.memoizedState!==null)M=_.child,M!==null&&(M.return=_),Og(a,_,!(_.memoizedProps!==null&&_.memoizedProps.mode==="manual"),!0);else if(_.child!==null){_.child.return=_,_=_.child;continue}}if(_===r)break;for(;_.sibling===null;){if(_.return===null||_.return===r)return;_=_.return}_.sibling.return=_.return,_=_.sibling}}function Bg(a,r){if(qs&&Ig(a,r)){a=r.stateNode;var u=a.containerInfo,d=B0();Og(d,r,!1,!1),a.pendingChildren=d,ri(r),FM(u,d)}}function Pf(a,r,u,d){if(Rn)a.memoizedProps!==d&&ri(r);else if(qs){var _=a.stateNode,M=a.memoizedProps;if((a=Ig(a,r))||M!==d){var N=En.current;M=zM(_,u,M,d,!a,null),M===_?r.stateNode=_:(U0(M,u,d,N)&&ri(r),r.stateNode=M,a?Lf(M,r,!1,!1):ri(r))}else r.stateNode=_}}function If(a,r,u){if(fM(r,u)){if(a.flags|=16777216,!P0(r,u))if(l0())a.flags|=8192;else throw Nr=Uc,bd}else a.flags&=-16777217}function zg(a,r){if(lb(r)){if(a.flags|=16777216,!J0(r))if(l0())a.flags|=8192;else throw Nr=Uc,bd}else a.flags&=-16777217}function mc(a,r){r!==null&&(a.flags|=4),a.flags&16384&&(r=a.tag!==22?C():536870912,a.lanes|=r,Fr|=r)}function Ho(a,r){if(!Pe)switch(a.tailMode){case"hidden":r=a.tail;for(var u=null;r!==null;)r.alternate!==null&&(u=r),r=r.sibling;u===null?a.tail=null:u.sibling=null;break;case"collapsed":u=a.tail;for(var d=null;u!==null;)u.alternate!==null&&(d=u),u=u.sibling;d===null?r||a.tail===null?a.tail=null:a.tail.sibling=null:d.sibling=null}}function Je(a){var r=a.alternate!==null&&a.alternate.child===a.child,u=0,d=0;if(r)for(var _=a.child;_!==null;)u|=_.lanes|_.childLanes,d|=_.subtreeFlags&31457280,d|=_.flags&31457280,_.return=a,_=_.sibling;else for(_=a.child;_!==null;)u|=_.lanes|_.childLanes,d|=_.subtreeFlags,d|=_.flags,_.return=a,_=_.sibling;return a.subtreeFlags|=d,a.childLanes=u,r}function LS(a,r,u){var d=r.pendingProps;switch(jt(r),r.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Je(r),null;case 1:return Je(r),null;case 3:return u=r.stateNode,d=null,a!==null&&(d=a.memoizedState.cache),r.memoizedState.cache!==d&&(r.flags|=2048),fs(tn),gt(),u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),(a===null||a.child===null)&&(Be(r)?ri(r):a===null||a.memoizedState.isDehydrated&&(r.flags&256)===0||(r.flags|=1024,Fi!==null&&(qf(Fi),Fi=null))),Bg(a,r),Je(r),null;case 26:if(bi){u=r.type;var _=r.memoizedState;return a===null?(ri(r),_!==null?(Je(r),zg(r,_)):(Je(r),If(r,u,d))):_?_!==a.memoizedState?(ri(r),Je(r),zg(r,_)):(Je(r),r.flags&=-16777217):(Rn?a.memoizedProps!==d&&ri(r):Pf(a,r,u,d),Je(r),If(r,u,d)),null}case 27:if(Dn){if(Dt(r),u=Ys.current,_=r.type,a!==null&&r.stateNode!=null)Rn?a.memoizedProps!==d&&ri(r):Pf(a,r,_,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return Je(r),null}a=En.current,Be(r)?fe(r,a):(a=Q0(_,d,u,a,!0),r.stateNode=a,ri(r))}return Je(r),null}case 5:if(Dt(r),u=r.type,a!==null&&r.stateNode!=null)Pf(a,r,u,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return Je(r),null}a=En.current,Be(r)?fe(r,a):(_=aM(u,d,Ys.current,a,r),Lf(_,r,!1,!1),r.stateNode=_,U0(_,u,d,a)&&ri(r))}return Je(r),If(r,r.type,r.pendingProps),null;case 6:if(a&&r.stateNode!=null)u=a.memoizedProps,Rn?u!==d&&ri(r):qs&&(u!==d?(r.stateNode=N0(d,Ys.current,En.current,r),ri(r)):r.stateNode=a.stateNode);else{if(typeof d!="string"&&r.stateNode===null)throw Error(i(166));if(a=Ys.current,u=En.current,Be(r)){if(!Mi)throw Error(i(176));if(a=r.stateNode,u=r.memoizedProps,d=null,_=Gn,_!==null)switch(_.tag){case 27:case 5:d=_.memoizedProps}KM(a,u,r,d)||Vt(r)}else r.stateNode=N0(d,a,u,r)}return Je(r),null;case 13:if(d=r.memoizedState,a===null||a.memoizedState!==null&&a.memoizedState.dehydrated!==null){if(_=Be(r),d!==null&&d.dehydrated!==null){if(a===null){if(!_)throw Error(i(318));if(!Mi)throw Error(i(344));if(_=r.memoizedState,_=_!==null?_.dehydrated:null,!_)throw Error(i(317));JM(_,r)}else xe(),(r.flags&128)===0&&(r.memoizedState=null),r.flags|=4;Je(r),_=!1}else Fi!==null&&(qf(Fi),Fi=null),_=!0;if(!_)return r.flags&256?(jn(r),r):(jn(r),null)}if(jn(r),(r.flags&128)!==0)return r.lanes=u,r;if(u=d!==null,a=a!==null&&a.memoizedState!==null,u){d=r.child,_=null,d.alternate!==null&&d.alternate.memoizedState!==null&&d.alternate.memoizedState.cachePool!==null&&(_=d.alternate.memoizedState.cachePool.pool);var M=null;d.memoizedState!==null&&d.memoizedState.cachePool!==null&&(M=d.memoizedState.cachePool.pool),M!==_&&(d.flags|=2048)}return u!==a&&u&&(r.child.flags|=8192),mc(r,r.updateQueue),Je(r),null;case 4:return gt(),Bg(a,r),a===null&&lM(r.stateNode.containerInfo),Je(r),null;case 10:return fs(r.type),Je(r),null;case 19:if(y(fn),_=r.memoizedState,_===null)return Je(r),null;if(d=(r.flags&128)!==0,M=_.rendering,M===null)if(d)Ho(_,!1);else{if(nn!==0||a!==null&&(a.flags&128)!==0)for(a=r.child;a!==null;){if(M=_a(a),M!==null){for(r.flags|=128,Ho(_,!1),a=M.updateQueue,r.updateQueue=a,mc(r,a),r.subtreeFlags=0,a=u,u=r.child;u!==null;)_0(u,a),u=u.sibling;return E(fn,fn.current&1|2),r.child}a=a.sibling}_.tail!==null&&zi()>el&&(r.flags|=128,d=!0,Ho(_,!1),r.lanes=4194304)}else{if(!d)if(a=_a(M),a!==null){if(r.flags|=128,d=!0,a=a.updateQueue,r.updateQueue=a,mc(r,a),Ho(_,!0),_.tail===null&&_.tailMode==="hidden"&&!M.alternate&&!Pe)return Je(r),null}else 2*zi()-_.renderingStartTime>el&&u!==536870912&&(r.flags|=128,d=!0,Ho(_,!1),r.lanes=4194304);_.isBackwards?(M.sibling=r.child,r.child=M):(a=_.last,a!==null?a.sibling=M:r.child=M,_.last=M)}return _.tail!==null?(r=_.tail,_.rendering=r,_.tail=r.sibling,_.renderingStartTime=zi(),r.sibling=null,a=fn.current,E(fn,d?a&1|2:a&1),r):(Je(r),null);case 22:case 23:return jn(r),Ii(),d=r.memoizedState!==null,a!==null?a.memoizedState!==null!==d&&(r.flags|=8192):d&&(r.flags|=8192),d?(u&536870912)!==0&&(r.flags&128)===0&&(Je(r),r.subtreeFlags&6&&(r.flags|=8192)):Je(r),u=r.updateQueue,u!==null&&mc(r,u.retryQueue),u=null,a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),d=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(d=r.memoizedState.cachePool.pool),d!==u&&(r.flags|=2048),a!==null&&y(La),null;case 24:return u=null,a!==null&&(u=a.memoizedState.cache),r.memoizedState.cache!==u&&(r.flags|=2048),fs(tn),Je(r),null;case 25:return null}throw Error(i(156,r.tag))}function PS(a,r){switch(jt(r),r.tag){case 1:return a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 3:return fs(tn),gt(),a=r.flags,(a&65536)!==0&&(a&128)===0?(r.flags=a&-65537|128,r):null;case 26:case 27:case 5:return Dt(r),null;case 13:if(jn(r),a=r.memoizedState,a!==null&&a.dehydrated!==null){if(r.alternate===null)throw Error(i(340));xe()}return a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 19:return y(fn),null;case 4:return gt(),null;case 10:return fs(r.type),null;case 22:case 23:return jn(r),Ii(),a!==null&&y(La),a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 24:return fs(tn),null;case 25:return null;default:return null}}function Fg(a,r){switch(jt(r),r.tag){case 3:fs(tn),gt();break;case 26:case 27:case 5:Dt(r);break;case 4:gt();break;case 13:jn(r);break;case 19:y(fn);break;case 10:fs(r.type);break;case 22:case 23:jn(r),Ii(),a!==null&&y(La);break;case 24:fs(tn)}}function Vo(a,r){try{var u=r.updateQueue,d=u!==null?u.lastEffect:null;if(d!==null){var _=d.next;u=_;do{if((u.tag&a)===a){d=void 0;var M=u.create,N=u.inst;d=M(),N.destroy=d}u=u.next}while(u!==_)}}catch(V){Fe(r,r.return,V)}}function Hs(a,r,u){try{var d=r.updateQueue,_=d!==null?d.lastEffect:null;if(_!==null){var M=_.next;d=M;do{if((d.tag&a)===a){var N=d.inst,V=N.destroy;if(V!==void 0){N.destroy=void 0,_=r;var j=u;try{V()}catch(ct){Fe(_,j,ct)}}}d=d.next}while(d!==M)}}catch(ct){Fe(r,r.return,ct)}}function Hg(a){var r=a.updateQueue;if(r!==null){var u=a.stateNode;try{Nt(r,u)}catch(d){Fe(a,a.return,d)}}}function Vg(a,r,u){u.props=ya(a.type,a.memoizedProps),u.state=a.memoizedState;try{u.componentWillUnmount()}catch(d){Fe(a,r,d)}}function Sa(a,r){try{var u=a.ref;if(u!==null){var d=a.stateNode;switch(a.tag){case 26:case 27:case 5:var _=Wo(d);break;default:_=d}typeof u=="function"?a.refCleanup=u(_):u.current=_}}catch(M){Fe(a,r,M)}}function oi(a,r){var u=a.ref,d=a.refCleanup;if(u!==null)if(typeof d=="function")try{d()}catch(_){Fe(a,r,_)}finally{a.refCleanup=null,a=a.alternate,a!=null&&(a.refCleanup=null)}else if(typeof u=="function")try{u(null)}catch(_){Fe(a,r,_)}else u.current=null}function Gg(a){var r=a.type,u=a.memoizedProps,d=a.stateNode;try{wM(d,r,u,a)}catch(_){Fe(a,a.return,_)}}function kg(a,r,u){try{CM(a.stateNode,a.type,u,r,a)}catch(d){Fe(a,a.return,d)}}function Wg(a){return a.tag===5||a.tag===3||(bi?a.tag===26:!1)||(Dn?a.tag===27:!1)||a.tag===4}function Of(a){t:for(;;){for(;a.sibling===null;){if(a.return===null||Wg(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&(!Dn||a.tag!==27)&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue t;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function Bf(a,r,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,r?DM(u,a,r):TM(u,a);else if(!(d===4||Dn&&d===27)&&(a=a.child,a!==null))for(Bf(a,r,u),a=a.sibling;a!==null;)Bf(a,r,u),a=a.sibling}function gc(a,r,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,r?RM(u,a,r):EM(u,a);else if(!(d===4||Dn&&d===27)&&(a=a.child,a!==null))for(gc(a,r,u),a=a.sibling;a!==null;)gc(a,r,u),a=a.sibling}function Xg(a,r,u){a=a.containerInfo;try{F0(a,u)}catch(d){Fe(r,r.return,d)}}function IS(a,r){for(iM(a.containerInfo),vn=r;vn!==null;)if(a=vn,r=a.child,(a.subtreeFlags&1028)!==0&&r!==null)r.return=a,vn=r;else for(;vn!==null;){a=vn;var u=a.alternate;switch(r=a.flags,a.tag){case 0:break;case 11:case 15:break;case 1:if((r&1024)!==0&&u!==null){r=void 0;var d=a,_=u.memoizedProps;u=u.memoizedState;var M=d.stateNode;try{var N=ya(d.type,_,d.elementType===d.type);r=M.getSnapshotBeforeUpdate(N,u),M.__reactInternalSnapshotBeforeUpdate=r}catch(V){Fe(d,d.return,V)}}break;case 3:(r&1024)!==0&&Rn&&BM(a.stateNode.containerInfo);break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((r&1024)!==0)throw Error(i(163))}if(r=a.sibling,r!==null){r.return=a.return,vn=r;break}vn=a.return}return N=ov,ov=!1,N}function qg(a,r,u){var d=u.flags;switch(u.tag){case 0:case 11:case 15:ds(a,u),d&4&&Vo(5,u);break;case 1:if(ds(a,u),d&4)if(a=u.stateNode,r===null)try{a.componentDidMount()}catch(V){Fe(u,u.return,V)}else{var _=ya(u.type,r.memoizedProps);r=r.memoizedState;try{a.componentDidUpdate(_,r,a.__reactInternalSnapshotBeforeUpdate)}catch(V){Fe(u,u.return,V)}}d&64&&Hg(u),d&512&&Sa(u,u.return);break;case 3:if(ds(a,u),d&64&&(d=u.updateQueue,d!==null)){if(a=null,u.child!==null)switch(u.child.tag){case 27:case 5:a=Wo(u.child.stateNode);break;case 1:a=u.child.stateNode}try{Nt(d,a)}catch(V){Fe(u,u.return,V)}}break;case 26:if(bi){ds(a,u),d&512&&Sa(u,u.return);break}case 27:case 5:ds(a,u),r===null&&d&4&&Gg(u),d&512&&Sa(u,u.return);break;case 12:ds(a,u);break;case 13:ds(a,u),d&4&&Zg(a,u);break;case 22:if(_=u.memoizedState!==null||ys,!_){r=r!==null&&r.memoizedState!==null||en;var M=ys,N=en;ys=_,(en=r)&&!N?Vs(a,u,(u.subtreeFlags&8772)!==0):ds(a,u),ys=M,en=N}d&512&&(u.memoizedProps.mode==="manual"?Sa(u,u.return):oi(u,u.return));break;default:ds(a,u)}}function Yg(a){var r=a.alternate;r!==null&&(a.alternate=null,Yg(r)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(r=a.stateNode,r!==null&&hM(r)),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function Bi(a,r,u){for(u=u.child;u!==null;)zf(a,r,u),u=u.sibling}function zf(a,r,u){if(fi&&typeof fi.onCommitFiberUnmount=="function")try{fi.onCommitFiberUnmount(Yo,u)}catch{}switch(u.tag){case 26:if(bi){en||oi(u,r),Bi(a,r,u),u.memoizedState?Z0(u.memoizedState):u.stateNode&&K0(u.stateNode);break}case 27:if(Dn){en||oi(u,r);var d=cn,_=pi;cn=u.stateNode,Bi(a,r,u),fb(u.stateNode),cn=d,pi=_;break}case 5:en||oi(u,r);case 6:if(Rn){if(d=cn,_=pi,cn=null,Bi(a,r,u),cn=d,pi=_,cn!==null)if(pi)try{NM(cn,u.stateNode)}catch(M){Fe(u,r,M)}else try{UM(cn,u.stateNode)}catch(M){Fe(u,r,M)}}else Bi(a,r,u);break;case 18:Rn&&cn!==null&&(pi?nb(cn,u.stateNode):eb(cn,u.stateNode));break;case 4:Rn?(d=cn,_=pi,cn=u.stateNode.containerInfo,pi=!0,Bi(a,r,u),cn=d,pi=_):(qs&&Xg(u.stateNode,u,B0()),Bi(a,r,u));break;case 0:case 11:case 14:case 15:en||Hs(2,u,r),en||Hs(4,u,r),Bi(a,r,u);break;case 1:en||(oi(u,r),d=u.stateNode,typeof d.componentWillUnmount=="function"&&Vg(u,r,d)),Bi(a,r,u);break;case 21:Bi(a,r,u);break;case 22:en||oi(u,r),en=(d=en)||u.memoizedState!==null,Bi(a,r,u),en=d;break;default:Bi(a,r,u)}}function Zg(a,r){if(Mi&&r.memoizedState===null&&(a=r.alternate,a!==null&&(a=a.memoizedState,a!==null&&(a=a.dehydrated,a!==null))))try{tb(a)}catch(u){Fe(r,r.return,u)}}function OS(a){switch(a.tag){case 13:case 19:var r=a.stateNode;return r===null&&(r=a.stateNode=new rv),r;case 22:return a=a.stateNode,r=a._retryCache,r===null&&(r=a._retryCache=new rv),r;default:throw Error(i(435,a.tag))}}function Ff(a,r){var u=OS(a);r.forEach(function(d){var _=WS.bind(null,a,d);u.has(d)||(u.add(d),d.then(_,_))})}function Jn(a,r){var u=r.deletions;if(u!==null)for(var d=0;d<u.length;d++){var _=u[d],M=a,N=r;if(Rn){var V=N;t:for(;V!==null;){switch(V.tag){case 27:case 5:cn=V.stateNode,pi=!1;break t;case 3:cn=V.stateNode.containerInfo,pi=!0;break t;case 4:cn=V.stateNode.containerInfo,pi=!0;break t}V=V.return}if(cn===null)throw Error(i(160));zf(M,N,_),cn=null,pi=!1}else zf(M,N,_);M=_.alternate,M!==null&&(M.return=null),_.return=null}if(r.subtreeFlags&13878)for(r=r.child;r!==null;)jg(r,a),r=r.sibling}function jg(a,r){var u=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:Jn(r,a),li(a),d&4&&(Hs(3,a,a.return),Vo(3,a),Hs(5,a,a.return));break;case 1:Jn(r,a),li(a),d&512&&(en||u===null||oi(u,u.return)),d&64&&ys&&(a=a.updateQueue,a!==null&&(d=a.callbacks,d!==null&&(u=a.shared.hiddenCallbacks,a.shared.hiddenCallbacks=u===null?d:u.concat(d))));break;case 26:if(bi){var _=Hi;Jn(r,a),li(a),d&512&&(en||u===null||oi(u,u.return)),d&4&&(d=u!==null?u.memoizedState:null,r=a.memoizedState,u===null?r===null?a.stateNode===null?a.stateNode=ab(_,a.type,a.memoizedProps,a):j0(_,a.type,a.stateNode):a.stateNode=Y0(_,r,a.memoizedProps):d!==r?(d===null?u.stateNode!==null&&K0(u.stateNode):Z0(d),r===null?j0(_,a.type,a.stateNode):Y0(_,r,a.memoizedProps)):r===null&&a.stateNode!==null&&kg(a,a.memoizedProps,u.memoizedProps));break}case 27:if(Dn&&d&4&&a.alternate===null){_=a.stateNode;var M=a.memoizedProps;try{ub(_),hb(a.type,M,_,a)}catch(Et){Fe(a,a.return,Et)}}case 5:if(Jn(r,a),li(a),d&512&&(en||u===null||oi(u,u.return)),Rn){if(a.flags&32){r=a.stateNode;try{O0(r)}catch(Et){Fe(a,a.return,Et)}}d&4&&a.stateNode!=null&&(r=a.memoizedProps,kg(a,r,u!==null?u.memoizedProps:r)),d&1024&&(wd=!0)}break;case 6:if(Jn(r,a),li(a),d&4&&Rn){if(a.stateNode===null)throw Error(i(162));d=a.memoizedProps,u=u!==null?u.memoizedProps:d,r=a.stateNode;try{AM(r,u,d)}catch(Et){Fe(a,a.return,Et)}}break;case 3:if(bi?(ob(),_=Hi,Hi=dd(r.containerInfo),Jn(r,a),Hi=_):Jn(r,a),li(a),d&4){if(Rn&&Mi&&u!==null&&u.memoizedState.isDehydrated)try{$M(r.containerInfo)}catch(Et){Fe(a,a.return,Et)}if(qs){d=r.containerInfo,u=r.pendingChildren;try{F0(d,u)}catch(Et){Fe(a,a.return,Et)}}}wd&&(wd=!1,Kg(a));break;case 4:bi?(u=Hi,Hi=dd(a.stateNode.containerInfo),Jn(r,a),li(a),Hi=u):(Jn(r,a),li(a)),d&4&&qs&&Xg(a.stateNode,a,a.stateNode.pendingChildren);break;case 12:Jn(r,a),li(a);break;case 13:Jn(r,a),li(a),a.child.flags&8192&&a.memoizedState!==null!=(u!==null&&u.memoizedState!==null)&&(Ud=zi()),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,Ff(a,d)));break;case 22:d&512&&(en||u===null||oi(u,u.return)),_=a.memoizedState!==null;var N=u!==null&&u.memoizedState!==null,V=ys,j=en;if(ys=V||_,en=j||N,Jn(r,a),en=j,ys=V,li(a),r=a.stateNode,r._current=a,r._visibility&=-3,r._visibility|=r._pendingVisibility&2,d&8192&&(r._visibility=_?r._visibility&-2:r._visibility|1,_&&(r=ys||en,u===null||N||r||gr(a)),Rn&&(a.memoizedProps===null||a.memoizedProps.mode!=="manual"))){t:if(u=null,Rn)for(r=a;;){if(r.tag===5||bi&&r.tag===26||Dn&&r.tag===27){if(u===null){N=u=r;try{M=N.stateNode,_?LM(M):IM(N.stateNode,N.memoizedProps)}catch(Et){Fe(N,N.return,Et)}}}else if(r.tag===6){if(u===null){N=r;try{var ct=N.stateNode;_?PM(ct):OM(ct,N.memoizedProps)}catch(Et){Fe(N,N.return,Et)}}}else if((r.tag!==22&&r.tag!==23||r.memoizedState===null||r===a)&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===a)break t;for(;r.sibling===null;){if(r.return===null||r.return===a)break t;u===r&&(u=null),r=r.return}u===r&&(u=null),r.sibling.return=r.return,r=r.sibling}}d&4&&(d=a.updateQueue,d!==null&&(u=d.retryQueue,u!==null&&(d.retryQueue=null,Ff(a,u))));break;case 19:Jn(r,a),li(a),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,Ff(a,d)));break;case 21:break;default:Jn(r,a),li(a)}}function li(a){var r=a.flags;if(r&2){try{if(Rn&&(!Dn||a.tag!==27)){t:{for(var u=a.return;u!==null;){if(Wg(u)){var d=u;break t}u=u.return}throw Error(i(160))}switch(d.tag){case 27:if(Dn){var _=d.stateNode,M=Of(a);gc(a,M,_);break}case 5:var N=d.stateNode;d.flags&32&&(O0(N),d.flags&=-33);var V=Of(a);gc(a,V,N);break;case 3:case 4:var j=d.stateNode.containerInfo,ct=Of(a);Bf(a,ct,j);break;default:throw Error(i(161))}}}catch(Et){Fe(a,a.return,Et)}a.flags&=-3}r&4096&&(a.flags&=-4097)}function Kg(a){if(a.subtreeFlags&1024)for(a=a.child;a!==null;){var r=a;Kg(r),r.tag===5&&r.flags&1024&&mM(r.stateNode),a=a.sibling}}function ds(a,r){if(r.subtreeFlags&8772)for(r=r.child;r!==null;)qg(a,r.alternate,r),r=r.sibling}function gr(a){for(a=a.child;a!==null;){var r=a;switch(r.tag){case 0:case 11:case 14:case 15:Hs(4,r,r.return),gr(r);break;case 1:oi(r,r.return);var u=r.stateNode;typeof u.componentWillUnmount=="function"&&Vg(r,r.return,u),gr(r);break;case 26:case 27:case 5:oi(r,r.return),gr(r);break;case 22:oi(r,r.return),r.memoizedState===null&&gr(r);break;default:gr(r)}a=a.sibling}}function Vs(a,r,u){for(u=u&&(r.subtreeFlags&8772)!==0,r=r.child;r!==null;){var d=r.alternate,_=a,M=r,N=M.flags;switch(M.tag){case 0:case 11:case 15:Vs(_,M,u),Vo(4,M);break;case 1:if(Vs(_,M,u),d=M,_=d.stateNode,typeof _.componentDidMount=="function")try{_.componentDidMount()}catch(ct){Fe(d,d.return,ct)}if(d=M,_=d.updateQueue,_!==null){var V=d.stateNode;try{var j=_.shared.hiddenCallbacks;if(j!==null)for(_.shared.hiddenCallbacks=null,_=0;_<j.length;_++)k(j[_],V)}catch(ct){Fe(d,d.return,ct)}}u&&N&64&&Hg(M),Sa(M,M.return);break;case 26:case 27:case 5:Vs(_,M,u),u&&d===null&&N&4&&Gg(M),Sa(M,M.return);break;case 12:Vs(_,M,u);break;case 13:Vs(_,M,u),u&&N&4&&Zg(_,M);break;case 22:M.memoizedState===null&&Vs(_,M,u),Sa(M,M.return);break;default:Vs(_,M,u)}r=r.sibling}}function Hf(a,r){var u=null;a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),a=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(a=r.memoizedState.cachePool.pool),a!==u&&(a!=null&&a.refCount++,u!=null&&Fo(u))}function Vf(a,r){a=null,r.alternate!==null&&(a=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==a&&(r.refCount++,a!=null&&Fo(a))}function Gs(a,r,u,d){if(r.subtreeFlags&10256)for(r=r.child;r!==null;)Jg(a,r,u,d),r=r.sibling}function Jg(a,r,u,d){var _=r.flags;switch(r.tag){case 0:case 11:case 15:Gs(a,r,u,d),_&2048&&Vo(9,r);break;case 3:Gs(a,r,u,d),_&2048&&(a=null,r.alternate!==null&&(a=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==a&&(r.refCount++,a!=null&&Fo(a)));break;case 12:if(_&2048){Gs(a,r,u,d),a=r.stateNode;try{var M=r.memoizedProps,N=M.id,V=M.onPostCommit;typeof V=="function"&&V(N,r.alternate===null?"mount":"update",a.passiveEffectDuration,-0)}catch(j){Fe(r,r.return,j)}}else Gs(a,r,u,d);break;case 23:break;case 22:M=r.stateNode,r.memoizedState!==null?M._visibility&4?Gs(a,r,u,d):Go(a,r):M._visibility&4?Gs(a,r,u,d):(M._visibility|=4,vr(a,r,u,d,(r.subtreeFlags&10256)!==0)),_&2048&&Hf(r.alternate,r);break;case 24:Gs(a,r,u,d),_&2048&&Vf(r.alternate,r);break;default:Gs(a,r,u,d)}}function vr(a,r,u,d,_){for(_=_&&(r.subtreeFlags&10256)!==0,r=r.child;r!==null;){var M=a,N=r,V=u,j=d,ct=N.flags;switch(N.tag){case 0:case 11:case 15:vr(M,N,V,j,_),Vo(8,N);break;case 23:break;case 22:var Et=N.stateNode;N.memoizedState!==null?Et._visibility&4?vr(M,N,V,j,_):Go(M,N):(Et._visibility|=4,vr(M,N,V,j,_)),_&&ct&2048&&Hf(N.alternate,N);break;case 24:vr(M,N,V,j,_),_&&ct&2048&&Vf(N.alternate,N);break;default:vr(M,N,V,j,_)}r=r.sibling}}function Go(a,r){if(r.subtreeFlags&10256)for(r=r.child;r!==null;){var u=a,d=r,_=d.flags;switch(d.tag){case 22:Go(u,d),_&2048&&Hf(d.alternate,d);break;case 24:Go(u,d),_&2048&&Vf(d.alternate,d);break;default:Go(u,d)}r=r.sibling}}function Ma(a){if(a.subtreeFlags&Br)for(a=a.child;a!==null;)Qg(a),a=a.sibling}function Qg(a){switch(a.tag){case 26:Ma(a),a.flags&Br&&(a.memoizedState!==null?cb(Hi,a.memoizedState,a.memoizedProps):I0(a.type,a.memoizedProps));break;case 5:Ma(a),a.flags&Br&&I0(a.type,a.memoizedProps);break;case 3:case 4:if(bi){var r=Hi;Hi=dd(a.stateNode.containerInfo),Ma(a),Hi=r}else Ma(a);break;case 22:a.memoizedState===null&&(r=a.alternate,r!==null&&r.memoizedState!==null?(r=Br,Br=16777216,Ma(a),Br=r):Ma(a));break;default:Ma(a)}}function $g(a){var r=a.alternate;if(r!==null&&(a=r.child,a!==null)){r.child=null;do r=a.sibling,a.sibling=null,a=r;while(a!==null)}}function ko(a){var r=a.deletions;if((a.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];vn=d,e0(d,a)}$g(a)}if(a.subtreeFlags&10256)for(a=a.child;a!==null;)t0(a),a=a.sibling}function t0(a){switch(a.tag){case 0:case 11:case 15:ko(a),a.flags&2048&&Hs(9,a,a.return);break;case 3:ko(a);break;case 12:ko(a);break;case 22:var r=a.stateNode;a.memoizedState!==null&&r._visibility&4&&(a.return===null||a.return.tag!==13)?(r._visibility&=-5,vc(a)):ko(a);break;default:ko(a)}}function vc(a){var r=a.deletions;if((a.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];vn=d,e0(d,a)}$g(a)}for(a=a.child;a!==null;){switch(r=a,r.tag){case 0:case 11:case 15:Hs(8,r,r.return),vc(r);break;case 22:u=r.stateNode,u._visibility&4&&(u._visibility&=-5,vc(r));break;default:vc(r)}a=a.sibling}}function e0(a,r){for(;vn!==null;){var u=vn;switch(u.tag){case 0:case 11:case 15:Hs(8,u,r);break;case 23:case 22:if(u.memoizedState!==null&&u.memoizedState.cachePool!==null){var d=u.memoizedState.cachePool.pool;d!=null&&d.refCount++}break;case 24:Fo(u.memoizedState.cache)}if(d=u.child,d!==null)d.return=u,vn=d;else t:for(u=a;vn!==null;){d=vn;var _=d.sibling,M=d.return;if(Yg(d),d===u){vn=null;break t}if(_!==null){_.return=M,vn=_;break t}vn=M}}}function Gf(a){var r=L0(a);if(r!=null){if(typeof r.memoizedProps["data-testname"]!="string")throw Error(i(364));return r}if(a=_M(a),a===null)throw Error(i(362));return a.stateNode.current}function kf(a,r){var u=a.tag;switch(r.$$typeof){case Oc:if(a.type===r.value)return!0;break;case Bc:t:{for(r=r.value,a=[a,0],u=0;u<a.length;){var d=a[u++],_=d.tag,M=a[u++],N=r[M];if(_!==5&&_!==26&&_!==27||!qo(d)){for(;N!=null&&kf(d,N);)M++,N=r[M];if(M===r.length){r=!0;break t}else for(d=d.child;d!==null;)a.push(d,M),d=d.sibling}}r=!1}return r;case zc:if((u===5||u===26||u===27)&&SM(a.stateNode,r.value))return!0;break;case Hc:if((u===5||u===6||u===26||u===27)&&(a=xM(a),a!==null&&0<=a.indexOf(r.value)))return!0;break;case Fc:if((u===5||u===26||u===27)&&(a=a.memoizedProps["data-testname"],typeof a=="string"&&a.toLowerCase()===r.value.toLowerCase()))return!0;break;default:throw Error(i(365))}return!1}function Wf(a){switch(a.$$typeof){case Oc:return"<"+(l(a.value)||"Unknown")+">";case Bc:return":has("+(Wf(a)||"")+")";case zc:return'[role="'+a.value+'"]';case Hc:return'"'+a.value+'"';case Fc:return'[data-testname="'+a.value+'"]';default:throw Error(i(365))}}function n0(a,r){var u=[];a=[a,0];for(var d=0;d<a.length;){var _=a[d++],M=_.tag,N=a[d++],V=r[N];if(M!==5&&M!==26&&M!==27||!qo(_)){for(;V!=null&&kf(_,V);)N++,V=r[N];if(N===r.length)u.push(_);else for(_=_.child;_!==null;)a.push(_,N),_=_.sibling}}return u}function Xf(a,r){if(!Xo)throw Error(i(363));a=Gf(a),a=n0(a,r),r=[],a=Array.from(a);for(var u=0;u<a.length;){var d=a[u++],_=d.tag;if(_===5||_===26||_===27)qo(d)||r.push(d.stateNode);else for(d=d.child;d!==null;)a.push(d),d=d.sibling}return r}function ci(){if((Ge&2)!==0&&Ce!==0)return Ce&-Ce;if(he.T!==null){var a=Dr;return a!==0?a:dt()}return cM()}function i0(){Ci===0&&(Ci=(Ce&536870912)===0||Pe?O():536870912);var a=wi.current;return a!==null&&(a.flags|=32),Ci}function Vn(a,r,u){(a===Ze&&je===2||a.cancelPendingCommit!==null)&&(_r(a,0),ps(a,Ce,Ci,!1)),H(a,u),((Ge&2)===0||a!==Ze)&&(a===Ze&&((Ge&2)===0&&(Pa|=u),nn===4&&ps(a,Ce,Ci,!1)),vt(a))}function s0(a,r,u){if((Ge&6)!==0)throw Error(i(327));var d=!u&&(r&60)===0&&(r&a.expiredLanes)===0||D(a,r),_=d?FS(a,r):jf(a,r,!0),M=d;do{if(_===0){zr&&!d&&ps(a,r,0,!1);break}else if(_===6)ps(a,r,0,!xs);else{if(u=a.current.alternate,M&&!BS(u)){_=jf(a,r,!1),M=!1;continue}if(_===2){if(M=r,a.errorRecoveryDisabledLanes&M)var N=0;else N=a.pendingLanes&-536870913,N=N!==0?N:N&536870912?536870912:0;if(N!==0){r=N;t:{var V=a;_=tl;var j=Mi&&V.current.memoizedState.isDehydrated;if(j&&(_r(V,N).flags|=256),N=jf(V,N,!1),N!==2){if(Cd&&!j){V.errorRecoveryDisabledLanes|=M,Pa|=M,_=4;break t}M=es,es=_,M!==null&&qf(M)}_=N}if(M=!1,_!==2)continue}}if(_===1){_r(a,0),ps(a,r,0,!0);break}t:{switch(d=a,_){case 0:case 1:throw Error(i(345));case 4:if((r&4194176)===r){ps(d,r,Ci,!xs);break t}break;case 2:es=null;break;case 3:case 5:break;default:throw Error(i(329))}if(d.finishedWork=u,d.finishedLanes=r,(r&62914560)===r&&(M=Ud+300-zi(),10<M)){if(ps(d,r,Ci,!xs),L(d,0)!==0)break t;d.timeoutHandle=rM(a0.bind(null,d,u,es,Vc,Dd,r,Ci,Pa,Fr,xs,2,-0,0),M);break t}a0(d,u,es,Vc,Dd,r,Ci,Pa,Fr,xs,0,-0,0)}}break}while(!0);vt(a)}function qf(a){es===null?es=a:es.push.apply(es,a)}function a0(a,r,u,d,_,M,N,V,j,ct,Et,Pt,Bt){var me=r.subtreeFlags;if((me&8192||(me&16785408)===16785408)&&(dM(),Qg(r),r=pM(),r!==null)){a.cancelPendingCommit=r(p0.bind(null,a,u,d,_,N,V,j,1,Pt,Bt)),ps(a,M,N,!ct);return}p0(a,u,d,_,N,V,j,Et,Pt,Bt)}function BS(a){for(var r=a;;){var u=r.tag;if((u===0||u===11||u===15)&&r.flags&16384&&(u=r.updateQueue,u!==null&&(u=u.stores,u!==null)))for(var d=0;d<u.length;d++){var _=u[d],M=_.getSnapshot;_=_.value;try{if(!di(M(),_))return!1}catch{return!1}}if(u=r.child,r.subtreeFlags&16384&&u!==null)u.return=r,r=u;else{if(r===a)break;for(;r.sibling===null;){if(r.return===null||r.return===a)return!0;r=r.return}r.sibling.return=r.return,r=r.sibling}}return!0}function ps(a,r,u,d){r&=~Rd,r&=~Pa,a.suspendedLanes|=r,a.pingedLanes&=~r,d&&(a.warmLanes|=r),d=a.expirationTimes;for(var _=r;0<_;){var M=31-hi(_),N=1<<M;d[M]=-1,_&=~N}u!==0&&X(a,u,r)}function r0(){return(Ge&6)===0?(It(0),!1):!0}function Yf(){if(Ee!==null){if(je===0)var a=Ee.return;else a=Ee,_s=Na=null,Io(a),Lr=null,Jo=0,a=Ee;for(;a!==null;)Fg(a.alternate,a),a=a.return;Ee=null}}function _r(a,r){a.finishedWork=null,a.finishedLanes=0;var u=a.timeoutHandle;u!==ud&&(a.timeoutHandle=ud,oM(u)),u=a.cancelPendingCommit,u!==null&&(a.cancelPendingCommit=null,u()),Yf(),Ze=a,Ee=u=ks(a.current,null),Ce=r,je=0,mi=null,xs=!1,zr=D(a,r),Cd=!1,Fr=Ci=Rd=Pa=Js=nn=0,es=tl=null,Dd=!1,(r&8)!==0&&(r|=r&32);var d=a.entangledLanes;if(d!==0)for(a=a.entanglements,d&=r;0<d;){var _=31-hi(d),M=1<<_;r|=a[_],d&=~M}return Ss=r,I(),u}function o0(a,r){Se=null,he.H=ts,r===Ko?(r=Xt(),je=3):r===bd?(r=Xt(),je=4):je=r===sv?8:r!==null&&typeof r=="object"&&typeof r.then=="function"?6:1,mi=r,Ee===null&&(nn=1,hc(a,st(r,a.current)))}function l0(){var a=wi.current;return a===null?!0:(Ce&4194176)===Ce?$i===null:(Ce&62914560)===Ce||(Ce&536870912)!==0?a===$i:!1}function c0(){var a=he.H;return he.H=ts,a===null?ts:a}function u0(){var a=he.A;return he.A=Ab,a}function Zf(){nn=4,xs||(Ce&4194176)!==Ce&&wi.current!==null||(zr=!0),(Js&134217727)===0&&(Pa&134217727)===0||Ze===null||ps(Ze,Ce,Ci,!1)}function jf(a,r,u){var d=Ge;Ge|=2;var _=c0(),M=u0();(Ze!==a||Ce!==r)&&(Vc=null,_r(a,r)),r=!1;var N=nn;t:do try{if(je!==0&&Ee!==null){var V=Ee,j=mi;switch(je){case 8:Yf(),N=6;break t;case 3:case 2:case 6:wi.current===null&&(r=!0);var ct=je;if(je=0,mi=null,yr(a,V,j,ct),u&&zr){N=0;break t}break;default:ct=je,je=0,mi=null,yr(a,V,j,ct)}}zS(),N=nn;break}catch(Et){o0(a,Et)}while(!0);return r&&a.shellSuspendCounter++,_s=Na=null,Ge=d,he.H=_,he.A=M,Ee===null&&(Ze=null,Ce=0,I()),N}function zS(){for(;Ee!==null;)h0(Ee)}function FS(a,r){var u=Ge;Ge|=2;var d=c0(),_=u0();Ze!==a||Ce!==r?(Vc=null,el=zi()+500,_r(a,r)):zr=D(a,r);t:do try{if(je!==0&&Ee!==null){r=Ee;var M=mi;e:switch(je){case 1:je=0,mi=null,yr(a,r,M,1);break;case 2:if(Ht(M)){je=0,mi=null,f0(r);break}r=function(){je===2&&Ze===a&&(je=7),vt(a)},M.then(r,r);break t;case 3:je=7;break t;case 4:je=5;break t;case 7:Ht(M)?(je=0,mi=null,f0(r)):(je=0,mi=null,yr(a,r,M,7));break;case 5:var N=null;switch(Ee.tag){case 26:N=Ee.memoizedState;case 5:case 27:var V=Ee,j=V.type,ct=V.pendingProps;if(N?J0(N):P0(j,ct)){je=0,mi=null;var Et=V.sibling;if(Et!==null)Ee=Et;else{var Pt=V.return;Pt!==null?(Ee=Pt,_c(Pt)):Ee=null}break e}}je=0,mi=null,yr(a,r,M,5);break;case 6:je=0,mi=null,yr(a,r,M,6);break;case 8:Yf(),nn=6;break t;default:throw Error(i(462))}}HS();break}catch(Bt){o0(a,Bt)}while(!0);return _s=Na=null,he.H=d,he.A=_,Ge=u,Ee!==null?0:(Ze=null,Ce=0,I(),nn)}function HS(){for(;Ee!==null&&!mb();)h0(Ee)}function h0(a){var r=Ng(a.alternate,a,Ss);a.memoizedProps=a.pendingProps,r===null?_c(a):Ee=r}function f0(a){var r=a,u=r.alternate;switch(r.tag){case 15:case 0:r=Ag(u,r,r.pendingProps,r.type,void 0,Ce);break;case 11:r=Ag(u,r,r.pendingProps,r.type.render,r.ref,Ce);break;case 5:Io(r);default:Fg(u,r),r=Ee=_0(r,Ss),r=Ng(u,r,Ss)}a.memoizedProps=a.pendingProps,r===null?_c(a):Ee=r}function yr(a,r,u,d){_s=Na=null,Io(r),Lr=null,Jo=0;var _=r.return;try{if(US(a,_,r,u,Ce)){nn=1,hc(a,st(u,a.current)),Ee=null;return}}catch(M){if(_!==null)throw Ee=_,M;nn=1,hc(a,st(u,a.current)),Ee=null;return}r.flags&32768?(Pe||d===1?a=!0:zr||(Ce&536870912)!==0?a=!1:(xs=a=!0,(d===2||d===3||d===6)&&(d=wi.current,d!==null&&d.tag===13&&(d.flags|=16384))),d0(r,a)):_c(r)}function _c(a){var r=a;do{if((r.flags&32768)!==0){d0(r,xs);return}a=r.return;var u=LS(r.alternate,r,Ss);if(u!==null){Ee=u;return}if(r=r.sibling,r!==null){Ee=r;return}Ee=r=a}while(r!==null);nn===0&&(nn=5)}function d0(a,r){do{var u=PS(a.alternate,a);if(u!==null){u.flags&=32767,Ee=u;return}if(u=a.return,u!==null&&(u.flags|=32768,u.subtreeFlags=0,u.deletions=null),!r&&(a=a.sibling,a!==null)){Ee=a;return}Ee=a=u}while(a!==null);nn=6,Ee=null}function p0(a,r,u,d,_,M,N,V,j,ct){var Et=he.T,Pt=Ta();try{Qn(2),he.T=null,VS(a,r,u,d,Pt,_,M,N,V,j,ct)}finally{he.T=Et,Qn(Pt)}}function VS(a,r,u,d,_,M,N,V){do ba();while(Ia!==null);if((Ge&6)!==0)throw Error(i(327));var j=a.finishedWork;if(d=a.finishedLanes,j===null)return null;if(a.finishedWork=null,a.finishedLanes=0,j===a.current)throw Error(i(177));a.callbackNode=null,a.callbackPriority=0,a.cancelPendingCommit=null;var ct=j.lanes|j.childLanes;if(ct|=_d,Q(a,d,ct,M,N,V),a===Ze&&(Ee=Ze=null,Ce=0),(j.subtreeFlags&10256)===0&&(j.flags&10256)===0||Gc||(Gc=!0,Nd=ct,Ld=u,XS(gd,function(){return ba(),null})),u=(j.flags&15990)!==0,(j.subtreeFlags&15990)!==0||u?(u=he.T,he.T=null,M=Ta(),Qn(2),N=Ge,Ge|=4,IS(a,j),jg(j,a),sM(a.containerInfo),a.current=j,qg(a,j.alternate,j),gb(),Ge=N,Qn(M),he.T=u):a.current=j,Gc?(Gc=!1,Ia=a,nl=d):m0(a,ct),ct=a.pendingLanes,ct===0&&(Qs=null),F(j.stateNode),vt(a),r!==null)for(_=a.onRecoverableError,j=0;j<r.length;j++)ct=r[j],_(ct.value,{componentStack:ct.stack});return(nl&3)!==0&&ba(),ct=a.pendingLanes,(d&4194218)!==0&&(ct&42)!==0?a===Pd?il++:(il=0,Pd=a):il=0,It(0),null}function m0(a,r){(a.pooledCacheLanes&=r)===0&&(r=a.pooledCache,r!=null&&(a.pooledCache=null,Fo(r)))}function ba(){if(Ia!==null){var a=Ia,r=Nd;Nd=0;var u=at(nl),d=32>u?32:u;u=he.T;var _=Ta();try{if(Qn(d),he.T=null,Ia===null)var M=!1;else{d=Ld,Ld=null;var N=Ia,V=nl;if(Ia=null,nl=0,(Ge&6)!==0)throw Error(i(331));var j=Ge;if(Ge|=4,t0(N.current),Jg(N,N.current,V,d),Ge=j,It(0,!1),fi&&typeof fi.onPostCommitFiberRoot=="function")try{fi.onPostCommitFiberRoot(Yo,N)}catch{}M=!0}return M}finally{Qn(_),he.T=u,m0(a,r)}}return!1}function g0(a,r,u){r=st(u,r),r=xf(a.stateNode,r,2),a=Lt(a,r,2),a!==null&&(H(a,2),vt(a))}function Fe(a,r,u){if(a.tag===3)g0(a,a,u);else for(;r!==null;){if(r.tag===3){g0(r,a,u);break}else if(r.tag===1){var d=r.stateNode;if(typeof r.type.getDerivedStateFromError=="function"||typeof d.componentDidCatch=="function"&&(Qs===null||!Qs.has(d))){a=st(u,a),u=yg(2),d=Lt(r,u,2),d!==null&&(xg(u,d,r,a),H(d,2),vt(d));break}}r=r.return}}function Kf(a,r,u){var d=a.pingCache;if(d===null){d=a.pingCache=new wb;var _=new Set;d.set(r,_)}else _=d.get(r),_===void 0&&(_=new Set,d.set(r,_));_.has(u)||(Cd=!0,_.add(u),a=GS.bind(null,a,r,u),r.then(a,a))}function GS(a,r,u){var d=a.pingCache;d!==null&&d.delete(r),a.pingedLanes|=a.suspendedLanes&u,a.warmLanes&=~u,Ze===a&&(Ce&u)===u&&(nn===4||nn===3&&(Ce&62914560)===Ce&&300>zi()-Ud?(Ge&2)===0&&_r(a,0):Rd|=u,Fr===Ce&&(Fr=0)),vt(a)}function v0(a,r){r===0&&(r=C()),a=bt(a,r),a!==null&&(H(a,r),vt(a))}function kS(a){var r=a.memoizedState,u=0;r!==null&&(u=r.retryLane),v0(a,u)}function WS(a,r){var u=0;switch(a.tag){case 13:var d=a.stateNode,_=a.memoizedState;_!==null&&(u=_.retryLane);break;case 19:d=a.stateNode;break;case 22:d=a.stateNode._retryCache;break;default:throw Error(i(314))}d!==null&&d.delete(r),v0(a,u)}function XS(a,r){return Tc(a,r)}function qS(a,r,u,d){this.tag=a,this.key=u,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=r,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=d,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Jf(a){return a=a.prototype,!(!a||!a.isReactComponent)}function ks(a,r){var u=a.alternate;return u===null?(u=e(a.tag,r,a.key,a.mode),u.elementType=a.elementType,u.type=a.type,u.stateNode=a.stateNode,u.alternate=a,a.alternate=u):(u.pendingProps=r,u.type=a.type,u.flags=0,u.subtreeFlags=0,u.deletions=null),u.flags=a.flags&31457280,u.childLanes=a.childLanes,u.lanes=a.lanes,u.child=a.child,u.memoizedProps=a.memoizedProps,u.memoizedState=a.memoizedState,u.updateQueue=a.updateQueue,r=a.dependencies,u.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext},u.sibling=a.sibling,u.index=a.index,u.ref=a.ref,u.refCleanup=a.refCleanup,u}function _0(a,r){a.flags&=31457282;var u=a.alternate;return u===null?(a.childLanes=0,a.lanes=r,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=u.childLanes,a.lanes=u.lanes,a.child=u.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=u.memoizedProps,a.memoizedState=u.memoizedState,a.updateQueue=u.updateQueue,a.type=u.type,r=u.dependencies,a.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext}),a}function yc(a,r,u,d,_,M){var N=0;if(d=a,typeof a=="function")Jf(a)&&(N=1);else if(typeof a=="string")N=bi&&Dn?X0(a,u,En.current)?26:$0(a)?27:5:bi?X0(a,u,En.current)?26:5:Dn&&$0(a)?27:5;else t:switch(a){case Sr:return Ea(u.children,_,M,r);case T0:N=8,_|=24;break;case nd:return a=e(12,u,r,_|2),a.elementType=nd,a.lanes=M,a;case sd:return a=e(13,u,r,_),a.elementType=sd,a.lanes=M,a;case ad:return a=e(19,u,r,_),a.elementType=ad,a.lanes=M,a;case w0:return y0(u,_,M,r);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case KS:case Ws:N=10;break t;case A0:N=9;break t;case id:N=11;break t;case rd:N=14;break t;case Xs:N=16,d=null;break t}N=29,u=Error(i(130,a===null?"null":typeof a,"")),d=null}return r=e(N,u,r,_),r.elementType=a,r.type=d,r.lanes=M,r}function Ea(a,r,u,d){return a=e(7,a,d,r),a.lanes=u,a}function y0(a,r,u,d){a=e(22,a,d,r),a.elementType=w0,a.lanes=u;var _={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var M=_._current;if(M===null)throw Error(i(456));if((_._pendingVisibility&2)===0){var N=bt(M,2);N!==null&&(_._pendingVisibility|=2,Vn(N,M,2))}},attach:function(){var M=_._current;if(M===null)throw Error(i(456));if((_._pendingVisibility&2)!==0){var N=bt(M,2);N!==null&&(_._pendingVisibility&=-3,Vn(N,M,2))}}};return a.stateNode=_,a}function Qf(a,r,u){return a=e(6,a,null,r),a.lanes=u,a}function $f(a,r,u){return r=e(4,a.children!==null?a.children:[],a.key,r),r.lanes=u,r.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},r}function YS(a,r,u,d,_,M,N,V){this.tag=1,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=ud,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=w(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=w(0),this.hiddenUpdates=w(null),this.identifierPrefix=d,this.onUncaughtError=_,this.onCaughtError=M,this.onRecoverableError=N,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=V,this.incompleteTransitions=new Map}function x0(a,r,u,d,_,M,N,V,j,ct,Et,Pt){return a=new YS(a,r,u,N,V,j,ct,Pt),r=1,M===!0&&(r|=24),M=e(3,null,null,r),a.current=M,M.stateNode=a,r=Uf(),r.refCount++,a.pooledCache=r,r.refCount++,M.memoizedState={element:d,isDehydrated:u,cache:r},Gt(M),a}function S0(a){return a?(a=Er,a):Er}function M0(a){var r=a._reactInternals;if(r===void 0)throw typeof a.render=="function"?Error(i(188)):(a=Object.keys(a).join(","),Error(i(268,a)));return a=v(r),a=a!==null?x(a):null,a===null?null:Wo(a.stateNode)}function b0(a,r,u,d,_,M){_=S0(_),d.context===null?d.context=_:d.pendingContext=_,d=ft(r),d.payload={element:u},M=M===void 0?null:M,M!==null&&(d.callback=M),u=Lt(a,d,r),u!==null&&(Vn(u,a,r),$t(u,a,r))}function E0(a,r){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var u=a.retryLane;a.retryLane=u!==0&&u<r?u:r}}function td(a,r){E0(a,r),(a=a.alternate)&&E0(a,r)}var be={},ZS=um(),ui=c3(),ed=Object.assign,jS=Symbol.for("react.element"),xc=Symbol.for("react.transitional.element"),xr=Symbol.for("react.portal"),Sr=Symbol.for("react.fragment"),T0=Symbol.for("react.strict_mode"),nd=Symbol.for("react.profiler"),KS=Symbol.for("react.provider"),A0=Symbol.for("react.consumer"),Ws=Symbol.for("react.context"),id=Symbol.for("react.forward_ref"),sd=Symbol.for("react.suspense"),ad=Symbol.for("react.suspense_list"),rd=Symbol.for("react.memo"),Xs=Symbol.for("react.lazy"),w0=Symbol.for("react.offscreen"),JS=Symbol.for("react.memo_cache_sentinel"),C0=Symbol.iterator,QS=Symbol.for("react.client.reference"),he=ZS.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,od,R0,ld=!1,Sc=Array.isArray,$S=t.rendererVersion,tM=t.rendererPackageName,D0=t.extraDevToolsConfig,Wo=t.getPublicInstance,eM=t.getRootHostContext,nM=t.getChildHostContext,iM=t.prepareForCommit,sM=t.resetAfterCommit,aM=t.createInstance,cd=t.appendInitialChild,U0=t.finalizeInitialChildren,Mc=t.shouldSetTextContent,N0=t.createTextInstance,rM=t.scheduleTimeout,oM=t.cancelTimeout,ud=t.noTimeout,ms=t.isPrimaryRenderer;t.warnsIfNotActing;var Rn=t.supportsMutation,qs=t.supportsPersistence,Mi=t.supportsHydration,L0=t.getInstanceFromNode;t.beforeActiveInstanceBlur,t.afterActiveInstanceBlur;var lM=t.preparePortalMount;t.prepareScopeUpdate,t.getInstanceFromScope;var Qn=t.setCurrentUpdatePriority,Ta=t.getCurrentUpdatePriority,cM=t.resolveUpdatePriority;t.resolveEventType,t.resolveEventTimeStamp;var uM=t.shouldAttemptEagerTransition,hM=t.detachDeletedInstance;t.requestPostPaintCallback;var fM=t.maySuspendCommit,P0=t.preloadInstance,dM=t.startSuspendingCommit,I0=t.suspendInstance,pM=t.waitForCommitToBeReady,Mr=t.NotPendingTransition,Aa=t.HostTransitionContext,mM=t.resetFormInstance;t.bindToConsole;var gM=t.supportsMicrotasks,vM=t.scheduleMicrotask,Xo=t.supportsTestSelectors,_M=t.findFiberRoot,yM=t.getBoundingRect,xM=t.getTextContent,qo=t.isHiddenSubtree,SM=t.matchAccessibilityRole,MM=t.setFocusIfFocusable,bM=t.setupIntersectionObserver,EM=t.appendChild,TM=t.appendChildToContainer,AM=t.commitTextUpdate,wM=t.commitMount,CM=t.commitUpdate,RM=t.insertBefore,DM=t.insertInContainerBefore,UM=t.removeChild,NM=t.removeChildFromContainer,O0=t.resetTextContent,LM=t.hideInstance,PM=t.hideTextInstance,IM=t.unhideInstance,OM=t.unhideTextInstance,BM=t.clearContainer,zM=t.cloneInstance,B0=t.createContainerChildSet,z0=t.appendChildToContainerChildSet,FM=t.finalizeContainerChildren,F0=t.replaceContainerChildren,H0=t.cloneHiddenInstance,V0=t.cloneHiddenTextInstance,hd=t.isSuspenseInstancePending,fd=t.isSuspenseInstanceFallback,HM=t.getSuspenseInstanceFallbackErrorDetails,VM=t.registerSuspenseInstanceRetry,GM=t.canHydrateFormStateMarker,kM=t.isFormStateMarkerMatching,G0=t.getNextHydratableSibling,k0=t.getFirstHydratableChild,WM=t.getFirstHydratableChildWithinContainer,XM=t.getFirstHydratableChildWithinSuspenseInstance,qM=t.canHydrateInstance,YM=t.canHydrateTextInstance,ZM=t.canHydrateSuspenseInstance,jM=t.hydrateInstance,KM=t.hydrateTextInstance,JM=t.hydrateSuspenseInstance,QM=t.getNextHydratableInstanceAfterSuspenseInstance,$M=t.commitHydratedContainer,tb=t.commitHydratedSuspenseInstance,eb=t.clearSuspenseBoundary,nb=t.clearSuspenseBoundaryFromContainer,W0=t.shouldDeleteUnhydratedTailInstances;t.diffHydratedPropsForDevWarnings,t.diffHydratedTextForDevWarnings,t.describeHydratableInstanceForDevWarnings;var ib=t.validateHydratableInstance,sb=t.validateHydratableTextInstance,bi=t.supportsResources,X0=t.isHostHoistableType,dd=t.getHoistableRoot,q0=t.getResource,Y0=t.acquireResource,Z0=t.releaseResource,ab=t.hydrateHoistable,j0=t.mountHoistable,K0=t.unmountHoistable,rb=t.createHoistableInstance,ob=t.prepareToCommitHoistables,lb=t.mayResourceSuspendCommit,J0=t.preloadResource,cb=t.suspendResource,Dn=t.supportsSingletons,Q0=t.resolveSingletonInstance,ub=t.clearSingleton,hb=t.acquireSingletonInstance,fb=t.releaseSingletonInstance,$0=t.isHostSingletonType,pd=[],br=-1,Er={},hi=Math.clz32?Math.clz32:A,db=Math.log,pb=Math.LN2,bc=128,Ec=4194304,Tc=ui.unstable_scheduleCallback,md=ui.unstable_cancelCallback,mb=ui.unstable_shouldYield,gb=ui.unstable_requestPaint,zi=ui.unstable_now,tv=ui.unstable_ImmediatePriority,vb=ui.unstable_UserBlockingPriority,gd=ui.unstable_NormalPriority,_b=ui.unstable_IdlePriority,yb=ui.log,xb=ui.unstable_setDisableYieldValue,Yo=null,fi=null,di=typeof Object.is=="function"?Object.is:G,ev=new WeakMap,Tr=[],Ar=0,Ac=null,wc=0,Ei=[],Ti=0,wa=null,gs=1,vs="",En=S(null),Zo=S(null),Ys=S(null),Cc=S(null),Gn=null,Un=null,Pe=!1,Fi=null,Qi=!1,vd=Error(i(519)),Ai=[],wr=0,_d=0,Rc=null,Cr=null,yd=!1,Dc=!1,xd=!1,Rr=0,jo=null,Sd=0,Dr=0,Ur=null,Zs=!1,Md=!1,Sb=Object.prototype.hasOwnProperty,Ko=Error(i(460)),bd=Error(i(474)),Uc={then:function(){}},Nr=null,Lr=null,Jo=0,Ca=xi(!0),nv=xi(!1),Pr=S(null),Nc=S(0),wi=S(null),$i=null,fn=S(0),js=0,Se=null,Ve=null,ln=null,Lc=!1,Ir=!1,Ra=!1,Pc=0,Qo=0,Or=null,Mb=0,Ed=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}},ts={readContext:Cn,use:nt,useCallback:Xe,useContext:Xe,useEffect:Xe,useImperativeHandle:Xe,useLayoutEffect:Xe,useInsertionEffect:Xe,useMemo:Xe,useReducer:Xe,useRef:Xe,useState:Xe,useDebugValue:Xe,useDeferredValue:Xe,useTransition:Xe,useSyncExternalStore:Xe,useId:Xe};ts.useCacheRefresh=Xe,ts.useMemoCache=Xe,ts.useHostTransitionStatus=Xe,ts.useFormState=Xe,ts.useActionState=Xe,ts.useOptimistic=Xe;var Da={readContext:Cn,use:nt,useCallback:function(a,r){return U().memoizedState=[a,r===void 0?null:r],a},useContext:Cn,useEffect:eg,useImperativeHandle:function(a,r,u){u=u!=null?u.concat([a]):null,lc(4194308,4,sg.bind(null,r,a),u)},useLayoutEffect:function(a,r){return lc(4194308,4,a,r)},useInsertionEffect:function(a,r){lc(4,2,a,r)},useMemo:function(a,r){var u=U();r=r===void 0?null:r;var d=a();if(Ra){q(!0);try{a()}finally{q(!1)}}return u.memoizedState=[d,r],d},useReducer:function(a,r,u){var d=U();if(u!==void 0){var _=u(r);if(Ra){q(!0);try{u(r)}finally{q(!1)}}}else _=r;return d.memoizedState=d.baseState=_,a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:_},d.queue=a,a=a.dispatch=DS.bind(null,Se,a),[d.memoizedState,a]},useRef:function(a){var r=U();return a={current:a},r.memoizedState=a},useState:function(a){a=Ye(a);var r=a.queue,u=dg.bind(null,Se,r);return r.dispatch=u,[a.memoizedState,u]},useDebugValue:mf,useDeferredValue:function(a,r){var u=U();return gf(u,a,r)},useTransition:function(){var a=Ye(!1);return a=cg.bind(null,Se,a.queue,!0,!1),U().memoizedState=a,[!1,a]},useSyncExternalStore:function(a,r,u){var d=Se,_=U();if(Pe){if(u===void 0)throw Error(i(407));u=u()}else{if(u=r(),Ze===null)throw Error(i(349));(Ce&60)!==0||se(d,r,u)}_.memoizedState=u;var M={value:u,getSnapshot:r};return _.queue=M,eg(Me.bind(null,d,M,a),[a]),d.flags|=2048,Ki(9,Kt.bind(null,d,M,u,r),{destroy:void 0},null),u},useId:function(){var a=U(),r=Ze.identifierPrefix;if(Pe){var u=vs,d=gs;u=(d&~(1<<32-hi(d)-1)).toString(32)+u,r=":"+r+"R"+u,u=Pc++,0<u&&(r+="H"+u.toString(32)),r+=":"}else u=Mb++,r=":"+r+"r"+u.toString(32)+":";return a.memoizedState=r},useCacheRefresh:function(){return U().memoizedState=RS.bind(null,Se)}};Da.useMemoCache=Y,Da.useHostTransitionStatus=vf,Da.useFormState=We,Da.useActionState=We,Da.useOptimistic=function(a){var r=U();r.memoizedState=r.baseState=a;var u={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return r.queue=u,r=_f.bind(null,Se,!0,u),u.dispatch=r,[a,r]};var Ks={readContext:Cn,use:nt,useCallback:rg,useContext:Cn,useEffect:pf,useImperativeHandle:ag,useInsertionEffect:ng,useLayoutEffect:ig,useMemo:og,useReducer:Rt,useRef:Ji,useState:function(){return Rt(xt)},useDebugValue:mf,useDeferredValue:function(a,r){var u=W();return lg(u,Ve.memoizedState,a,r)},useTransition:function(){var a=Rt(xt)[0],r=W().memoizedState;return[typeof a=="boolean"?a:et(a),r]},useSyncExternalStore:ie,useId:hg};Ks.useCacheRefresh=fg,Ks.useMemoCache=Y,Ks.useHostTransitionStatus=vf,Ks.useFormState=Fn,Ks.useActionState=Fn,Ks.useOptimistic=function(a,r){var u=W();return Te(u,Ve,a,r)};var Ua={readContext:Cn,use:nt,useCallback:rg,useContext:Cn,useEffect:pf,useImperativeHandle:ag,useInsertionEffect:ng,useLayoutEffect:ig,useMemo:og,useReducer:Ft,useRef:Ji,useState:function(){return Ft(xt)},useDebugValue:mf,useDeferredValue:function(a,r){var u=W();return Ve===null?gf(u,a,r):lg(u,Ve.memoizedState,a,r)},useTransition:function(){var a=Ft(xt)[0],r=W().memoizedState;return[typeof a=="boolean"?a:et(a),r]},useSyncExternalStore:ie,useId:hg};Ua.useCacheRefresh=fg,Ua.useMemoCache=Y,Ua.useHostTransitionStatus=vf,Ua.useFormState=Mn,Ua.useActionState=Mn,Ua.useOptimistic=function(a,r){var u=W();return Ve!==null?Te(u,Ve,a,r):(u.baseState=a,[a,u.queue.dispatch])};var Td={isMounted:function(a){return(a=a._reactInternals)?m(a)===a:!1},enqueueSetState:function(a,r,u){a=a._reactInternals;var d=ci(),_=ft(d);_.payload=r,u!=null&&(_.callback=u),r=Lt(a,_,d),r!==null&&(Vn(r,a,d),$t(r,a,d))},enqueueReplaceState:function(a,r,u){a=a._reactInternals;var d=ci(),_=ft(d);_.tag=1,_.payload=r,u!=null&&(_.callback=u),r=Lt(a,_,d),r!==null&&(Vn(r,a,d),$t(r,a,d))},enqueueForceUpdate:function(a,r){a=a._reactInternals;var u=ci(),d=ft(u);d.tag=2,r!=null&&(d.callback=r),r=Lt(a,d,u),r!==null&&(Vn(r,a,u),$t(r,a,u))}},iv=typeof reportError=="function"?reportError:function(a){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var r=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof a=="object"&&a!==null&&typeof a.message=="string"?String(a.message):String(a),error:a});if(!window.dispatchEvent(r))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",a);return}console.error(a)},sv=Error(i(461)),gn=!1,Ad={dehydrated:null,treeContext:null,retryLane:0},Ic=S(null),Na=null,_s=null,bb=typeof AbortController<"u"?AbortController:function(){var a=[],r=this.signal={aborted:!1,addEventListener:function(u,d){a.push(d)}};this.abort=function(){r.aborted=!0,a.forEach(function(u){return u()})}},Eb=ui.unstable_scheduleCallback,Tb=ui.unstable_NormalPriority,tn={$$typeof:Ws,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0},av=he.S;he.S=function(a,r){typeof r=="object"&&r!==null&&typeof r.then=="function"&&ot(a,r),av!==null&&av(a,r)};var La=S(null),ys=!1,en=!1,wd=!1,rv=typeof WeakSet=="function"?WeakSet:Set,vn=null,ov=!1,cn=null,pi=!1,Hi=null,Br=8192,Ab={getCacheForType:function(a){var r=Cn(tn),u=r.data.get(a);return u===void 0&&(u=a(),r.data.set(a,u)),u}},Oc=0,Bc=1,zc=2,Fc=3,Hc=4;if(typeof Symbol=="function"&&Symbol.for){var $o=Symbol.for;Oc=$o("selector.component"),Bc=$o("selector.has_pseudo_class"),zc=$o("selector.role"),Fc=$o("selector.test_id"),Hc=$o("selector.text")}var wb=typeof WeakMap=="function"?WeakMap:Map,Ge=0,Ze=null,Ee=null,Ce=0,je=0,mi=null,xs=!1,zr=!1,Cd=!1,Ss=0,nn=0,Js=0,Pa=0,Rd=0,Ci=0,Fr=0,tl=null,es=null,Dd=!1,Ud=0,el=1/0,Vc=null,Qs=null,Gc=!1,Ia=null,nl=0,Nd=0,Ld=null,il=0,Pd=null;return be.attemptContinuousHydration=function(a){if(a.tag===13){var r=bt(a,67108864);r!==null&&Vn(r,a,67108864),td(a,67108864)}},be.attemptHydrationAtCurrentPriority=function(a){if(a.tag===13){var r=ci(),u=bt(a,r);u!==null&&Vn(u,a,r),td(a,r)}},be.attemptSynchronousHydration=function(a){switch(a.tag){case 3:if(a=a.stateNode,a.current.memoizedState.isDehydrated){var r=T(a.pendingLanes);if(r!==0){for(a.pendingLanes|=2,a.entangledLanes|=2;r;){var u=1<<31-hi(r);a.entanglements[1]|=u,r&=~u}vt(a),(Ge&6)===0&&(el=zi()+500,It(0))}}break;case 13:r=bt(a,2),r!==null&&Vn(r,a,2),r0(),td(a,2)}},be.batchedUpdates=function(a,r){return a(r)},be.createComponentSelector=function(a){return{$$typeof:Oc,value:a}},be.createContainer=function(a,r,u,d,_,M,N,V,j,ct){return x0(a,r,!1,null,u,d,M,N,V,j,ct,null)},be.createHasPseudoClassSelector=function(a){return{$$typeof:Bc,value:a}},be.createHydrationContainer=function(a,r,u,d,_,M,N,V,j,ct,Et,Pt,Bt){return a=x0(u,d,!0,a,_,M,V,j,ct,Et,Pt,Bt),a.context=S0(null),u=a.current,d=ci(),_=ft(d),_.callback=r??null,Lt(u,_,d),a.current.lanes=d,H(a,d),vt(a),a},be.createPortal=function(a,r,u){var d=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:xr,key:d==null?null:""+d,children:a,containerInfo:r,implementation:u}},be.createRoleSelector=function(a){return{$$typeof:zc,value:a}},be.createTestNameSelector=function(a){return{$$typeof:Fc,value:a}},be.createTextSelector=function(a){return{$$typeof:Hc,value:a}},be.defaultOnCaughtError=function(a){console.error(a)},be.defaultOnRecoverableError=function(a){iv(a)},be.defaultOnUncaughtError=function(a){iv(a)},be.deferredUpdates=function(a){var r=he.T,u=Ta();try{return Qn(32),he.T=null,a()}finally{Qn(u),he.T=r}},be.discreteUpdates=function(a,r,u,d,_){var M=he.T,N=Ta();try{return Qn(2),he.T=null,a(r,u,d,_)}finally{Qn(N),he.T=M,Ge===0&&(el=zi()+500)}},be.findAllNodes=Xf,be.findBoundingRects=function(a,r){if(!Xo)throw Error(i(363));r=Xf(a,r),a=[];for(var u=0;u<r.length;u++)a.push(yM(r[u]));for(r=a.length-1;0<r;r--){u=a[r];for(var d=u.x,_=d+u.width,M=u.y,N=M+u.height,V=r-1;0<=V;V--)if(r!==V){var j=a[V],ct=j.x,Et=ct+j.width,Pt=j.y,Bt=Pt+j.height;if(d>=ct&&M>=Pt&&_<=Et&&N<=Bt){a.splice(r,1);break}else if(d!==ct||u.width!==j.width||Bt<M||Pt>N){if(!(M!==Pt||u.height!==j.height||Et<d||ct>_)){ct>d&&(j.width+=ct-d,j.x=d),Et<_&&(j.width=_-ct),a.splice(r,1);break}}else{Pt>M&&(j.height+=Pt-M,j.y=M),Bt<N&&(j.height=N-Pt),a.splice(r,1);break}}}return a},be.findHostInstance=M0,be.findHostInstanceWithNoPortals=function(a){return a=v(a),a=a!==null?b(a):null,a===null?null:Wo(a.stateNode)},be.findHostInstanceWithWarning=function(a){return M0(a)},be.flushPassiveEffects=ba,be.flushSyncFromReconciler=function(a){var r=Ge;Ge|=1;var u=he.T,d=Ta();try{if(Qn(2),he.T=null,a)return a()}finally{Qn(d),he.T=u,Ge=r,(Ge&6)===0&&It(0)}},be.flushSyncWork=r0,be.focusWithin=function(a,r){if(!Xo)throw Error(i(363));for(a=Gf(a),r=n0(a,r),r=Array.from(r),a=0;a<r.length;){var u=r[a++],d=u.tag;if(!qo(u)){if((d===5||d===26||d===27)&&MM(u.stateNode))return!0;for(u=u.child;u!==null;)r.push(u),u=u.sibling}}return!1},be.getFindAllNodesFailureDescription=function(a,r){if(!Xo)throw Error(i(363));var u=0,d=[];a=[Gf(a),0];for(var _=0;_<a.length;){var M=a[_++],N=M.tag,V=a[_++],j=r[V];if((N!==5&&N!==26&&N!==27||!qo(M))&&(kf(M,j)&&(d.push(Wf(j)),V++,V>u&&(u=V)),V<r.length))for(M=M.child;M!==null;)a.push(M,V),M=M.sibling}if(u<r.length){for(a=[];u<r.length;u++)a.push(Wf(r[u]));return`findAllNodes was able to match part of the selector:
  `+(d.join(" > ")+`

No matching component was found for:
  `)+a.join(" > ")}return null},be.getPublicRootInstance=function(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 27:case 5:return Wo(a.child.stateNode);default:return a.child.stateNode}},be.injectIntoDevTools=function(){var a={bundleType:0,version:$S,rendererPackageName:tM,currentDispatcherRef:he,findFiberByHostInstance:L0,reconcilerVersion:"19.0.0"};if(D0!==null&&(a.rendererConfig=D0),typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")a=!1;else{var r=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(r.isDisabled||!r.supportsFiber)a=!0;else{try{Yo=r.inject(a),fi=r}catch{}a=!!r.checkDCE}}return a},be.isAlreadyRendering=function(){return!1},be.observeVisibleRects=function(a,r,u,d){if(!Xo)throw Error(i(363));a=Xf(a,r);var _=bM(a,u,d).disconnect;return{disconnect:function(){_()}}},be.shouldError=function(){return null},be.shouldSuspend=function(){return!1},be.startHostTransition=function(a,r,u,d){if(a.tag!==5)throw Error(i(476));var _=ug(a).queue;cg(a,_,r,Mr,u===null?n:function(){var M=ug(a).next.queue;return Oo(a,M,{},ci()),u(d)})},be.updateContainer=function(a,r,u,d){var _=r.current,M=ci();return b0(_,M,a,r,u,d),M},be.updateContainerSync=function(a,r,u,d){return r.tag===0&&ba(),b0(r.current,2,a,r,u,d),2},be},s.exports.default=s.exports,Object.defineProperty(s.exports,"__esModule",{value:!0})}(Dp)),Dp.exports}var K_;function h3(){return K_||(K_=1,Rp.exports=u3()),Rp.exports}var f3=h3();const d3=ly(f3);var Lp={exports:{}},Pp={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var J_;function p3(){return J_||(J_=1,function(s){function t(F,q){var G=F.length;F.push(q);t:for(;0<G;){var st=G-1>>>1,lt=F[st];if(0<i(lt,q))F[st]=q,F[G]=lt,G=st;else break t}}function e(F){return F.length===0?null:F[0]}function n(F){if(F.length===0)return null;var q=F[0],G=F.pop();if(G!==q){F[0]=G;t:for(var st=0,lt=F.length,mt=lt>>>1;st<mt;){var wt=2*(st+1)-1,jt=F[wt],$=wt+1,gt=F[$];if(0>i(jt,G))$<lt&&0>i(gt,jt)?(F[st]=gt,F[$]=G,st=$):(F[st]=jt,F[wt]=G,st=wt);else if($<lt&&0>i(gt,G))F[st]=gt,F[$]=G,st=$;else break t}}return q}function i(F,q){var G=F.sortIndex-q.sortIndex;return G!==0?G:F.id-q.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var o=performance;s.unstable_now=function(){return o.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,b=!1,S=typeof setTimeout=="function"?setTimeout:null,y=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function A(F){for(var q=e(f);q!==null;){if(q.callback===null)n(f);else if(q.startTime<=F)n(f),q.sortIndex=q.expirationTime,t(h,q);else break;q=e(f)}}function T(F){if(b=!1,A(F),!x)if(e(h)!==null)x=!0,J();else{var q=e(f);q!==null&&at(T,q.startTime-F)}}var L=!1,D=-1,P=5,O=-1;function C(){return!(s.unstable_now()-O<P)}function w(){if(L){var F=s.unstable_now();O=F;var q=!0;try{t:{x=!1,b&&(b=!1,y(D),D=-1),v=!0;var G=g;try{e:{for(A(F),m=e(h);m!==null&&!(m.expirationTime>F&&C());){var st=m.callback;if(typeof st=="function"){m.callback=null,g=m.priorityLevel;var lt=st(m.expirationTime<=F);if(F=s.unstable_now(),typeof lt=="function"){m.callback=lt,A(F),q=!0;break e}m===e(h)&&n(h),A(F)}else n(h);m=e(h)}if(m!==null)q=!0;else{var mt=e(f);mt!==null&&at(T,mt.startTime-F),q=!1}}break t}finally{m=null,g=G,v=!1}q=void 0}}finally{q?H():L=!1}}}var H;if(typeof E=="function")H=function(){E(w)};else if(typeof MessageChannel<"u"){var Q=new MessageChannel,X=Q.port2;Q.port1.onmessage=w,H=function(){X.postMessage(null)}}else H=function(){S(w,0)};function J(){L||(L=!0,H())}function at(F,q){D=S(function(){F(s.unstable_now())},q)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(F){F.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,J())},s.unstable_forceFrameRate=function(F){0>F||125<F?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<F?Math.floor(1e3/F):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return e(h)},s.unstable_next=function(F){switch(g){case 1:case 2:case 3:var q=3;break;default:q=g}var G=g;g=q;try{return F()}finally{g=G}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(F,q){switch(F){case 1:case 2:case 3:case 4:case 5:break;default:F=3}var G=g;g=F;try{return q()}finally{g=G}},s.unstable_scheduleCallback=function(F,q,G){var st=s.unstable_now();switch(typeof G=="object"&&G!==null?(G=G.delay,G=typeof G=="number"&&0<G?st+G:st):G=st,F){case 1:var lt=-1;break;case 2:lt=250;break;case 5:lt=1073741823;break;case 4:lt=1e4;break;default:lt=5e3}return lt=G+lt,F={id:p++,callback:q,priorityLevel:F,startTime:G,expirationTime:lt,sortIndex:-1},G>st?(F.sortIndex=G,t(f,F),e(h)===null&&F===e(f)&&(b?(y(D),D=-1):b=!0,at(T,G-st))):(F.sortIndex=lt,t(h,F),x||v||(x=!0,J())),F},s.unstable_shouldYield=C,s.unstable_wrapCallback=function(F){var q=g;return function(){var G=g;g=q;try{return F.apply(this,arguments)}finally{g=G}}}}(Pp)),Pp}var Q_;function m3(){return Q_||(Q_=1,Lp.exports=p3()),Lp.exports}var $_=m3();function Qm(s,t,e){if(!s)return;if(e(s)===!0)return s;let n=t?s.return:s.child;for(;n;){const i=Qm(n,t,e);if(i)return i;n=t?null:n.sibling}}function hS(s){try{return Object.defineProperties(s,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return s}}const $m=hS(ce.createContext(null));class fS extends ce.Component{render(){return ce.createElement($m.Provider,{value:this._reactInternals},this.props.children)}}function dS(){const s=ce.useContext($m);if(s===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const t=ce.useId();return ce.useMemo(()=>{for(const e of[s,s==null?void 0:s.alternate]){if(!e)continue;const n=Qm(e,!1,i=>{let o=i.memoizedState;for(;o;){if(o.memoizedState===t)return!0;o=o.next}});if(n)return n}},[s,t])}const g3=Symbol.for("react.context"),v3=s=>s!==null&&typeof s=="object"&&"$$typeof"in s&&s.$$typeof===g3;function _3(){const s=dS(),[t]=ce.useState(()=>new Map);t.clear();let e=s;for(;e;){const n=e.type;v3(n)&&n!==$m&&!t.has(n)&&t.set(n,ce.use(hS(n))),e=e.return}return t}function y3(){const s=_3();return ce.useMemo(()=>Array.from(s.keys()).reduce((t,e)=>n=>ce.createElement(t,null,ce.createElement(e.Provider,{...n,value:s.get(e)})),t=>ce.createElement(fS,{...t})),[s])}function pS(s){let t=s.root;for(;t.getState().previousRoot;)t=t.getState().previousRoot;return t}const mS=s=>s&&s.isOrthographicCamera,x3=s=>s&&s.hasOwnProperty("current"),S3=s=>s!=null&&(typeof s=="string"||typeof s=="number"||s.isColor),ac=((s,t)=>typeof window<"u"&&(((s=window.document)==null?void 0:s.createElement)||((t=window.navigator)==null?void 0:t.product)==="ReactNative"))()?ce.useLayoutEffect:ce.useEffect;function gS(s){const t=ce.useRef(s);return ac(()=>void(t.current=s),[s]),t}function M3(){const s=dS(),t=y3();return ce.useMemo(()=>({children:e})=>{const i=!!Qm(s,!0,o=>o.type===ce.StrictMode)?ce.StrictMode:ce.Fragment;return ge.jsx(i,{children:ge.jsx(t,{children:e})})},[s,t])}function b3({set:s}){return ac(()=>(s(new Promise(()=>null)),()=>s(!1)),[s]),null}const E3=(s=>(s=class extends ce.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}},s.getDerivedStateFromError=()=>({error:!0}),s))();function vS(s){var t;const e=typeof window<"u"?(t=window.devicePixelRatio)!=null?t:2:1;return Array.isArray(s)?Math.min(Math.max(s[0],e),s[1]):s}function so(s){var t;return(t=s.__r3f)==null?void 0:t.root.getState()}const Qe={obj:s=>s===Object(s)&&!Qe.arr(s)&&typeof s!="function",fun:s=>typeof s=="function",str:s=>typeof s=="string",num:s=>typeof s=="number",boo:s=>typeof s=="boolean",und:s=>s===void 0,nul:s=>s===null,arr:s=>Array.isArray(s),equ(s,t,{arrays:e="shallow",objects:n="reference",strict:i=!0}={}){if(typeof s!=typeof t||!!s!=!!t)return!1;if(Qe.str(s)||Qe.num(s)||Qe.boo(s))return s===t;const o=Qe.obj(s);if(o&&n==="reference")return s===t;const l=Qe.arr(s);if(l&&e==="reference")return s===t;if((l||o)&&s===t)return!0;let c;for(c in s)if(!(c in t))return!1;if(o&&e==="shallow"&&n==="shallow"){for(c in i?t:s)if(!Qe.equ(s[c],t[c],{strict:i,objects:"reference"}))return!1}else for(c in i?t:s)if(s[c]!==t[c])return!1;if(Qe.und(c)){if(l&&s.length===0&&t.length===0||o&&Object.keys(s).length===0&&Object.keys(t).length===0)return!0;if(s!==t)return!1}return!0}};function T3(s){s.type!=="Scene"&&(s.dispose==null||s.dispose());for(const t in s){const e=s[t];(e==null?void 0:e.type)!=="Scene"&&(e==null||e.dispose==null||e.dispose())}}const _S=["children","key","ref"];function A3(s){const t={};for(const e in s)_S.includes(e)||(t[e]=s[e]);return t}function wh(s,t,e,n){const i=s;let o=i==null?void 0:i.__r3f;return o||(o={root:t,type:e,parent:null,children:[],props:A3(n),object:i,eventCount:0,handlers:{},isHidden:!1},i&&(i.__r3f=o)),o}function Zl(s,t){let e=s[t];if(!t.includes("-"))return{root:s,key:t,target:e};e=s;for(const i of t.split("-")){var n;t=i,s=e,e=(n=e)==null?void 0:n[t]}return{root:s,key:t,target:e}}const ty=/-\d+$/;function Ch(s,t){if(Qe.str(t.props.attach)){if(ty.test(t.props.attach)){const i=t.props.attach.replace(ty,""),{root:o,key:l}=Zl(s.object,i);Array.isArray(o[l])||(o[l]=[])}const{root:e,key:n}=Zl(s.object,t.props.attach);t.previousAttach=e[n],e[n]=t.object}else Qe.fun(t.props.attach)&&(t.previousAttach=t.props.attach(s.object,t.object))}function Rh(s,t){if(Qe.str(t.props.attach)){const{root:e,key:n}=Zl(s.object,t.props.attach),i=t.previousAttach;i===void 0?delete e[n]:e[n]=i}else t.previousAttach==null||t.previousAttach(s.object,t.object);delete t.previousAttach}const sm=[..._S,"args","dispose","attach","object","onUpdate","dispose"],ey=new Map;function w3(s){let t=ey.get(s.constructor);try{t||(t=new s.constructor,ey.set(s.constructor,t))}catch{}return t}function C3(s,t){const e={};for(const n in t)if(!sm.includes(n)&&!Qe.equ(t[n],s.props[n])){e[n]=t[n];for(const i in t)i.startsWith(`${n}-`)&&(e[i]=t[i])}for(const n in s.props){if(sm.includes(n)||t.hasOwnProperty(n))continue;const{root:i,key:o}=Zl(s.object,n);if(i.constructor&&i.constructor.length===0){const l=w3(i);Qe.und(l)||(e[o]=l[o])}else e[o]=0}return e}const R3=["map","emissiveMap","sheenColorMap","specularColorMap","envMap"],D3=/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;function ca(s,t){var e;const n=s.__r3f,i=n&&pS(n).getState(),o=n==null?void 0:n.eventCount;for(const c in t){let h=t[c];if(sm.includes(c))continue;if(n&&D3.test(c)){typeof h=="function"?n.handlers[c]=h:delete n.handlers[c],n.eventCount=Object.keys(n.handlers).length;continue}if(h===void 0)continue;let{root:f,key:p,target:m}=Zl(s,c);if(m instanceof yo&&h instanceof yo)m.mask=h.mask;else if(m instanceof zt&&S3(h))m.set(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof m.copy=="function"&&h!=null&&h.constructor&&m.constructor===h.constructor)m.copy(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&Array.isArray(h))typeof m.fromArray=="function"?m.fromArray(h):m.set(...h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof h=="number")typeof m.setScalar=="function"?m.setScalar(h):m.set(h);else{var l;f[p]=h,i&&!i.linear&&R3.includes(p)&&(l=f[p])!=null&&l.isTexture&&f[p].format===On&&f[p].type===Li&&(f[p].colorSpace=In)}}if(n!=null&&n.parent&&i!=null&&i.internal&&(e=n.object)!=null&&e.isObject3D&&o!==n.eventCount){const c=n.object,h=i.internal.interaction.indexOf(c);h>-1&&i.internal.interaction.splice(h,1),n.eventCount&&c.raycast!==null&&i.internal.interaction.push(c)}return n&&n.props.attach===void 0&&(n.object.isBufferGeometry?n.props.attach="geometry":n.object.isMaterial&&(n.props.attach="material")),n&&Do(n),s}function Do(s){var t;if(!s.parent)return;s.props.onUpdate==null||s.props.onUpdate(s.object);const e=(t=s.root)==null||t.getState==null?void 0:t.getState();e&&e.internal.frames===0&&e.invalidate()}function U3(s,t){s.manual||(mS(s)?(s.left=t.width/-2,s.right=t.width/2,s.top=t.height/2,s.bottom=t.height/-2):s.aspect=t.width/t.height,s.updateProjectionMatrix())}const ei=s=>s==null?void 0:s.isObject3D;function Pu(s){return(s.eventObject||s.object).uuid+"/"+s.index+s.instanceId}function yS(s,t,e,n){const i=e.get(t);i&&(e.delete(t),e.size===0&&(s.delete(n),i.target.releasePointerCapture(n)))}function N3(s,t){const{internal:e}=s.getState();e.interaction=e.interaction.filter(n=>n!==t),e.initialHits=e.initialHits.filter(n=>n!==t),e.hovered.forEach((n,i)=>{(n.eventObject===t||n.object===t)&&e.hovered.delete(i)}),e.capturedMap.forEach((n,i)=>{yS(e.capturedMap,t,n,i)})}function L3(s){function t(h){const{internal:f}=s.getState(),p=h.offsetX-f.initialClick[0],m=h.offsetY-f.initialClick[1];return Math.round(Math.sqrt(p*p+m*m))}function e(h){return h.filter(f=>["Move","Over","Enter","Out","Leave"].some(p=>{var m;return(m=f.__r3f)==null?void 0:m.handlers["onPointer"+p]}))}function n(h,f){const p=s.getState(),m=new Set,g=[],v=f?f(p.internal.interaction):p.internal.interaction;for(let y=0;y<v.length;y++){const E=so(v[y]);E&&(E.raycaster.camera=void 0)}p.previousRoot||p.events.compute==null||p.events.compute(h,p);function x(y){const E=so(y);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var A;E.events.compute==null||E.events.compute(h,E,(A=E.previousRoot)==null?void 0:A.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(y,!0):[]}let b=v.flatMap(x).sort((y,E)=>{const A=so(y.object),T=so(E.object);return!A||!T?y.distance-E.distance:T.events.priority-A.events.priority||y.distance-E.distance}).filter(y=>{const E=Pu(y);return m.has(E)?!1:(m.add(E),!0)});p.events.filter&&(b=p.events.filter(b,p));for(const y of b){let E=y.object;for(;E;){var S;(S=E.__r3f)!=null&&S.eventCount&&g.push({...y,eventObject:E}),E=E.parent}}if("pointerId"in h&&p.internal.capturedMap.has(h.pointerId))for(let y of p.internal.capturedMap.get(h.pointerId).values())m.has(Pu(y.intersection))||g.push(y.intersection);return g}function i(h,f,p,m){if(h.length){const g={stopped:!1};for(const v of h){let x=so(v.object);if(x||v.object.traverseAncestors(b=>{const S=so(b);if(S)return x=S,!1}),x){const{raycaster:b,pointer:S,camera:y,internal:E}=x,A=new B(S.x,S.y,0).unproject(y),T=C=>{var w,H;return(w=(H=E.capturedMap.get(C))==null?void 0:H.has(v.eventObject))!=null?w:!1},L=C=>{const w={intersection:v,target:f.target};E.capturedMap.has(C)?E.capturedMap.get(C).set(v.eventObject,w):E.capturedMap.set(C,new Map([[v.eventObject,w]])),f.target.setPointerCapture(C)},D=C=>{const w=E.capturedMap.get(C);w&&yS(E.capturedMap,v.eventObject,w,C)};let P={};for(let C in f){let w=f[C];typeof w!="function"&&(P[C]=w)}let O={...v,...P,pointer:S,intersections:h,stopped:g.stopped,delta:p,unprojectedPoint:A,ray:b.ray,camera:y,stopPropagation(){const C="pointerId"in f&&E.capturedMap.get(f.pointerId);if((!C||C.has(v.eventObject))&&(O.stopped=g.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(w=>w.eventObject===v.eventObject))){const w=h.slice(0,h.indexOf(v));o([...w,v])}},target:{hasPointerCapture:T,setPointerCapture:L,releasePointerCapture:D},currentTarget:{hasPointerCapture:T,setPointerCapture:L,releasePointerCapture:D},nativeEvent:f};if(m(O),g.stopped===!0)break}}}return h}function o(h){const{internal:f}=s.getState();for(const p of f.hovered.values())if(!h.length||!h.find(m=>m.object===p.object&&m.index===p.index&&m.instanceId===p.instanceId)){const g=p.eventObject.__r3f;if(f.hovered.delete(Pu(p)),g!=null&&g.eventCount){const v=g.handlers,x={...p,intersections:h};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function l(h,f){for(let p=0;p<f.length;p++){const m=f[p].__r3f;m==null||m.handlers.onPointerMissed==null||m.handlers.onPointerMissed(h)}}function c(h){switch(h){case"onPointerLeave":case"onPointerCancel":return()=>o([]);case"onLostPointerCapture":return f=>{const{internal:p}=s.getState();"pointerId"in f&&p.capturedMap.has(f.pointerId)&&requestAnimationFrame(()=>{p.capturedMap.has(f.pointerId)&&(p.capturedMap.delete(f.pointerId),o([]))})}}return function(p){const{onPointerMissed:m,internal:g}=s.getState();g.lastEvent.current=p;const v=h==="onPointerMove",x=h==="onClick"||h==="onContextMenu"||h==="onDoubleClick",S=n(p,v?e:void 0),y=x?t(p):0;h==="onPointerDown"&&(g.initialClick=[p.offsetX,p.offsetY],g.initialHits=S.map(A=>A.eventObject)),x&&!S.length&&y<=2&&(l(p,g.interaction),m&&m(p)),v&&o(S);function E(A){const T=A.eventObject,L=T.__r3f;if(!(L!=null&&L.eventCount))return;const D=L.handlers;if(v){if(D.onPointerOver||D.onPointerEnter||D.onPointerOut||D.onPointerLeave){const P=Pu(A),O=g.hovered.get(P);O?O.stopped&&A.stopPropagation():(g.hovered.set(P,A),D.onPointerOver==null||D.onPointerOver(A),D.onPointerEnter==null||D.onPointerEnter(A))}D.onPointerMove==null||D.onPointerMove(A)}else{const P=D[h];P?(!x||g.initialHits.includes(T))&&(l(p,g.interaction.filter(O=>!g.initialHits.includes(O))),P(A)):x&&g.initialHits.includes(T)&&l(p,g.interaction.filter(O=>!g.initialHits.includes(O)))}}i(S,p,y,E)}}return{handlePointer:c}}const ny=s=>!!(s!=null&&s.render),xS=ce.createContext(null),P3=(s,t)=>{const e=o3((c,h)=>{const f=new B,p=new B,m=new B;function g(y=h().camera,E=p,A=h().size){const{width:T,height:L,top:D,left:P}=A,O=T/L;E.isVector3?m.copy(E):m.set(...E);const C=y.getWorldPosition(f).distanceTo(m);if(mS(y))return{width:T/y.zoom,height:L/y.zoom,top:D,left:P,factor:1,distance:C,aspect:O};{const w=y.fov*Math.PI/180,H=2*Math.tan(w/2)*C,Q=H*(T/L);return{width:Q,height:H,top:D,left:P,factor:T/Q,distance:C,aspect:O}}}let v;const x=y=>c(E=>({performance:{...E.performance,current:y}})),b=new pt;return{set:c,get:h,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},scene:null,xr:null,invalidate:(y=1)=>s(h(),y),advance:(y,E)=>t(y,E,h()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new qm,pointer:b,mouse:b,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const y=h();v&&clearTimeout(v),y.performance.current!==y.performance.min&&x(y.performance.min),v=setTimeout(()=>x(h().performance.max),y.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:y=>c(E=>({...E,events:{...E.events,...y}})),setSize:(y,E,A=0,T=0)=>{const L=h().camera,D={width:y,height:E,top:A,left:T};c(P=>({size:D,viewport:{...P.viewport,...g(L,p,D)}}))},setDpr:y=>c(E=>{const A=vS(y);return{viewport:{...E.viewport,dpr:A,initialDpr:E.viewport.initialDpr||A}}}),setFrameloop:(y="always")=>{const E=h().clock;E.stop(),E.elapsedTime=0,y!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:y}))},previousRoot:void 0,internal:{interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,lastEvent:ce.createRef(),active:!1,frames:0,priority:0,subscribe:(y,E,A)=>{const T=h().internal;return T.priority=T.priority+(E>0?1:0),T.subscribers.push({ref:y,priority:E,store:A}),T.subscribers=T.subscribers.sort((L,D)=>L.priority-D.priority),()=>{const L=h().internal;L!=null&&L.subscribers&&(L.priority=L.priority-(E>0?1:0),L.subscribers=L.subscribers.filter(D=>D.ref!==y))}}}}}),n=e.getState();let i=n.size,o=n.viewport.dpr,l=n.camera;return e.subscribe(()=>{const{camera:c,size:h,viewport:f,gl:p,set:m}=e.getState();if(h.width!==i.width||h.height!==i.height||f.dpr!==o){i=h,o=f.dpr,U3(c,h),f.dpr>0&&p.setPixelRatio(f.dpr);const g=typeof HTMLCanvasElement<"u"&&p.domElement instanceof HTMLCanvasElement;p.setSize(h.width,h.height,g)}c!==l&&(l=c,m(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),e.subscribe(c=>s(c)),e};function SS(){const s=ce.useContext(xS);if(!s)throw new Error("R3F: Hooks can only be used within the Canvas component!");return s}function dD(s=e=>e,t){return SS()(s,t)}function pD(s,t=0){const e=SS(),n=e.getState().internal.subscribe,i=gS(s);return ac(()=>n(i,t,e),[t,n,e]),null}function I3(s){const t=d3(s);return t.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:ce.version}),t}const MS=0,bo={},O3=/^three(?=[A-Z])/,ff=s=>`${s[0].toUpperCase()}${s.slice(1)}`;let B3=0;const z3=s=>typeof s=="function";function F3(s){if(z3(s)){const t=`${B3++}`;return bo[t]=s,t}else Object.assign(bo,s)}function bS(s,t){const e=ff(s),n=bo[e];if(s!=="primitive"&&!n)throw new Error(`R3F: ${e} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(s==="primitive"&&!t.object)throw new Error("R3F: Primitives without 'object' are invalid!");if(t.args!==void 0&&!Array.isArray(t.args))throw new Error("R3F: The args prop must be an array!")}function H3(s,t,e){var n;return s=ff(s)in bo?s:s.replace(O3,""),bS(s,t),s==="primitive"&&(n=t.object)!=null&&n.__r3f&&delete t.object.__r3f,wh(t.object,e,s,t)}function V3(s){if(!s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?Rh(s.parent,s):ei(s.object)&&(s.object.visible=!1),s.isHidden=!0,Do(s)}}function ES(s){if(s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?Ch(s.parent,s):ei(s.object)&&s.props.visible!==!1&&(s.object.visible=!0),s.isHidden=!1,Do(s)}}function tg(s,t,e){const n=t.root.getState();if(!(!s.parent&&s.object!==n.scene)){if(!t.object){var i,o;const l=bo[ff(t.type)];t.object=(i=t.props.object)!=null?i:new l(...(o=t.props.args)!=null?o:[]),t.object.__r3f=t}if(ca(t.object,t.props),t.props.attach)Ch(s,t);else if(ei(t.object)&&ei(s.object)){const l=s.object.children.indexOf(e==null?void 0:e.object);if(e&&l!==-1){const c=s.object.children.indexOf(t.object);if(c!==-1){s.object.children.splice(c,1);const h=c<l?l-1:l;s.object.children.splice(h,0,t.object)}else t.object.parent=s.object,s.object.children.splice(l,0,t.object),t.object.dispatchEvent({type:"added"}),s.object.dispatchEvent({type:"childadded",child:t.object})}else s.object.add(t.object)}for(const l of t.children)tg(t,l);Do(t)}}function Ip(s,t){t&&(t.parent=s,s.children.push(t),tg(s,t))}function iy(s,t,e){if(!t||!e)return;t.parent=s;const n=s.children.indexOf(e);n!==-1?s.children.splice(n,0,t):s.children.push(t),tg(s,t,e)}function TS(s){if(typeof s.dispose=="function"){const t=()=>{try{s.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT<"u"?t():$_.unstable_scheduleCallback($_.unstable_IdlePriority,t)}}function am(s,t,e){if(!t)return;t.parent=null;const n=s.children.indexOf(t);n!==-1&&s.children.splice(n,1),t.props.attach?Rh(s,t):ei(t.object)&&ei(s.object)&&(s.object.remove(t.object),N3(pS(t),t.object));const i=t.props.dispose!==null&&e!==!1;for(let o=t.children.length-1;o>=0;o--){const l=t.children[o];am(t,l,i)}t.children.length=0,delete t.object.__r3f,i&&t.type!=="primitive"&&t.object.type!=="Scene"&&TS(t.object),e===void 0&&Do(t)}function G3(s,t){for(const e of[s,s.alternate])if(e!==null)if(typeof e.ref=="function"){e.refCleanup==null||e.refCleanup();const n=e.ref(t);typeof n=="function"&&(e.refCleanup=n)}else e.ref&&(e.ref.current=t)}const Hu=[];function k3(){for(const[e]of Hu){const n=e.parent;if(n){e.props.attach?Rh(n,e):ei(e.object)&&ei(n.object)&&n.object.remove(e.object);for(const i of e.children)i.props.attach?Rh(e,i):ei(i.object)&&ei(e.object)&&e.object.remove(i.object)}e.isHidden&&ES(e),e.object.__r3f&&delete e.object.__r3f,e.type!=="primitive"&&TS(e.object)}for(const[e,n,i]of Hu){e.props=n;const o=e.parent;if(o){var s,t;const l=bo[ff(e.type)];e.object=(s=e.props.object)!=null?s:new l(...(t=e.props.args)!=null?t:[]),e.object.__r3f=e,G3(i,e.object),ca(e.object,e.props),e.props.attach?Ch(o,e):ei(e.object)&&ei(o.object)&&o.object.add(e.object);for(const c of e.children)c.props.attach?Ch(e,c):ei(c.object)&&ei(e.object)&&e.object.add(c.object);Do(e)}}Hu.length=0}const Op=()=>{},sy={};let Iu=MS;const W3=0,X3=4,rm=I3({isPrimaryRenderer:!1,warnsIfNotActing:!1,supportsMutation:!0,supportsPersistence:!1,supportsHydration:!1,createInstance:H3,removeChild:am,appendChild:Ip,appendInitialChild:Ip,insertBefore:iy,appendChildToContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||Ip(e,t)},removeChildFromContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||am(e,t)},insertInContainerBefore(s,t,e){const n=s.getState().scene.__r3f;!t||!e||!n||iy(n,t,e)},getRootHostContext:()=>sy,getChildHostContext:()=>sy,commitUpdate(s,t,e,n,i){var o,l,c;bS(t,n);let h=!1;if((s.type==="primitive"&&e.object!==n.object||((o=n.args)==null?void 0:o.length)!==((l=e.args)==null?void 0:l.length)||(c=n.args)!=null&&c.some((p,m)=>{var g;return p!==((g=e.args)==null?void 0:g[m])}))&&(h=!0),h)Hu.push([s,{...n},i]);else{const p=C3(s,n);Object.keys(p).length&&(Object.assign(s.props,p),ca(s.object,p))}(i.sibling===null||(i.flags&X3)===W3)&&k3()},finalizeInitialChildren:()=>!1,commitMount(){},getPublicInstance:s=>s==null?void 0:s.object,prepareForCommit:()=>null,preparePortalMount:s=>wh(s.getState().scene,s,"",{}),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance:V3,unhideInstance:ES,createTextInstance:Op,hideTextInstance:Op,unhideTextInstance:Op,scheduleTimeout:typeof setTimeout=="function"?setTimeout:void 0,cancelTimeout:typeof clearTimeout=="function"?clearTimeout:void 0,noTimeout:-1,getInstanceFromNode:()=>null,beforeActiveInstanceBlur(){},afterActiveInstanceBlur(){},detachDeletedInstance(){},prepareScopeUpdate(){},getInstanceFromScope:()=>null,shouldAttemptEagerTransition:()=>!1,trackSchedulerEvent:()=>{},resolveEventType:()=>null,resolveEventTimeStamp:()=>-1.1,requestPostPaintCallback(){},maySuspendCommit:()=>!1,preloadInstance:()=>!0,startSuspendingCommit(){},suspendInstance(){},waitForCommitToBeReady:()=>null,NotPendingTransition:null,HostTransitionContext:ce.createContext(null),setCurrentUpdatePriority(s){Iu=s},getCurrentUpdatePriority(){return Iu},resolveUpdatePriority(){var s;if(Iu!==MS)return Iu;switch(typeof window<"u"&&((s=window.event)==null?void 0:s.type)){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Fu.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Fu.ContinuousEventPriority;default:return Fu.DefaultEventPriority}},resetFormInstance(){}}),cr=new Map,ao={objects:"shallow",strict:!1};function q3(s,t){if(!t&&typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement&&s.parentElement){const{width:e,height:n,top:i,left:o}=s.parentElement.getBoundingClientRect();return{width:e,height:n,top:i,left:o}}else if(!t&&typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas)return{width:s.width,height:s.height,top:0,left:0};return{width:0,height:0,top:0,left:0,...t}}function Y3(s){const t=cr.get(s),e=t==null?void 0:t.fiber,n=t==null?void 0:t.store;t&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,o=n||P3(cm,ry),l=e||rm.createContainer(o,Fu.ConcurrentRoot,null,!1,null,"",i,i,i,null);t||cr.set(s,{fiber:l,store:o});let c,h,f=!1,p=null;return{async configure(m={}){let g;p=new Promise(mt=>g=mt);let{gl:v,size:x,scene:b,events:S,onCreated:y,shadows:E=!1,linear:A=!1,flat:T=!1,legacy:L=!1,orthographic:D=!1,frameloop:P="always",dpr:O=[1,2],performance:C,raycaster:w,camera:H,onPointerMissed:Q}=m,X=o.getState(),J=X.gl;if(!X.gl){const mt={canvas:s,powerPreference:"high-performance",antialias:!0,alpha:!0},wt=typeof v=="function"?await v(mt):v;ny(wt)?J=wt:J=new uS({...mt,...v}),X.set({gl:J})}let at=X.raycaster;at||X.set({raycaster:at=new nS});const{params:F,...q}=w||{};if(Qe.equ(q,at,ao)||ca(at,{...q}),Qe.equ(F,at.params,ao)||ca(at,{params:{...at.params,...F}}),!X.camera||X.camera===h&&!Qe.equ(h,H,ao)){h=H;const mt=H==null?void 0:H.isCamera,wt=mt?H:D?new sc(0,0,0,0,.1,1e3):new xn(75,0,.1,1e3);mt||(wt.position.z=5,H&&(ca(wt,H),wt.manual||("aspect"in H||"left"in H||"right"in H||"bottom"in H||"top"in H)&&(wt.manual=!0,wt.updateProjectionMatrix())),!X.camera&&!(H!=null&&H.rotation)&&wt.lookAt(0,0,0)),X.set({camera:wt}),at.camera=wt}if(!X.scene){let mt;b!=null&&b.isScene?(mt=b,wh(mt,o,"",{})):(mt=new Am,wh(mt,o,"",{}),b&&ca(mt,b)),X.set({scene:mt})}S&&!X.events.handlers&&X.set({events:S(o)});const G=q3(s,x);if(Qe.equ(G,X.size,ao)||X.setSize(G.width,G.height,G.top,G.left),O&&X.viewport.dpr!==vS(O)&&X.setDpr(O),X.frameloop!==P&&X.setFrameloop(P),X.onPointerMissed||X.set({onPointerMissed:Q}),C&&!Qe.equ(C,X.performance,ao)&&X.set(mt=>({performance:{...mt.performance,...C}})),!X.xr){var st;const mt=($,gt)=>{const Wt=o.getState();Wt.frameloop!=="never"&&ry($,!0,Wt,gt)},wt=()=>{const $=o.getState();$.gl.xr.enabled=$.gl.xr.isPresenting,$.gl.xr.setAnimationLoop($.gl.xr.isPresenting?mt:null),$.gl.xr.isPresenting||cm($)},jt={connect(){const $=o.getState().gl;$.xr.addEventListener("sessionstart",wt),$.xr.addEventListener("sessionend",wt)},disconnect(){const $=o.getState().gl;$.xr.removeEventListener("sessionstart",wt),$.xr.removeEventListener("sessionend",wt)}};typeof((st=J.xr)==null?void 0:st.addEventListener)=="function"&&jt.connect(),X.set({xr:jt})}if(J.shadowMap){const mt=J.shadowMap.enabled,wt=J.shadowMap.type;if(J.shadowMap.enabled=!!E,Qe.boo(E))J.shadowMap.type=xl;else if(Qe.str(E)){var lt;const jt={basic:fy,percentage:Nh,soft:xl,variance:Wi};J.shadowMap.type=(lt=jt[E])!=null?lt:xl}else Qe.obj(E)&&Object.assign(J.shadowMap,E);(mt!==J.shadowMap.enabled||wt!==J.shadowMap.type)&&(J.shadowMap.needsUpdate=!0)}return Ae.enabled=!L,f||(J.outputColorSpace=A?fa:In,J.toneMapping=T?rs:hm),X.legacy!==L&&X.set(()=>({legacy:L})),X.linear!==A&&X.set(()=>({linear:A})),X.flat!==T&&X.set(()=>({flat:T})),v&&!Qe.fun(v)&&!ny(v)&&!Qe.equ(v,J,ao)&&ca(J,v),c=y,f=!0,g(),this},render(m){return!f&&!p&&this.configure(),p.then(()=>{rm.updateContainer(ge.jsx(Z3,{store:o,children:m,onCreated:c,rootElement:s}),l,null,()=>{})}),o},unmount(){AS(s)}}}function Z3({store:s,children:t,onCreated:e,rootElement:n}){return ac(()=>{const i=s.getState();i.set(o=>({internal:{...o.internal,active:!0}})),e&&e(i),s.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),ge.jsx(xS.Provider,{value:s,children:t})}function AS(s,t){const e=cr.get(s),n=e==null?void 0:e.fiber;if(n){const i=e==null?void 0:e.store.getState();i&&(i.internal.active=!1),rm.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var o,l,c,h;i.events.disconnect==null||i.events.disconnect(),(o=i.gl)==null||(l=o.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(h=i.gl)!=null&&h.xr&&i.xr.disconnect(),T3(i.scene),cr.delete(s)}catch{}},500)})}}const j3=new Set,K3=new Set,J3=new Set;function Bp(s,t){if(s.size)for(const{callback:e}of s.values())e(t)}function Dl(s,t){switch(s){case"before":return Bp(j3,t);case"after":return Bp(K3,t);case"tail":return Bp(J3,t)}}let zp,Fp;function om(s,t,e){let n=t.clock.getDelta();t.frameloop==="never"&&typeof s=="number"&&(n=s-t.clock.elapsedTime,t.clock.oldTime=t.clock.elapsedTime,t.clock.elapsedTime=s),zp=t.internal.subscribers;for(let i=0;i<zp.length;i++)Fp=zp[i],Fp.ref.current(Fp.store.getState(),n,e);return!t.internal.priority&&t.gl.render&&t.gl.render(t.scene,t.camera),t.internal.frames=Math.max(0,t.internal.frames-1),t.frameloop==="always"?1:t.internal.frames}let Dh=!1,lm=!1,Hp,ay,ro;function wS(s){ay=requestAnimationFrame(wS),Dh=!0,Hp=0,Dl("before",s),lm=!0;for(const e of cr.values()){var t;ro=e.store.getState(),ro.internal.active&&(ro.frameloop==="always"||ro.internal.frames>0)&&!((t=ro.gl.xr)!=null&&t.isPresenting)&&(Hp+=om(s,ro))}if(lm=!1,Dl("after",s),Hp===0)return Dl("tail",s),Dh=!1,cancelAnimationFrame(ay)}function cm(s,t=1){var e;if(!s)return cr.forEach(n=>cm(n.store.getState(),t));(e=s.gl.xr)!=null&&e.isPresenting||!s.internal.active||s.frameloop==="never"||(t>1?s.internal.frames=Math.min(60,s.internal.frames+t):lm?s.internal.frames=2:s.internal.frames=1,Dh||(Dh=!0,requestAnimationFrame(wS)))}function ry(s,t=!0,e,n){if(t&&Dl("before",s),e)om(s,e,n);else for(const i of cr.values())om(s,i.store.getState());t&&Dl("after",s)}const Vp={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function Q3(s){const{handlePointer:t}=L3(s);return{priority:1,enabled:!0,compute(e,n,i){n.pointer.set(e.offsetX/n.size.width*2-1,-(e.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Vp).reduce((e,n)=>({...e,[n]:t(n)}),{}),update:()=>{var e;const{events:n,internal:i}=s.getState();(e=i.lastEvent)!=null&&e.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:e=>{const{set:n,events:i}=s.getState();if(i.disconnect==null||i.disconnect(),n(o=>({events:{...o.events,connected:e}})),i.handlers)for(const o in i.handlers){const l=i.handlers[o],[c,h]=Vp[o];e.addEventListener(c,l,{passive:h})}},disconnect:()=>{const{set:e,events:n}=s.getState();if(n.connected){if(n.handlers)for(const i in n.handlers){const o=n.handlers[i],[l]=Vp[i];n.connected.removeEventListener(l,o)}e(i=>({events:{...i.events,connected:void 0}}))}}}}function oy(s,t){let e;return(...n)=>{window.clearTimeout(e),e=window.setTimeout(()=>s(...n),t)}}function $3({debounce:s,scroll:t,polyfill:e,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=e||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[o,l]=ce.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=ce.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:o,orientationHandler:null}),h=s?typeof s=="number"?s:s.scroll:null,f=s?typeof s=="number"?s:s.resize:null,p=ce.useRef(!1);ce.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,g,v]=ce.useMemo(()=>{const y=()=>{if(!c.current.element)return;const{left:E,top:A,width:T,height:L,bottom:D,right:P,x:O,y:C}=c.current.element.getBoundingClientRect(),w={left:E,top:A,width:T,height:L,bottom:D,right:P,x:O,y:C};c.current.element instanceof HTMLElement&&n&&(w.height=c.current.element.offsetHeight,w.width=c.current.element.offsetWidth),Object.freeze(w),p.current&&!iD(c.current.lastBounds,w)&&l(c.current.lastBounds=w)};return[y,f?oy(y,f):y,h?oy(y,h):y]},[l,n,h,f]);function x(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(y=>y.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function b(){c.current.element&&(c.current.resizeObserver=new i(v),c.current.resizeObserver.observe(c.current.element),t&&c.current.scrollContainers&&c.current.scrollContainers.forEach(y=>y.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const S=y=>{!y||y===c.current.element||(x(),c.current.element=y,c.current.scrollContainers=CS(y),b())};return eD(v,!!t),tD(g),ce.useEffect(()=>{x(),b()},[t,v,g]),ce.useEffect(()=>x,[]),[S,o,m]}function tD(s){ce.useEffect(()=>{const t=s;return window.addEventListener("resize",t),()=>void window.removeEventListener("resize",t)},[s])}function eD(s,t){ce.useEffect(()=>{if(t){const e=s;return window.addEventListener("scroll",e,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",e,!0)}},[s,t])}function CS(s){const t=[];if(!s||s===document.body)return t;const{overflow:e,overflowX:n,overflowY:i}=window.getComputedStyle(s);return[e,n,i].some(o=>o==="auto"||o==="scroll")&&t.push(s),[...t,...CS(s.parentElement)]}const nD=["x","y","top","bottom","left","right","width","height"],iD=(s,t)=>nD.every(e=>s[e]===t[e]);function sD({ref:s,children:t,fallback:e,resize:n,style:i,gl:o,events:l=Q3,eventSource:c,eventPrefix:h,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:b,performance:S,raycaster:y,camera:E,scene:A,onPointerMissed:T,onCreated:L,...D}){ce.useMemo(()=>F3(Z2),[]);const P=M3(),[O,C]=$3({scroll:!0,debounce:{scroll:50,resize:0},...n}),w=ce.useRef(null),H=ce.useRef(null);ce.useImperativeHandle(s,()=>w.current);const Q=gS(T),[X,J]=ce.useState(!1),[at,F]=ce.useState(!1);if(X)throw X;if(at)throw at;const q=ce.useRef(null);ac(()=>{const st=w.current;if(C.width>0&&C.height>0&&st){q.current||(q.current=Y3(st));async function lt(){await q.current.configure({gl:o,scene:A,events:l,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:b,performance:S,raycaster:y,camera:E,size:C,onPointerMissed:(...mt)=>Q.current==null?void 0:Q.current(...mt),onCreated:mt=>{mt.events.connect==null||mt.events.connect(c?x3(c)?c.current:c:H.current),h&&mt.setEvents({compute:(wt,jt)=>{const $=wt[h+"X"],gt=wt[h+"Y"];jt.pointer.set($/jt.size.width*2-1,-(gt/jt.size.height)*2+1),jt.raycaster.setFromCamera(jt.pointer,jt.camera)}}),L==null||L(mt)}}),q.current.render(ge.jsx(P,{children:ge.jsx(E3,{set:F,children:ge.jsx(ce.Suspense,{fallback:ge.jsx(b3,{set:J}),children:t??null})})}))}lt()}}),ce.useEffect(()=>{const st=w.current;if(st)return()=>AS(st)},[]);const G=c?"none":"auto";return ge.jsx("div",{ref:H,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:G,...i},...D,children:ge.jsx("div",{ref:O,style:{width:"100%",height:"100%"},children:ge.jsx("canvas",{ref:w,style:{display:"block"},children:e})})})}function aD(s){return ge.jsx(fS,{children:ge.jsx(sD,{...s})})}const rD=cy.lazy(()=>Rb(()=>import("./globe.js"),__vite__mapDeps([0,1,2,3])).then(s=>({default:s.World})));function oD(){const s={pointSize:4,globeColor:"#062056",showAtmosphere:!0,atmosphereColor:"#FFFFFF",atmosphereAltitude:.1,emissive:"#062056",emissiveIntensity:.1,shininess:.9,polygonColor:"rgba(255,255,255,0.7)",ambientLight:"#38bdf8",directionalLeftLight:"#ffffff",directionalTopLight:"#ffffff",pointLight:"#ffffff",arcTime:1e3,arcLength:.9,rings:1,maxRings:3,initialPosition:{lat:22.3193,lng:114.1694},autoRotate:!0,autoRotateSpeed:.5},t=["#06b6d4","#3b82f6","#6366f1"],e=[{order:1,startLat:-19.885592,startLng:-43.951191,endLat:-22.9068,endLng:-43.1729,arcAlt:.1,color:t[Math.floor(Math.random()*(t.length-1))]},{order:1,startLat:28.6139,startLng:77.209,endLat:3.139,endLng:101.6869,arcAlt:.2,color:t[Math.floor(Math.random()*(t.length-1))]},{order:1,startLat:-19.885592,startLng:-43.951191,endLat:-1.303396,endLng:36.852443,arcAlt:.5,color:t[Math.floor(Math.random()*(t.length-1))]},{order:2,startLat:1.3521,startLng:103.8198,endLat:35.6762,endLng:139.6503,arcAlt:.2,color:t[Math.floor(Math.random()*(t.length-1))]},{order:2,startLat:51.5072,startLng:-.1276,endLat:3.139,endLng:101.6869,arcAlt:.3,color:t[Math.floor(Math.random()*(t.length-1))]},{order:2,startLat:-15.785493,startLng:-47.909029,endLat:36.162809,endLng:-115.119411,arcAlt:.3,color:t[Math.floor(Math.random()*(t.length-1))]},{order:3,startLat:-33.8688,startLng:151.2093,endLat:22.3193,endLng:114.1694,arcAlt:.3,color:t[Math.floor(Math.random()*(t.length-1))]},{order:3,startLat:21.3099,startLng:-157.8581,endLat:40.7128,endLng:-74.006,arcAlt:.3,color:t[Math.floor(Math.random()*(t.length-1))]},{order:3,startLat:-6.2088,startLng:106.8456,endLat:51.5072,endLng:-.1276,arcAlt:.3,color:t[Math.floor(Math.random()*(t.length-1))]},{order:4,startLat:11.986597,startLng:8.571831,endLat:-15.595412,endLng:-56.05918,arcAlt:.5,color:t[Math.floor(Math.random()*(t.length-1))]},{order:4,startLat:-34.6037,startLng:-58.3816,endLat:22.3193,endLng:114.1694,arcAlt:.7,color:t[Math.floor(Math.random()*(t.length-1))]},{order:4,startLat:51.5072,startLng:-.1276,endLat:48.8566,endLng:-2.3522,arcAlt:.1,color:t[Math.floor(Math.random()*(t.length-1))]},{order:5,startLat:14.5995,startLng:120.9842,endLat:51.5072,endLng:-.1276,arcAlt:.3,color:t[Math.floor(Math.random()*(t.length-1))]},{order:5,startLat:1.3521,startLng:103.8198,endLat:-33.8688,endLng:151.2093,arcAlt:.2,color:t[Math.floor(Math.random()*(t.length-1))]},{order:5,startLat:34.0522,startLng:-118.2437,endLat:48.8566,endLng:-2.3522,arcAlt:.2,color:t[Math.floor(Math.random()*(t.length-1))]}];return ge.jsx("div",{className:"flex flex-row items-center justify-center py-20 h-screen md:h-auto dark:bg-black bg-white relative w-full",children:ge.jsxs("div",{className:"max-w-7xl mx-auto w-full relative overflow-hidden h-full md:h-[40rem] px-4",children:[ge.jsxs(Db.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:1},className:"div",children:[ge.jsx("h2",{className:"text-center text-xl md:text-4xl font-bold text-black dark:text-white",children:"Let's Build Something Together"}),ge.jsx("p",{className:"text-center text-base md:text-lg font-normal text-neutral-700 dark:text-neutral-200 max-w-md mt-2 mx-auto",children:"I'm available for freelance projects and full-time opportunities worldwide."})]}),ge.jsx("div",{className:"absolute w-full -bottom-20 h-72 md:h-full z-10",children:ge.jsx(ce.Suspense,{fallback:ge.jsx("div",{className:"text-center text-white",children:"Loading Globe..."}),children:ge.jsx(aD,{children:ge.jsx(rD,{data:e,globeConfig:s})})})})]})})}const lD=()=>{const s=document.querySelector('input[name="csrfmiddlewaretoken"]');return s?s.value:""},cD=()=>{const[s,t]=ce.useState({name:"",email:"",message:""}),[e,n]=ce.useState({message:"",type:""}),i=l=>{t({...s,[l.target.name]:l.target.value})},o=l=>{l.preventDefault(),n({message:"Submitting...",type:"info"}),fetch("/api/contact-submit/",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":lD()},body:JSON.stringify(s)}).then(c=>c.json()).then(c=>{if(c.status==="success")n({message:c.message,type:"success"}),t({name:"",email:"",message:""});else{const h=Object.values(c.errors||{}).flat().join(" ");n({message:`Error: ${h}`,type:"error"})}}).catch(c=>{console.error("Error submitting form:",c),n({message:"A network error occurred. Please try again.",type:"error"})})};return ge.jsxs("div",{className:"w-full",children:[ge.jsx("div",{className:"h-screen w-full",children:ge.jsx(oD,{})}),ge.jsx("div",{className:"w-full max-w-lg mx-auto p-4 sm:p-6 md:p-8 -mt-48 relative z-10",children:ge.jsxs("div",{className:"bg-brand-white p-6 md:p-8 rounded-lg shadow-2xl",children:[ge.jsx("h2",{className:"text-3xl font-bold text-center mb-6 text-brand-charcoal",children:"Send Me a Message"}),ge.jsxs("form",{onSubmit:o,className:"space-y-4",children:[ge.jsxs("div",{children:[ge.jsx("label",{htmlFor:"name",className:"block text-sm font-medium text-gray-700",children:"Your Name"}),ge.jsx("input",{type:"text",id:"name",name:"name",value:s.name,onChange:i,className:"mt-1 block w-full py-2 px-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm",required:!0})]}),ge.jsxs("div",{children:[ge.jsx("label",{htmlFor:"email",className:"block text-sm font-medium text-gray-700",children:"Your Email"}),ge.jsx("input",{type:"email",id:"email",name:"email",value:s.email,onChange:i,className:"mt-1 block w-full py-2 px-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm",required:!0})]}),ge.jsxs("div",{children:[ge.jsx("label",{htmlFor:"message",className:"block text-sm font-medium text-gray-700",children:"Your Message"}),ge.jsx("textarea",{id:"message",name:"message",rows:5,value:s.message,onChange:i,className:"mt-1 block w-full py-2 px-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm",required:!0})]}),ge.jsx("div",{children:ge.jsx("button",{type:"submit",className:"w-full cta-button-primary mt-2",children:"Send Message"})}),e.message&&ge.jsx("p",{className:`mt-4 text-center text-sm ${e.type==="success"?"text-green-600":"text-red-600"}`,children:e.message})]})]})})]})},mD=Object.freeze(Object.defineProperty({__proto__:null,default:cD},Symbol.toStringTag,{value:"Module"}));export{yi as $,kx as A,_e as B,cD as C,ss as D,qx as E,wo as F,co as G,To as H,So as I,Gx as J,jx as K,dn as L,hn as M,rs as N,Ly as O,Nh as P,Py as Q,bm as R,ec as S,fT as T,Iy as U,B as V,Ni as W,hm as X,By as Y,zy as Z,pe as _,kh as a,uy as a$,Ae as a0,sE as a1,Wi as a2,sc as a3,zn as a4,ir as a5,cs as a6,xn as a7,Qx as a8,Co as a9,oo as aA,fm as aB,Tn as aC,Ky as aD,jy as aE,Jy as aF,Zy as aG,Sm as aH,Yy as aI,Qy as aJ,qy as aK,Bl as aL,He as aM,Rs as aN,ii as aO,my as aP,py as aQ,by as aR,Ty as aS,Gu as aT,Sy as aU,My as aV,Ey as aW,Ay as aX,Vu as aY,xy as aZ,yy as a_,Dm as aa,Li as ab,mo as ac,Os as ad,vo as ae,go as af,dy as ag,la as ah,_y as ai,Ql as aj,si as ak,Bu as al,Ul as am,Nl as an,Eo as ao,oa as ap,Fl as aq,ho as ar,tx as as,Uh as at,Ph as au,Pl as av,Ui as aw,Ll as ax,as as ay,Sl as az,ma as b,Px as b$,Gp as b0,hy as b1,Ns as b2,Xp as b3,Wp as b4,kp as b5,ju as b6,Zu as b7,Yu as b8,qu as b9,eh as bA,nh as bB,ih as bC,sh as bD,ah as bE,rh as bF,oh as bG,lh as bH,ch as bI,uh as bJ,hh as bK,fh as bL,dh as bM,ph as bN,mh as bO,gh as bP,Al as bQ,ym as bR,yh as bS,xh as bT,Sh as bU,os as bV,Dx as bW,Bm as bX,Rx as bY,Ux as bZ,Nx as b_,rr as ba,Xu as bb,Wu as bc,ku as bd,Ih as be,Oh as bf,mm as bg,dm as bh,pm as bi,po as bj,gm as bk,vm as bl,Bh as bm,Kl as bn,_m as bo,zh as bp,Fh as bq,Ml as br,bl as bs,El as bt,Tl as bu,Ku as bv,Ju as bw,Qu as bx,$u as by,th as bz,ae as c,Zi as c$,Yn as c0,Ix as c1,Rm as c2,wm as c3,wx as c4,E1 as c5,Km as c6,NE as c7,Is as c8,ha as c9,Ja as cA,vy as cB,gy as cC,s1 as cD,zb as cE,Ny as cF,Uy as cG,jl as cH,Ne as cI,Bb as cJ,ur as cK,Vh as cL,rx as cM,ax as cN,Kx as cO,Ax as cP,Bn as cQ,Yi as cR,Xi as cS,sx as cT,Ut as cU,qT as cV,tf as cW,oA as cX,da as cY,cf as cZ,yx as c_,fy as ca,An as cb,pa as cc,Xy as cd,zl as ce,VT as cf,Lh as cg,_o as ch,Tm as ci,Em as cj,$y as ck,nE as cl,eE as cm,iE as cn,$b as co,tE as cp,Qb as cq,Yp as cr,Jb as cs,jb as ct,Zb as cu,Yb as cv,qb as cw,Kb as cx,Xb as cy,Wb as cz,Lx as d,us as d0,Jh as d1,px as d2,ye as d3,kT as d4,Ub as d5,Nb as d6,Ao as d7,dD as d8,pD as d9,aD as da,F3 as db,mD as dc,In as e,qt as f,ke as g,qh as h,or as i,Fb as j,Vb as k,Hb as l,an as m,Jl as n,zt as o,Ue as p,Am as q,pt as r,fa as s,On as t,Zh as u,qn as v,Ps as w,Wx as x,Xx as y,Yx as z};
